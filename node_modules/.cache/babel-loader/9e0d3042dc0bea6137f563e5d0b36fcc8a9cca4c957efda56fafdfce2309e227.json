{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgoldfarb/Desktop/MLBGamePredictor/web/web/src/pages/PredictionHistoryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionHistoryPage = () => {\n  _s();\n  const [predictionHistory, setPredictionHistory] = useState(null);\n  const [teamRecords, setTeamRecords] = useState(null);\n  useEffect(() => {\n    const fetchPredictionHistory = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/prediction-history');\n        setPredictionHistory(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const fetchTeamRecords = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/team-records');\n        setTeamRecords(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPredictionHistory();\n    fetchTeamRecords();\n  }, []);\n  const formatPredictionHistory = predictionHistory => {\n    if (!predictionHistory) {\n      return null;\n    }\n    const {\n      predictionDate,\n      numerator,\n      denominator\n    } = predictionHistory;\n    const formattedDate = predictionDate.substring(5).replace('-', '/');\n    const formattedPrediction = `${formattedDate}: ${numerator}/${denominator}`;\n    return formattedPrediction;\n  };\n  const formatTeamRecords = teamRecords => {\n    if (!teamRecords || teamRecords.length === 0) {\n      return null;\n    }\n    const sortedTeamRecords = teamRecords.sort((a, b) => a.teamName.localeCompare(b.teamName)); // Sort the teamRecords array alphabetically by teamName\n    return sortedTeamRecords.map(teamRecord => {\n      const {\n        teamName,\n        numerator,\n        denominator,\n        percentage\n      } = teamRecord;\n      const formattedPercentage = (percentage * 100).toFixed(2); // Multiply by 100 and format to 2 decimal places\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: teamName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [numerator, \"/\", denominator]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [formattedPercentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, teamName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction-history-container text-white text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-4\",\n      children: \"Prediction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), predictionHistory && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"prediction-list\",\n      children: formatPredictionHistory(predictionHistory).split('\\n').map((prediction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-2\",\n        children: prediction\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), teamRecords && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mt-4\",\n        children: \"Team Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"team-records-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Team Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Percentage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: formatTeamRecords(teamRecords)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictionHistoryPage, \"QmV/kLxtjqR/0Roickg6H0cRXCk=\");\n_c = PredictionHistoryPage;\nexport default PredictionHistoryPage;\nvar _c;\n$RefreshReg$(_c, \"PredictionHistoryPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PredictionHistoryPage","_s","predictionHistory","setPredictionHistory","teamRecords","setTeamRecords","fetchPredictionHistory","response","get","data","error","console","fetchTeamRecords","formatPredictionHistory","predictionDate","numerator","denominator","formattedDate","substring","replace","formattedPrediction","formatTeamRecords","length","sortedTeamRecords","sort","a","b","teamName","localeCompare","map","teamRecord","percentage","formattedPercentage","toFixed","children","fileName","_jsxFileName","lineNumber","columnNumber","className","split","prediction","index","_c","$RefreshReg$"],"sources":["/Users/michaelgoldfarb/Desktop/MLBGamePredictor/web/web/src/pages/PredictionHistoryPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst PredictionHistoryPage = () => {\n  const [predictionHistory, setPredictionHistory] = useState(null);\n  const [teamRecords, setTeamRecords] = useState(null);\n\n  useEffect(() => {\n    const fetchPredictionHistory = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/prediction-history');\n        setPredictionHistory(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const fetchTeamRecords = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/team-records');\n        setTeamRecords(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchPredictionHistory();\n    fetchTeamRecords();\n  }, []);\n\n  const formatPredictionHistory = (predictionHistory) => {\n    if (!predictionHistory) {\n      return null;\n    }\n    const { predictionDate, numerator, denominator } = predictionHistory;\n    const formattedDate = predictionDate.substring(5).replace('-', '/');\n    const formattedPrediction = `${formattedDate}: ${numerator}/${denominator}`;\n    return formattedPrediction;\n  };\n\n  const formatTeamRecords = (teamRecords) => {\n    if (!teamRecords || teamRecords.length === 0) {\n      return null;\n    }\n    const sortedTeamRecords = teamRecords.sort((a, b) => a.teamName.localeCompare(b.teamName)); // Sort the teamRecords array alphabetically by teamName\n    return sortedTeamRecords.map((teamRecord) => {\n      const { teamName, numerator, denominator, percentage } = teamRecord;\n      const formattedPercentage = (percentage * 100).toFixed(2); // Multiply by 100 and format to 2 decimal places\n      return (\n        <tr key={teamName}>\n          <td>{teamName}</td>\n          <td>{numerator}/{denominator}</td>\n          <td>{formattedPercentage}%</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div className=\"prediction-history-container text-white text-center\">\n      <h1 className=\"text-4xl font-bold mb-4\">Prediction History</h1>\n      {predictionHistory && (\n        <ul className=\"prediction-list\">\n          {formatPredictionHistory(predictionHistory).split('\\n').map((prediction, index) => (\n            <li key={index} className=\"mb-2\">\n              {prediction}\n            </li>\n          ))}\n        </ul>\n      )}\n      {teamRecords && (\n        <div>\n          <h2 className=\"text-2xl font-bold mt-4\">Team Records</h2>\n          <table className=\"team-records-table\">\n            <thead>\n              <tr>\n                <th>Team Name</th>\n                <th>Record</th>\n                <th>Percentage</th>\n              </tr>\n            </thead>\n            <tbody>{formatTeamRecords(teamRecords)}</tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PredictionHistoryPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMW,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACzC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,8CAA8C,CAAC;QAChFL,oBAAoB,CAACI,QAAQ,CAACE,IAAI,CAAC;MACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAED,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAML,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,wCAAwC,CAAC;QAC1EH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDJ,sBAAsB,CAAC,CAAC;IACxBM,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,uBAAuB,GAAIX,iBAAiB,IAAK;IACrD,IAAI,CAACA,iBAAiB,EAAE;MACtB,OAAO,IAAI;IACb;IACA,MAAM;MAAEY,cAAc;MAAEC,SAAS;MAAEC;IAAY,CAAC,GAAGd,iBAAiB;IACpE,MAAMe,aAAa,GAAGH,cAAc,CAACI,SAAS,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACnE,MAAMC,mBAAmB,GAAI,GAAEH,aAAc,KAAIF,SAAU,IAAGC,WAAY,EAAC;IAC3E,OAAOI,mBAAmB;EAC5B,CAAC;EAED,MAAMC,iBAAiB,GAAIjB,WAAW,IAAK;IACzC,IAAI,CAACA,WAAW,IAAIA,WAAW,CAACkB,MAAM,KAAK,CAAC,EAAE;MAC5C,OAAO,IAAI;IACb;IACA,MAAMC,iBAAiB,GAAGnB,WAAW,CAACoB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,QAAQ,CAACC,aAAa,CAACF,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5F,OAAOJ,iBAAiB,CAACM,GAAG,CAAEC,UAAU,IAAK;MAC3C,MAAM;QAAEH,QAAQ;QAAEZ,SAAS;QAAEC,WAAW;QAAEe;MAAW,CAAC,GAAGD,UAAU;MACnE,MAAME,mBAAmB,GAAG,CAACD,UAAU,GAAG,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3D,oBACElC,OAAA;QAAAmC,QAAA,gBACEnC,OAAA;UAAAmC,QAAA,EAAKP;QAAQ;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBvC,OAAA;UAAAmC,QAAA,GAAKnB,SAAS,EAAC,GAAC,EAACC,WAAW;QAAA;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClCvC,OAAA;UAAAmC,QAAA,GAAKF,mBAAmB,EAAC,GAAC;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHxBX,QAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CAAC;IAET,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvC,OAAA;IAAKwC,SAAS,EAAC,qDAAqD;IAAAL,QAAA,gBAClEnC,OAAA;MAAIwC,SAAS,EAAC,yBAAyB;MAAAL,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9DpC,iBAAiB,iBAChBH,OAAA;MAAIwC,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAC5BrB,uBAAuB,CAACX,iBAAiB,CAAC,CAACsC,KAAK,CAAC,IAAI,CAAC,CAACX,GAAG,CAAC,CAACY,UAAU,EAAEC,KAAK,kBAC5E3C,OAAA;QAAgBwC,SAAS,EAAC,MAAM;QAAAL,QAAA,EAC7BO;MAAU,GADJC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,EACAlC,WAAW,iBACVL,OAAA;MAAAmC,QAAA,gBACEnC,OAAA;QAAIwC,SAAS,EAAC,yBAAyB;QAAAL,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzDvC,OAAA;QAAOwC,SAAS,EAAC,oBAAoB;QAAAL,QAAA,gBACnCnC,OAAA;UAAAmC,QAAA,eACEnC,OAAA;YAAAmC,QAAA,gBACEnC,OAAA;cAAAmC,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBvC,OAAA;cAAAmC,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfvC,OAAA;cAAAmC,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRvC,OAAA;UAAAmC,QAAA,EAAQb,iBAAiB,CAACjB,WAAW;QAAC;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CApFID,qBAAqB;AAAA2C,EAAA,GAArB3C,qBAAqB;AAsF3B,eAAeA,qBAAqB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}