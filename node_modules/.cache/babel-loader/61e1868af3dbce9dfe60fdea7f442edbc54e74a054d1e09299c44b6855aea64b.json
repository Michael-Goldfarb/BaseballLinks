{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgoldfarb/Documents/OhConnections/web/web/src/pages/ConnectionsPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, Component } from 'react';\nimport './ConnectionsPage.css';\nimport baseballImg from '../images/baseball.png';\nimport freddieFreeman from '../images/examples/freddiefreeman.png';\nimport mookieBetts from '../images/examples/mookiebetts.png';\nimport shoheiOhtani from '../images/examples/shoheiohtani.png';\nimport maxMuncy from '../images/examples/maxmuncy.png';\nimport joseAltuve from '../images/examples/josealtuve.png';\nimport miguelCabrera from '../images/examples/miguelcabrera.png';\nimport ronaldAcunaJr from '../images/examples/ronaldacunajr.png';\nimport salvadorPerez from '../images/examples/salvadorperez.png';\nimport albertPujols from './inputs/03-15-2024/albertPujols.png';\nimport babeRuth from './inputs/03-15-2024/babeRuth.jpg';\nimport hankAaron from './inputs/03-15-2024/hankAaron.jpg';\nimport barryBonds from './inputs/03-15-2024/barryBonds.jpg';\nimport fernandoTatisJr from './inputs/03-15-2024/fernandoTatisJr.png';\nimport cavanBiggio from './inputs/03-15-2024/cavanBiggio.png';\nimport boBichette from './inputs/03-15-2024/boBichette.png';\nimport kebryanHayes from './inputs/03-15-2024/kebryanHayes.png';\nimport aaronJudge from './inputs/03-15-2024/aaronJudge.png';\nimport nolanArenado from './inputs/03-15-2024/nolanArenado.png';\nimport adamJones from './inputs/03-15-2024/adamJones.png';\nimport christianYelich from './inputs/03-15-2024/christianYelich.png';\nimport ericHosmer from './inputs/03-15-2024/ericHosmer.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionsPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const playerImages = {\n    'Albert Pujols': albertPujols,\n    'Babe Ruth': babeRuth,\n    'Hank Aaron': hankAaron,\n    'Barry Bonds': barryBonds,\n    'Ronald Acuña Jr.': ronaldAcunaJr,\n    'Shohei Ohtani': shoheiOhtani,\n    'Aaron Judge': aaronJudge,\n    'Freddie Freeman': freddieFreeman,\n    'Fernando Tatis Jr.': fernandoTatisJr,\n    'Ke\\'Bryan Hayes': kebryanHayes,\n    'Cavan Biggio': cavanBiggio,\n    'Bo Bichette': boBichette,\n    'Adam Jones': adamJones,\n    'Christian Yelich': christianYelich,\n    'Nolan Arenado': nolanArenado,\n    'Eric Hosmer': ericHosmer\n  };\n  const initialTerms = ['Albert Pujols', 'Babe Ruth', 'Hank Aaron', 'Barry Bonds', 'Ronald Acuña Jr.', 'Shohei Ohtani', 'Aaron Judge', 'Freddie Freeman', 'Fernando Tatis Jr.', 'Ke\\'Bryan Hayes', 'Cavan Biggio', 'Bo Bichette', 'Adam Jones', 'Christian Yelich', 'Nolan Arenado', 'Eric Hosmer'];\n  const correctGroups = [{\n    number: 1,\n    description: '700+ HOME RUNS',\n    terms: ['Babe Ruth', 'Albert Pujols', 'Hank Aaron', 'Barry Bonds'],\n    color: '#4CAF50'\n  }, {\n    number: 1,\n    description: '2023 ALL STAR GAME STARTERS',\n    terms: ['Ronald Acuña Jr.', 'Shohei Ohtani', 'Aaron Judge', 'Freddie Freeman'],\n    color: '#e5de00'\n  }, {\n    number: 1,\n    description: 'SONS OF FORMER MLB PLAYERS',\n    terms: ['Fernando Tatis Jr.', 'Ke\\'Bryan Hayes', 'Cavan Biggio', 'Bo Bichette'],\n    color: '#e27602'\n  }, {\n    number: 1,\n    description: '2017 TEAM USA WBC PLAYERS',\n    terms: ['Adam Jones', 'Christian Yelich', 'Nolan Arenado', 'Eric Hosmer'],\n    color: '#de0a26'\n  }];\n  const [selectedTerms, setSelectedTerms] = useState([]);\n  const [showResultsPopup, setShowResultsPopup] = useState(false);\n  const [guessIncorrect, setGuessIncorrect] = useState(false);\n  const [width, height] = useWindowSize();\n  // console.log(width, height);\n  const [readyToShowPopUp, setReadyToShowPopUp] = useState(false);\n  const [nextPuzzleCountdown, setNextPuzzleCountdown] = useState('');\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [userWon, setUserWon] = useState(false);\n  const [animateIndex, setAnimateIndex] = useState(null);\n  const [shake, setShake] = useState(false);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState([]);\n  const [mistakes, setMistakes] = useState(4);\n  const [submittedSets, setSubmittedSets] = useState([]);\n  const [guessedGroups, setGuessedGroups] = useState([]);\n  const [terms, setTerms] = useState(initialTerms);\n  // const [terms, setTerms] = useState(() => {\n  //   const savedTerms = localStorage.getItem('terms');\n  //   return savedTerms ? JSON.parse(savedTerms) : initialTerms;\n  // });\n  // const [guessedGroups, setGuessedGroups] = useState(() => {\n  //   const savedGroups = localStorage.getItem('guessedGroups');\n  //   return savedGroups ? JSON.parse(savedGroups) : [];\n  // });\n  // const [mistakes, setMistakes] = useState(() => {\n  //   const savedMistakes = localStorage.getItem('mistakes');\n  //   return savedMistakes !== null ? parseInt(savedMistakes, 10) : 4;\n  // });\n  // const [submittedSets, setSubmittedSets] = useState(() => {\n  //   const savedSets = localStorage.getItem('submittedSets');\n  //   return savedSets ? JSON.parse(savedSets) : [];\n  // });\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n\n  // useEffect(() => {\n  //   localStorage.setItem('terms', JSON.stringify(terms));\n  // }, [terms]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('mistakes', mistakes.toString());\n  // }, [mistakes]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('submittedSets', JSON.stringify(submittedSets));\n  // }, [submittedSets]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('guessedGroups', JSON.stringify(guessedGroups));\n  // }, [guessedGroups]);\n\n  const getVictoryMessage = mistakesLeft => {\n    switch (mistakesLeft) {\n      case 4:\n        return \"Perfect!\";\n      case 3:\n        return \"Great Job!\";\n      case 2:\n        return \"Solid!\";\n      case 1:\n        return \"Phew!\";\n      default:\n        return \"Good Job!\";\n    }\n  };\n  const handleTermClick = term => {\n    if (gameOver) return;\n    const isAlreadySelected = selectedTerms.find(t => t.name === term);\n    if (isAlreadySelected) {\n      setSelectedTerms(selectedTerms.filter(t => t.name !== term));\n      setShowPopup(false);\n    } else {\n      if (selectedTerms.length < 4) {\n        setSelectedTerms([...selectedTerms, {\n          name: term,\n          order: Date.now()\n        }]);\n        setShowPopup(false);\n      } else {\n        setPopupMessage(\"You cannot select more than 4 players.\");\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 2000);\n      }\n    }\n  };\n  const handleSubmit = () => {\n    if (gameOver || mistakes <= 0 || selectedTerms.length !== 4) {\n      return;\n    }\n    setGuessIncorrect(false);\n    setShake(false);\n    const orderedTerms = selectedTerms.sort((a, b) => a.order - b.order);\n    const currentSetSorted = [...selectedTerms].sort();\n    const currentSetString = currentSetSorted.join(',');\n    orderedTerms.forEach((term, index) => {\n      setTimeout(() => {\n        setAnimateIndex(terms.indexOf(term.name)); // Find the index in the original terms array for the animation\n      }, index * 500);\n    });\n    if (submittedSets.includes(currentSetString)) {\n      setPopupMessage(\"You cannot guess the same 4 players twice.\");\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n      return;\n    } else {\n      const oneAway = correctGroups.some(group => {\n        const matchingTerms = group.terms.filter(term => currentSetSorted.includes(term));\n        return matchingTerms.length === 3 && group.terms.sort().join(',') !== currentSetString;\n      });\n      const guessColors = selectedTerms.map(term => {\n        const group = correctGroups.find(group => group.terms.includes(term));\n        return group ? group.color : '#FFFFFF';\n      });\n      setMoveHistory(prevHistory => [...prevHistory, guessColors]);\n      if (oneAway) {\n        if (mistakes > 1) {\n          setPopupMessage(\"One Away!\");\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 2000);\n          setSubmittedSets([...submittedSets, currentSetString]);\n          setMistakes(mistakes - 1);\n          return;\n        }\n      }\n      const foundGroup = correctGroups.find(group => group.terms.sort().join(',') === currentSetString);\n      if (!foundGroup) {\n        setSubmittedSets([...submittedSets, currentSetString]);\n        setMistakes(mistakes - 1);\n        setGuessIncorrect(true); // Directly set guessIncorrect to true here\n        // Remove the setTimeout for setGuessIncorrect\n      }\n\n      // After the foundGroup check, at the end of the handleSubmit\n      if (guessIncorrect) {\n        setTimeout(() => {\n          setShake(false);\n          setGuessIncorrect(false);\n        }, 1000); // However long you want the shake to last\n      }\n\n      if (foundGroup) {\n        const updatedGroup = {\n          ...foundGroup,\n          terms: selectedTerms\n        };\n        const updatedGuessedGroups = [...guessedGroups, updatedGroup];\n        setGuessedGroups(updatedGuessedGroups);\n        setTerms(terms.filter(term => !foundGroup.terms.includes(term)));\n        setSelectedTerms([]);\n        if (updatedGuessedGroups.length === correctGroups.length) {\n          setGameOver(true);\n          setUserWon(true);\n          setPopupMessage(getVictoryMessage(mistakes));\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 1000);\n          setTimeout(() => {\n            setShowResultsPopup(true);\n          }, 1000);\n        }\n      } else {\n        setSubmittedSets([...submittedSets, currentSetString]);\n        setMistakes(mistakes - 1);\n        setTimeout(() => {\n          setAnimateIndex(null);\n          if (guessIncorrect) {\n            setShake(true);\n          }\n        }, selectedTerms.length * 500);\n        if (mistakes <= 1) {\n          setGameOver(true);\n          setPopupMessage(\"Nice try!\");\n          setUserWon(false);\n          setShowPopup(true);\n          setTimeout(() => {\n            setShowPopup(false);\n            const remainingGroups = correctGroups.filter(group => !guessedGroups.some(guessedGroup => guessedGroup.description === group.description));\n            setRemainingGroupsToReveal(remainingGroups);\n            setReadyToShowPopUp(true);\n            setSelectedTerms([]);\n            setMistakes(0);\n          }, 2000);\n          return;\n        }\n      }\n    }\n  };\n  function useWindowSize() {\n    _s();\n    const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\n    useEffect(() => {\n      const handleResize = () => {\n        setSize([window.innerWidth, window.innerHeight]);\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n    return size;\n  }\n  _s(useWindowSize, \"KD928l6WwZVqhph5sEOKFH76SRY=\");\n  useEffect(() => {\n    if (selectedTerms.length < 4) {\n      return;\n    }\n    setShake(false);\n    selectedTerms.forEach((term, index) => {\n      setTimeout(() => {\n        setAnimateIndex(index);\n      }, index * 500);\n    });\n    const timeoutId = setTimeout(() => {\n      setAnimateIndex(null);\n      if (guessIncorrect) {\n        setShake(true);\n      }\n    }, selectedTerms.length * 500);\n    return () => clearTimeout(timeoutId);\n  }, [selectedTerms, guessIncorrect]);\n  useEffect(() => {\n    if (animateIndex !== null) {\n      const timeoutId = setTimeout(() => {\n        setAnimateIndex(null);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [animateIndex]);\n  useEffect(() => {\n    if (guessIncorrect) {\n      const timeoutId = setTimeout(() => {\n        setShake(false);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [guessIncorrect]);\n  useEffect(() => {\n    if (shake) {\n      const timer = setTimeout(() => {\n        setShake(false);\n        setGuessIncorrect(false);\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shake]);\n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length > 0) {\n      const timer = setTimeout(() => {\n        const [groupToReveal, ...restGroups] = remainingGroupsToReveal;\n        setGuessedGroups(prevGuessedGroups => [...prevGuessedGroups, groupToReveal]);\n        setTerms(terms => terms.filter(term => !groupToReveal.terms.includes(term)));\n        setRemainingGroupsToReveal(restGroups);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, terms]);\n  useEffect(() => {\n    if (gameOver && readyToShowPopUp && remainingGroupsToReveal.length === 0) {\n      const timer = setTimeout(() => {\n        setShowResultsPopup(true);\n      }, 1700);\n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, readyToShowPopUp]);\n  const handleShuffle = () => {\n    const shuffledTermsArray = shuffleArray([...terms]);\n    setTerms(shuffledTermsArray);\n  };\n  const shuffleArray = array => {\n    let currentIndex = array.length,\n      randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  const shuffledTermsArray = shuffleArray([...terms]);\n  useEffect(() => {\n    setTerms(shuffleArray([...initialTerms]));\n  }, []);\n  const difficultyLevels = [{\n    name: 'Easy',\n    color: '#4CAF50'\n  }, {\n    name: 'Medium',\n    color: '#e5de00'\n  }, {\n    name: 'Hard',\n    color: '#e27602'\n  }, {\n    name: 'Impossible',\n    color: '#de0a26'\n  }];\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const nextPuzzleTimeET = new Date();\n      nextPuzzleTimeET.setHours(19, 0, 0, 0); // 7:00 PM ET\n      if (nextPuzzleTimeET < now) {\n        nextPuzzleTimeET.setDate(nextPuzzleTimeET.getDate() + 1);\n      }\n      const timeUntilNextPuzzle = nextPuzzleTimeET - now;\n      const countdown = new Date(timeUntilNextPuzzle).toISOString().substr(11, 8);\n      setNextPuzzleCountdown(countdown);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const renderResultsPopup = () => {\n    const message = userWon ? getVictoryMessage(mistakes) : \"Next Time!\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-popup\",\n      onClick: () => setShowResultsPopup(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowResultsPopup(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"message-header\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"game-number\",\n          children: [\"OhConnections #\", correctGroups[0].number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-container\",\n          children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-level\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-color\",\n              style: {\n                backgroundColor: level.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-name\",\n              children: level.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)]\n          }, level.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-summary-grid\",\n          children: moveHistory.map((colorSet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-row\",\n            children: colorSet.map((color, colorIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-block\",\n              style: {\n                backgroundColor: color\n              }\n            }, colorIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 7\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 3\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"next-puzzle-countdown\",\n          children: [\"NEXT BOARD IN: \", nextPuzzleCountdown]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-summary-button\",\n          onClick: handleCopySummary,\n          children: \"Share Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this);\n  };\n  const handleCopySummary = () => {\n    const summaryString = moveHistory.map(moveRow => moveRow.map(color => {\n      switch (color) {\n        case correctGroups[0].color:\n          return '🟩';\n        case correctGroups[1].color:\n          return '🟨';\n        case correctGroups[2].color:\n          return '🟧';\n        case correctGroups[3].color:\n          return '🟥';\n        default:\n          return '⬜️';\n      }\n    }).join('')).join('\\n');\n    const legend = `\\n\\n🟩 = Easy\\n🟨 = Medium\\n🟧 = Hard\\n🟥 = Impossible`;\n    const completeSummary = `OhConnections\\nBoard #${correctGroups[0].number}\\n\\n${summaryString}${legend}\\n\\nNEXT PUZZLE IN: ${nextPuzzleCountdown}\\n\\nwww.ohconnections.com`;\n    navigator.clipboard.writeText(completeSummary).then(() => {\n      setPopupMessage('Game summary copied to clipboard!');\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n    }, err => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  const renderHowToPlayPopup = () => {\n    if (!showHowToPlay) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"how-to-play-popup\",\n      onClick: () => setShowHowToPlay(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"how-to-play-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowHowToPlay(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"How to Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Goal: Find groups of four MLB players that have something in common\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"CURRENT DODGERS PLAYERS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-images\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: freddieFreeman,\n                alt: \"Freddie Freeman\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: mookieBetts,\n                alt: \"Mookie Betts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: shoheiOhtani,\n                alt: \"Shohei Ohtani\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: maxMuncy,\n                alt: \"Max Muncy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"PLAYERS BORN IN VENEZUELA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-images\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: joseAltuve,\n                alt: \"Jose Altuve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ronaldAcunaJr,\n                alt: \"Ronald Acu\\xF1a Jr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: miguelCabrera,\n                alt: \"Miguel Cabrera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: salvadorPerez,\n                alt: \"Salvador Perez\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select four similar players and tap 'Submit' to check if you are correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have four incorrect guesses before the game ends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Each group is represented by a color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-container\",\n          children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-level\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-color\",\n              style: {\n                backgroundColor: level.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-name\",\n              children: level.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this)]\n          }, level.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connections-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create four groups of four!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-controls button how-to-play-button\",\n        onClick: () => setShowHowToPlay(true),\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 5\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-message\",\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guessed-groups\",\n      children: guessedGroups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guessed-group-combined\",\n        style: {\n          backgroundColor: group.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-images\",\n          children: group.terms.map((term, termIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: playerImages[term],\n              alt: term,\n              className: \"guessed-player-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-name-overlay\",\n              children: term.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this)]\n          }, termIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-description\",\n          children: group.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terms-grid\",\n      style: {\n        gridTemplateColumns: width > 0 ? 'repeat(4, 1fr)' : 'repeat(2, 1fr)'\n      },\n      children: terms.map((term, index) => {\n        let imgSrc = '';\n        switch (term) {\n          case 'Albert Pujols':\n            imgSrc = albertPujols;\n            break;\n          case 'Barry Bonds':\n            imgSrc = barryBonds;\n            break;\n          case 'Babe Ruth':\n            imgSrc = babeRuth;\n            break;\n          case 'Hank Aaron':\n            imgSrc = hankAaron;\n            break;\n          case 'Ke\\'Bryan Hayes':\n            imgSrc = kebryanHayes;\n            break;\n          case 'Bo Bichette':\n            imgSrc = boBichette;\n            break;\n          case 'Cavan Biggio':\n            imgSrc = cavanBiggio;\n            break;\n          case 'Fernando Tatis Jr.':\n            imgSrc = fernandoTatisJr;\n            break;\n          case 'Ronald Acuña Jr.':\n            imgSrc = ronaldAcunaJr;\n            break;\n          case 'Shohei Ohtani':\n            imgSrc = shoheiOhtani;\n            break;\n          case 'Freddie Freeman':\n            imgSrc = freddieFreeman;\n            break;\n          case 'Aaron Judge':\n            imgSrc = aaronJudge;\n            break;\n          case 'Eric Hosmer':\n            imgSrc = ericHosmer;\n            break;\n          case 'Adam Jones':\n            imgSrc = adamJones;\n            break;\n          case 'Christian Yelich':\n            imgSrc = christianYelich;\n            break;\n          case 'Nolan Arenado':\n            imgSrc = nolanArenado;\n            break;\n          default:\n            imgSrc = miguelCabrera;\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `term-block \n                    ${selectedTerms.includes(term) ? 'selected' : ''} \n                    ${animateIndex === index ? 'jump-animation' : ''} \n                    ${shake && guessIncorrect ? 'shake-animation' : ''}`,\n          onClick: () => handleTermClick(term),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgSrc,\n            className: \"term-image\",\n            alt: term\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-overlay\",\n            children: term\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 7\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 5\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistakes-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistakes-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mistakes-text\",\n          children: \"Mistakes remaining: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), Array.from({\n          length: mistakes\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: baseballImg,\n          alt: \"Baseball\",\n          className: \"baseball-icon\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this), !gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShuffle,\n        children: \"Shuffle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTerms([]),\n        disabled: selectedTerms.length === 0,\n        children: \"Deselect All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: selectedTerms.length !== 4,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-button\",\n        onClick: () => setShowResultsPopup(true),\n        children: \"View Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this), showResultsPopup && renderResultsPopup(), renderHowToPlayPopup()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 507,\n    columnNumber: 5\n  }, this);\n};\n_s2(ConnectionsPage, \"C57K3oGTdwAwDZKEZT2XsWoKIqs=\", true);\n_c = ConnectionsPage;\nexport default ConnectionsPage;\nvar _c;\n$RefreshReg$(_c, \"ConnectionsPage\");","map":{"version":3,"names":["React","useState","useEffect","Component","baseballImg","freddieFreeman","mookieBetts","shoheiOhtani","maxMuncy","joseAltuve","miguelCabrera","ronaldAcunaJr","salvadorPerez","albertPujols","babeRuth","hankAaron","barryBonds","fernandoTatisJr","cavanBiggio","boBichette","kebryanHayes","aaronJudge","nolanArenado","adamJones","christianYelich","ericHosmer","jsxDEV","_jsxDEV","ConnectionsPage","_s2","_s","$RefreshSig$","playerImages","initialTerms","correctGroups","number","description","terms","color","selectedTerms","setSelectedTerms","showResultsPopup","setShowResultsPopup","guessIncorrect","setGuessIncorrect","width","height","useWindowSize","readyToShowPopUp","setReadyToShowPopUp","nextPuzzleCountdown","setNextPuzzleCountdown","showHowToPlay","setShowHowToPlay","userWon","setUserWon","animateIndex","setAnimateIndex","shake","setShake","moveHistory","setMoveHistory","gameOver","setGameOver","remainingGroupsToReveal","setRemainingGroupsToReveal","mistakes","setMistakes","submittedSets","setSubmittedSets","guessedGroups","setGuessedGroups","setTerms","popupMessage","setPopupMessage","showPopup","setShowPopup","getVictoryMessage","mistakesLeft","handleTermClick","term","isAlreadySelected","find","t","name","filter","length","order","Date","now","setTimeout","handleSubmit","orderedTerms","sort","a","b","currentSetSorted","currentSetString","join","forEach","index","indexOf","includes","oneAway","some","group","matchingTerms","guessColors","map","prevHistory","foundGroup","updatedGroup","updatedGuessedGroups","remainingGroups","guessedGroup","size","setSize","window","innerWidth","innerHeight","handleResize","addEventListener","removeEventListener","timeoutId","clearTimeout","timer","groupToReveal","restGroups","prevGuessedGroups","handleShuffle","shuffledTermsArray","shuffleArray","array","currentIndex","randomIndex","Math","floor","random","difficultyLevels","intervalId","setInterval","nextPuzzleTimeET","setHours","setDate","getDate","timeUntilNextPuzzle","countdown","toISOString","substr","clearInterval","renderResultsPopup","message","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","level","style","backgroundColor","colorSet","colorIndex","handleCopySummary","summaryString","moveRow","legend","completeSummary","navigator","clipboard","writeText","then","err","console","error","renderHowToPlayPopup","src","alt","termIndex","toUpperCase","gridTemplateColumns","imgSrc","Array","from","_","i","disabled","_c","$RefreshReg$"],"sources":["/Users/michaelgoldfarb/Documents/OhConnections/web/web/src/pages/ConnectionsPage.js"],"sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport './ConnectionsPage.css';\nimport baseballImg from '../images/baseball.png';\nimport freddieFreeman from '../images/examples/freddiefreeman.png';\nimport mookieBetts from '../images/examples/mookiebetts.png';\nimport shoheiOhtani from '../images/examples/shoheiohtani.png';\nimport maxMuncy from '../images/examples/maxmuncy.png';\nimport joseAltuve from '../images/examples/josealtuve.png';\nimport miguelCabrera from '../images/examples/miguelcabrera.png';\nimport ronaldAcunaJr from '../images/examples/ronaldacunajr.png';\nimport salvadorPerez from '../images/examples/salvadorperez.png';\nimport albertPujols from './inputs/03-15-2024/albertPujols.png';\nimport babeRuth from './inputs/03-15-2024/babeRuth.jpg';\nimport hankAaron from './inputs/03-15-2024/hankAaron.jpg';\nimport barryBonds from './inputs/03-15-2024/barryBonds.jpg';\nimport fernandoTatisJr from './inputs/03-15-2024/fernandoTatisJr.png';\nimport cavanBiggio from './inputs/03-15-2024/cavanBiggio.png';\nimport boBichette from './inputs/03-15-2024/boBichette.png';\nimport kebryanHayes from './inputs/03-15-2024/kebryanHayes.png';\nimport aaronJudge from './inputs/03-15-2024/aaronJudge.png';\nimport nolanArenado from './inputs/03-15-2024/nolanArenado.png';\nimport adamJones from './inputs/03-15-2024/adamJones.png';\nimport christianYelich from './inputs/03-15-2024/christianYelich.png';\nimport ericHosmer from './inputs/03-15-2024/ericHosmer.png';\n\n\n\n\nconst ConnectionsPage = () => {\n  const playerImages = {\n    'Albert Pujols': albertPujols,\n    'Babe Ruth': babeRuth,\n    'Hank Aaron': hankAaron, \n    'Barry Bonds': barryBonds, \n    'Ronald Acuña Jr.': ronaldAcunaJr, \n    'Shohei Ohtani': shoheiOhtani, \n    'Aaron Judge': aaronJudge, \n    'Freddie Freeman': freddieFreeman, \n    'Fernando Tatis Jr.': fernandoTatisJr, \n    'Ke\\'Bryan Hayes': kebryanHayes, \n    'Cavan Biggio': cavanBiggio, \n    'Bo Bichette': boBichette, \n    'Adam Jones': adamJones, \n    'Christian Yelich': christianYelich, \n    'Nolan Arenado': nolanArenado, \n    'Eric Hosmer': ericHosmer\n  };\n  const initialTerms = ['Albert Pujols', 'Babe Ruth', 'Hank Aaron', 'Barry Bonds', 'Ronald Acuña Jr.', 'Shohei Ohtani', 'Aaron Judge', 'Freddie Freeman', 'Fernando Tatis Jr.', 'Ke\\'Bryan Hayes', 'Cavan Biggio', 'Bo Bichette', 'Adam Jones', 'Christian Yelich', 'Nolan Arenado', 'Eric Hosmer'];\n  const correctGroups = [\n    { number: 1, description: '700+ HOME RUNS', terms: ['Babe Ruth', 'Albert Pujols', 'Hank Aaron', 'Barry Bonds'],  color: '#4CAF50' },\n    { number: 1, description: '2023 ALL STAR GAME STARTERS', terms: ['Ronald Acuña Jr.', 'Shohei Ohtani', 'Aaron Judge', 'Freddie Freeman'],  color: '#e5de00' },\n    { number: 1, description: 'SONS OF FORMER MLB PLAYERS', terms: ['Fernando Tatis Jr.', 'Ke\\'Bryan Hayes', 'Cavan Biggio', 'Bo Bichette'], color: '#e27602' },\n    { number: 1, description: '2017 TEAM USA WBC PLAYERS', terms: ['Adam Jones', 'Christian Yelich', 'Nolan Arenado', 'Eric Hosmer'], color: '#de0a26' }]\n  \n  const [selectedTerms, setSelectedTerms] = useState([]);\n  const [showResultsPopup, setShowResultsPopup] = useState(false);\n  const [guessIncorrect, setGuessIncorrect] = useState(false);\n  const [width, height] = useWindowSize();\n  // console.log(width, height);\n  const [readyToShowPopUp, setReadyToShowPopUp] = useState(false);\n  const [nextPuzzleCountdown, setNextPuzzleCountdown] = useState('');\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [userWon, setUserWon] = useState(false);\n  const [animateIndex, setAnimateIndex] = useState(null);\n  const [shake, setShake] = useState(false);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState([]);\n  const [mistakes, setMistakes] = useState(4);\n  const [submittedSets, setSubmittedSets] = useState([]);\n  const [guessedGroups, setGuessedGroups] = useState([]);\n  const [terms, setTerms] = useState(initialTerms);\n  // const [terms, setTerms] = useState(() => {\n  //   const savedTerms = localStorage.getItem('terms');\n  //   return savedTerms ? JSON.parse(savedTerms) : initialTerms;\n  // });\n  // const [guessedGroups, setGuessedGroups] = useState(() => {\n  //   const savedGroups = localStorage.getItem('guessedGroups');\n  //   return savedGroups ? JSON.parse(savedGroups) : [];\n  // });\n  // const [mistakes, setMistakes] = useState(() => {\n  //   const savedMistakes = localStorage.getItem('mistakes');\n  //   return savedMistakes !== null ? parseInt(savedMistakes, 10) : 4;\n  // });\n  // const [submittedSets, setSubmittedSets] = useState(() => {\n  //   const savedSets = localStorage.getItem('submittedSets');\n  //   return savedSets ? JSON.parse(savedSets) : [];\n  // });\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n\n  // useEffect(() => {\n  //   localStorage.setItem('terms', JSON.stringify(terms));\n  // }, [terms]);\n  \n  // useEffect(() => {\n  //   localStorage.setItem('mistakes', mistakes.toString());\n  // }, [mistakes]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('submittedSets', JSON.stringify(submittedSets));\n  // }, [submittedSets]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('guessedGroups', JSON.stringify(guessedGroups));\n  // }, [guessedGroups]);\n\n  const getVictoryMessage = (mistakesLeft) => {\n    switch(mistakesLeft) {\n      case 4: return \"Perfect!\";\n      case 3: return \"Great Job!\";\n      case 2: return \"Solid!\";\n      case 1: return \"Phew!\";\n      default: return \"Good Job!\";\n    }\n  };\n  \n  const handleTermClick = (term) => {\n    if (gameOver) return;\n    const isAlreadySelected = selectedTerms.find(t => t.name === term);\n  if (isAlreadySelected) {\n    setSelectedTerms(selectedTerms.filter(t => t.name !== term));\n    setShowPopup(false);\n  } else {\n    if (selectedTerms.length < 4) {\n      setSelectedTerms([...selectedTerms, { name: term, order: Date.now() }]);\n      setShowPopup(false);\n    } else {\n      setPopupMessage(\"You cannot select more than 4 players.\");\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n    }\n  }\n  };\n\n  const handleSubmit = () => {\n    if (gameOver || mistakes <= 0 || selectedTerms.length !== 4) {\n      return;\n    }\n    \n    setGuessIncorrect(false);\n    setShake(false);\n    \n    const orderedTerms = selectedTerms.sort((a, b) => a.order - b.order);\n    const currentSetSorted = [...selectedTerms].sort();\n    const currentSetString = currentSetSorted.join(',');\n    orderedTerms.forEach((term, index) => {\n      setTimeout(() => {\n        setAnimateIndex(terms.indexOf(term.name)); // Find the index in the original terms array for the animation\n      }, index * 500);\n    });\n  \n    if (submittedSets.includes(currentSetString)) {\n      setPopupMessage(\"You cannot guess the same 4 players twice.\");\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n      return;\n    } else {\n      const oneAway = correctGroups.some(group => {\n        const matchingTerms = group.terms.filter(term => currentSetSorted.includes(term));\n        return matchingTerms.length === 3 && group.terms.sort().join(',') !== currentSetString;\n      });\n\n      const guessColors = selectedTerms.map(term => {\n        const group = correctGroups.find(group => group.terms.includes(term));\n        return group ? group.color : '#FFFFFF';\n      });\n    \n      setMoveHistory(prevHistory => [\n        ...prevHistory,\n        guessColors\n      ]);\n  \n      if (oneAway) {\n        if (mistakes > 1) {\n          setPopupMessage(\"One Away!\");\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 2000);\n          setSubmittedSets([...submittedSets, currentSetString]);\n          setMistakes(mistakes - 1);\n          return; \n        }\n      }\n\n      const foundGroup = correctGroups.find(group =>\n        group.terms.sort().join(',') === currentSetString\n      );\n\n      if (!foundGroup) {\n        setSubmittedSets([...submittedSets, currentSetString]);\n        setMistakes(mistakes - 1);\n        setGuessIncorrect(true); // Directly set guessIncorrect to true here\n        // Remove the setTimeout for setGuessIncorrect\n      }\n      \n      // After the foundGroup check, at the end of the handleSubmit\n      if (guessIncorrect) {\n        setTimeout(() => {\n          setShake(false);\n          setGuessIncorrect(false);\n        }, 1000); // However long you want the shake to last\n      }\n      \n      if (foundGroup) {\n        const updatedGroup = { ...foundGroup, terms: selectedTerms };\n        const updatedGuessedGroups = [...guessedGroups, updatedGroup];\n        setGuessedGroups(updatedGuessedGroups);\n        setTerms(terms.filter(term => !foundGroup.terms.includes(term)));\n        setSelectedTerms([]);\n        if (updatedGuessedGroups.length === correctGroups.length) {\n          setGameOver(true);\n          setUserWon(true);\n          setPopupMessage(getVictoryMessage(mistakes));\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 1000);\n          setTimeout(() => {\n            setShowResultsPopup(true);\n        }, 1000);\n        }\n      } else {\n        setSubmittedSets([...submittedSets, currentSetString]);\n        setMistakes(mistakes - 1);\n        setTimeout(() => {\n          setAnimateIndex(null);\n          if (guessIncorrect) {\n            setShake(true);\n          }\n        }, selectedTerms.length * 500);\n\n        if (mistakes <= 1) {\n          setGameOver(true);\n          setPopupMessage(\"Nice try!\");\n          setUserWon(false);\n          setShowPopup(true);\n          setTimeout(() => {\n            setShowPopup(false);\n    \n            const remainingGroups = correctGroups.filter(group => \n                !guessedGroups.some(guessedGroup => \n                    guessedGroup.description === group.description\n                )\n            );\n    \n            setRemainingGroupsToReveal(remainingGroups);\n            setReadyToShowPopUp(true);\n            setSelectedTerms([]);\n            setMistakes(0);\n        }, 2000);\n        return;\n        }\n      }\n    }\n  };\n  \n\n  function useWindowSize() {\n    const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\n  \n    useEffect(() => {\n      const handleResize = () => {\n        setSize([window.innerWidth, window.innerHeight]);\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return size;\n  }\n\n  useEffect(() => {\n    if (selectedTerms.length < 4) {\n      return;\n    }\n    \n    setShake(false);\n    selectedTerms.forEach((term, index) => {\n      setTimeout(() => {\n        setAnimateIndex(index);\n      }, index * 500);\n    });\n  \n    const timeoutId = setTimeout(() => {\n      setAnimateIndex(null);\n      if (guessIncorrect) {\n        setShake(true);\n      }\n    }, selectedTerms.length * 500);\n  \n    return () => clearTimeout(timeoutId);\n  \n  }, [selectedTerms, guessIncorrect]);\n  \n  useEffect(() => {\n    if (animateIndex !== null) {\n      const timeoutId = setTimeout(() => {\n        setAnimateIndex(null);\n      }, 500);\n  \n      return () => clearTimeout(timeoutId);\n    }\n  }, [animateIndex]);\n\n\n  useEffect(() => {\n    if (guessIncorrect) {\n      const timeoutId = setTimeout(() => {\n        setShake(false);\n      }, 500);\n      \n      return () => clearTimeout(timeoutId);\n    }\n  }, [guessIncorrect]);\n\n  useEffect(() => {\n    if (shake) {\n      const timer = setTimeout(() => {\n        setShake(false);\n        setGuessIncorrect(false);\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shake]);\n\n\n  \n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length > 0) {\n      const timer = setTimeout(() => {\n        const [groupToReveal, ...restGroups] = remainingGroupsToReveal;\n      setGuessedGroups(prevGuessedGroups => [...prevGuessedGroups, groupToReveal]);\n      setTerms(terms => terms.filter(term => !groupToReveal.terms.includes(term)));\n      setRemainingGroupsToReveal(restGroups);\n    }, 1000);\n  \n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, terms]);\n\n  useEffect(() => {\n    if (gameOver && readyToShowPopUp && remainingGroupsToReveal.length === 0) {\n      const timer = setTimeout(() => {\n        setShowResultsPopup(true);\n      }, 1700);\n      return () => clearTimeout(timer);      \n    }\n  }, [remainingGroupsToReveal, gameOver, readyToShowPopUp]);\n  \n  \n  const handleShuffle = () => {\n    const shuffledTermsArray = shuffleArray([...terms]);\n    setTerms(shuffledTermsArray);\n  };\n\n  const shuffleArray = (array) => {\n    let currentIndex = array.length,  randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  const shuffledTermsArray = shuffleArray([...terms]);\n\n  useEffect(() => {\n    setTerms(shuffleArray([...initialTerms]));\n  }, []);\n  \n  const difficultyLevels = [\n    { name: 'Easy', color: '#4CAF50' },\n    { name: 'Medium', color: '#e5de00' },\n    { name: 'Hard', color: '#e27602' },\n    { name: 'Impossible', color: '#de0a26' },\n  ];\n  \n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const nextPuzzleTimeET = new Date();\n      nextPuzzleTimeET.setHours(19, 0, 0, 0); // 7:00 PM ET\n      if (nextPuzzleTimeET < now) {\n        nextPuzzleTimeET.setDate(nextPuzzleTimeET.getDate() + 1);\n      }\n  \n      const timeUntilNextPuzzle = nextPuzzleTimeET - now;\n      const countdown = new Date(timeUntilNextPuzzle).toISOString().substr(11, 8);\n      setNextPuzzleCountdown(countdown);\n    }, 1000);\n  \n    return () => clearInterval(intervalId);\n  }, []);\n\n  \n  const renderResultsPopup = () => {\n    const message = userWon ? getVictoryMessage(mistakes) : \"Next Time!\";\n    \n    return (\n      <div className=\"results-popup\" onClick={() => setShowResultsPopup(false)}>\n        <div className=\"results-content\" onClick={(e) => e.stopPropagation()}>\n          <button className=\"close-button\" onClick={() => setShowResultsPopup(false)}>X</button>\n          <h2 className=\"message-header\">{message}</h2>\n          <p className=\"game-number\">OhConnections #{correctGroups[0].number}</p>\n          <div className=\"difficulty-container\">\n            {difficultyLevels.map(level => (\n              <div key={level.name} className=\"difficulty-level\">\n                <span className=\"difficulty-color\" style={{ backgroundColor: level.color }}></span>\n                <span className=\"difficulty-name\">{level.name}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"game-summary-grid\">\n          {moveHistory.map((colorSet, index) => (\n  <div key={index} className=\"summary-row\">\n    {colorSet.map((color, colorIndex) => (\n      <div key={colorIndex} className=\"summary-block\" style={{ backgroundColor: color }}></div>\n    ))}\n  </div>\n))}\n\n          </div>\n          <p className=\"next-puzzle-countdown\">NEXT BOARD IN: {nextPuzzleCountdown}</p>\n          <button className=\"copy-summary-button\" onClick={handleCopySummary}>Share Results</button>\n        </div>\n      </div>\n    );\n  };\n\n  const handleCopySummary = () => {\n    const summaryString = moveHistory.map(moveRow => \n      moveRow.map(color => {\n        switch (color) {\n          case correctGroups[0].color: return '🟩';\n          case correctGroups[1].color: return '🟨';\n          case correctGroups[2].color: return '🟧';\n          case correctGroups[3].color: return '🟥';\n          default: return '⬜️';\n        }\n      }).join('')\n    ).join('\\n');\n  \n    const legend = `\\n\\n🟩 = Easy\\n🟨 = Medium\\n🟧 = Hard\\n🟥 = Impossible`;\n\n    const completeSummary = `OhConnections\\nBoard #${correctGroups[0].number}\\n\\n${summaryString}${legend}\\n\\nNEXT PUZZLE IN: ${nextPuzzleCountdown}\\n\\nwww.ohconnections.com`;\n    \n    navigator.clipboard.writeText(completeSummary).then(() => {\n      setPopupMessage('Game summary copied to clipboard!');\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n    }, (err) => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  \n  \n  const renderHowToPlayPopup = () => {\n    if (!showHowToPlay) return null;\n  \n    return (\n      <div className=\"how-to-play-popup\" onClick={() => setShowHowToPlay(false)}>\n        <div className=\"how-to-play-content\" onClick={e => e.stopPropagation()}>\n          <button className=\"close-button\" onClick={() => setShowHowToPlay(false)}>X</button>\n          <h1>How to Play</h1>\n          <p>Goal: Find groups of four MLB players that have something in common</p>\n          <div className=\"example-section\">\n            <p>Example:</p>\n            <div className=\"example-group\">\n              <p>CURRENT DODGERS PLAYERS</p>\n              <div className=\"player-images\">\n                <img src={freddieFreeman} alt=\"Freddie Freeman\" />\n                <img src={mookieBetts} alt=\"Mookie Betts\" />\n                <img src={shoheiOhtani} alt=\"Shohei Ohtani\" />\n                <img src={maxMuncy} alt=\"Max Muncy\" />\n            </div>\n            </div>\n            <div className=\"example-group\">\n              <p>PLAYERS BORN IN VENEZUELA</p>\n              <div className=\"player-images\">\n                <img src={joseAltuve} alt=\"Jose Altuve\" />\n                <img src={ronaldAcunaJr} alt=\"Ronald Acuña Jr\" />\n                <img src={miguelCabrera} alt=\"Miguel Cabrera\" />\n                <img src={salvadorPerez} alt=\"Salvador Perez\" />\n            </div>\n            </div>\n          </div>\n          <p>Select four similar players and tap 'Submit' to check if you are correct</p>\n          <p>You have four incorrect guesses before the game ends</p>\n          <p>Each group is represented by a color: </p>\n          <div className=\"difficulty-container\">\n          {difficultyLevels.map(level => (\n            <div key={level.name} className=\"difficulty-level\">\n              <span className=\"difficulty-color\" style={{ backgroundColor: level.color }}></span>\n              <span className=\"difficulty-name\">{level.name}</span>\n            </div>\n          ))}\n        </div>\n        </div>\n      </div>\n    );\n  };\n  \n  \n  \n\n  return (\n    <div className=\"connections-game\">\n    <div className=\"header-container\">\n      <div className=\"button-placeholder\"></div>\n      <h1>Create four groups of four!</h1>\n      <button className=\"game-controls button how-to-play-button\" onClick={() => setShowHowToPlay(true)}>How to Play</button>\n    </div>\n    {showPopup && <div className=\"popup-message\">{popupMessage}</div>}\n    <div className=\"guessed-groups\">\n      {guessedGroups.map((group, index) => (\n        <div \n          key={index} \n          className=\"guessed-group-combined\"\n          style={{ backgroundColor: group.color }}\n        >\n          <div className=\"group-images\">\n            {group.terms.map((term, termIndex) => (\n              <div key={termIndex} className=\"player-image-container\">\n                <img src={playerImages[term]} alt={term} className=\"guessed-player-image\" />\n                <div className=\"player-name-overlay\">{term.toUpperCase()}</div>\n              </div>\n            ))}\n          </div>\n          <div className=\"group-description\">{group.description}</div>\n        </div>\n      ))}\n    </div>\n    <div className=\"terms-grid\" style={{ gridTemplateColumns: width > 0 ? 'repeat(4, 1fr)' : 'repeat(2, 1fr)' }}>\n  {terms.map((term, index) => {\n    let imgSrc = '';\n    switch (term) {\n      case 'Albert Pujols': imgSrc = albertPujols; break;\n      case 'Barry Bonds': imgSrc = barryBonds; break;\n      case 'Babe Ruth': imgSrc = babeRuth; break;\n      case 'Hank Aaron': imgSrc = hankAaron; break;\n      case 'Ke\\'Bryan Hayes': imgSrc = kebryanHayes; break;\n      case 'Bo Bichette': imgSrc = boBichette; break;\n      case 'Cavan Biggio': imgSrc = cavanBiggio; break;\n      case 'Fernando Tatis Jr.': imgSrc = fernandoTatisJr; break;\n      case 'Ronald Acuña Jr.': imgSrc = ronaldAcunaJr; break;\n      case 'Shohei Ohtani': imgSrc = shoheiOhtani; break;\n      case 'Freddie Freeman': imgSrc = freddieFreeman; break;\n      case 'Aaron Judge': imgSrc = aaronJudge; break;\n      case 'Eric Hosmer': imgSrc = ericHosmer; break;\n      case 'Adam Jones': imgSrc = adamJones; break;\n      case 'Christian Yelich': imgSrc = christianYelich; break;\n      case 'Nolan Arenado': imgSrc = nolanArenado; break;\n      default: imgSrc = miguelCabrera;\n    }\n\n    return (\n      <div key={index} \n        className={`term-block \n                    ${selectedTerms.includes(term) ? 'selected' : ''} \n                    ${animateIndex === index ? 'jump-animation' : ''} \n                    ${shake && guessIncorrect ? 'shake-animation' : ''}`} \n        onClick={() => handleTermClick(term)}>\n      <img src={imgSrc} className=\"term-image\" alt={term} />\n      <div className=\"text-overlay\">{term}</div>\n    </div>\n    );\n  })}\n</div>\n\n    {!gameOver && (\n      <div className=\"mistakes-section\">\n        <div className=\"mistakes-indicator\">\n          <span className=\"mistakes-text\">Mistakes remaining: </span>\n          {Array.from({ length: mistakes }, (_, i) => (\n            <img key={i} src={baseballImg} alt=\"Baseball\" className=\"baseball-icon\" />\n          ))}\n        </div>\n      </div>\n    )}\n    {!gameOver ? (\n      <div className=\"game-controls\">\n        <button onClick={handleShuffle}>Shuffle</button>\n        <button onClick={() => setSelectedTerms([])} disabled={selectedTerms.length === 0}>Deselect All</button>\n        <button onClick={handleSubmit} disabled={selectedTerms.length !== 4}>Submit</button>\n      </div>\n    ) : (\n      <div className=\"game-over-controls\">\n        <button className=\"game-button\" onClick={() => setShowResultsPopup(true)}>View Results</button>\n      </div>\n    )}\n    {showResultsPopup && renderResultsPopup()}\n    {renderHowToPlayPopup()}\n  </div>\n);\n\n  \n};\n\nexport default ConnectionsPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AAC7D,OAAO,uBAAuB;AAC9B,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,cAAc,MAAM,uCAAuC;AAClE,OAAOC,WAAW,MAAM,oCAAoC;AAC5D,OAAOC,YAAY,MAAM,qCAAqC;AAC9D,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,UAAU,MAAM,mCAAmC;AAC1D,OAAOC,aAAa,MAAM,sCAAsC;AAChE,OAAOC,aAAa,MAAM,sCAAsC;AAChE,OAAOC,aAAa,MAAM,sCAAsC;AAChE,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,eAAe,MAAM,yCAAyC;AACrE,OAAOC,WAAW,MAAM,qCAAqC;AAC7D,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,SAAS,MAAM,mCAAmC;AACzD,OAAOC,eAAe,MAAM,yCAAyC;AACrE,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK5D,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC5B,MAAMC,YAAY,GAAG;IACnB,eAAe,EAAEnB,YAAY;IAC7B,WAAW,EAAEC,QAAQ;IACrB,YAAY,EAAEC,SAAS;IACvB,aAAa,EAAEC,UAAU;IACzB,kBAAkB,EAAEL,aAAa;IACjC,eAAe,EAAEJ,YAAY;IAC7B,aAAa,EAAEc,UAAU;IACzB,iBAAiB,EAAEhB,cAAc;IACjC,oBAAoB,EAAEY,eAAe;IACrC,iBAAiB,EAAEG,YAAY;IAC/B,cAAc,EAAEF,WAAW;IAC3B,aAAa,EAAEC,UAAU;IACzB,YAAY,EAAEI,SAAS;IACvB,kBAAkB,EAAEC,eAAe;IACnC,eAAe,EAAEF,YAAY;IAC7B,aAAa,EAAEG;EACjB,CAAC;EACD,MAAMQ,YAAY,GAAG,CAAC,eAAe,EAAE,WAAW,EAAE,YAAY,EAAE,aAAa,EAAE,kBAAkB,EAAE,eAAe,EAAE,aAAa,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,cAAc,EAAE,aAAa,EAAE,YAAY,EAAE,kBAAkB,EAAE,eAAe,EAAE,aAAa,CAAC;EACjS,MAAMC,aAAa,GAAG,CACpB;IAAEC,MAAM,EAAE,CAAC;IAAEC,WAAW,EAAE,gBAAgB;IAAEC,KAAK,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE,YAAY,EAAE,aAAa,CAAC;IAAGC,KAAK,EAAE;EAAU,CAAC,EACnI;IAAEH,MAAM,EAAE,CAAC;IAAEC,WAAW,EAAE,6BAA6B;IAAEC,KAAK,EAAE,CAAC,kBAAkB,EAAE,eAAe,EAAE,aAAa,EAAE,iBAAiB,CAAC;IAAGC,KAAK,EAAE;EAAU,CAAC,EAC5J;IAAEH,MAAM,EAAE,CAAC;IAAEC,WAAW,EAAE,4BAA4B;IAAEC,KAAK,EAAE,CAAC,oBAAoB,EAAE,iBAAiB,EAAE,cAAc,EAAE,aAAa,CAAC;IAAEC,KAAK,EAAE;EAAU,CAAC,EAC3J;IAAEH,MAAM,EAAE,CAAC;IAAEC,WAAW,EAAE,2BAA2B;IAAEC,KAAK,EAAE,CAAC,YAAY,EAAE,kBAAkB,EAAE,eAAe,EAAE,aAAa,CAAC;IAAEC,KAAK,EAAE;EAAU,CAAC,CAAC;EAEvJ,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACwC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0C,cAAc,EAAEC,iBAAiB,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC4C,KAAK,EAAEC,MAAM,CAAC,GAAGC,aAAa,CAAC,CAAC;EACvC;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACiD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACmD,aAAa,EAAEC,gBAAgB,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACqD,OAAO,EAAEC,UAAU,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuD,YAAY,EAAEC,eAAe,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACyD,KAAK,EAAEC,QAAQ,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAAC2D,WAAW,EAAEC,cAAc,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6D,QAAQ,EAAEC,WAAW,CAAC,GAAG9D,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC+D,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGhE,QAAQ,CAAC,EAAE,CAAC;EAC1E,MAAM,CAACiE,QAAQ,EAAEC,WAAW,CAAC,GAAGlE,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACmE,aAAa,EAAEC,gBAAgB,CAAC,GAAGpE,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqE,aAAa,EAAEC,gBAAgB,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoC,KAAK,EAAEmC,QAAQ,CAAC,GAAGvE,QAAQ,CAACgC,YAAY,CAAC;EAChD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACwC,YAAY,EAAEC,eAAe,CAAC,GAAGzE,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0E,SAAS,EAAEC,YAAY,CAAC,GAAG3E,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAM4E,iBAAiB,GAAIC,YAAY,IAAK;IAC1C,QAAOA,YAAY;MACjB,KAAK,CAAC;QAAE,OAAO,UAAU;MACzB,KAAK,CAAC;QAAE,OAAO,YAAY;MAC3B,KAAK,CAAC;QAAE,OAAO,QAAQ;MACvB,KAAK,CAAC;QAAE,OAAO,OAAO;MACtB;QAAS,OAAO,WAAW;IAC7B;EACF,CAAC;EAED,MAAMC,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAIlB,QAAQ,EAAE;IACd,MAAMmB,iBAAiB,GAAG1C,aAAa,CAAC2C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKJ,IAAI,CAAC;IACpE,IAAIC,iBAAiB,EAAE;MACrBzC,gBAAgB,CAACD,aAAa,CAAC8C,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKJ,IAAI,CAAC,CAAC;MAC5DJ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACL,IAAIrC,aAAa,CAAC+C,MAAM,GAAG,CAAC,EAAE;QAC5B9C,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE;UAAE6C,IAAI,EAAEJ,IAAI;UAAEO,KAAK,EAAEC,IAAI,CAACC,GAAG,CAAC;QAAE,CAAC,CAAC,CAAC;QACvEb,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,MAAM;QACLF,eAAe,CAAC,wCAAwC,CAAC;QACzDE,YAAY,CAAC,IAAI,CAAC;QAClBc,UAAU,CAAC,MAAMd,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MAC7C;IACF;EACA,CAAC;EAED,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI7B,QAAQ,IAAII,QAAQ,IAAI,CAAC,IAAI3B,aAAa,CAAC+C,MAAM,KAAK,CAAC,EAAE;MAC3D;IACF;IAEA1C,iBAAiB,CAAC,KAAK,CAAC;IACxBe,QAAQ,CAAC,KAAK,CAAC;IAEf,MAAMiC,YAAY,GAAGrD,aAAa,CAACsD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACP,KAAK,GAAGQ,CAAC,CAACR,KAAK,CAAC;IACpE,MAAMS,gBAAgB,GAAG,CAAC,GAAGzD,aAAa,CAAC,CAACsD,IAAI,CAAC,CAAC;IAClD,MAAMI,gBAAgB,GAAGD,gBAAgB,CAACE,IAAI,CAAC,GAAG,CAAC;IACnDN,YAAY,CAACO,OAAO,CAAC,CAACnB,IAAI,EAAEoB,KAAK,KAAK;MACpCV,UAAU,CAAC,MAAM;QACfjC,eAAe,CAACpB,KAAK,CAACgE,OAAO,CAACrB,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7C,CAAC,EAAEgB,KAAK,GAAG,GAAG,CAAC;IACjB,CAAC,CAAC;IAEF,IAAIhC,aAAa,CAACkC,QAAQ,CAACL,gBAAgB,CAAC,EAAE;MAC5CvB,eAAe,CAAC,4CAA4C,CAAC;MAC7DE,YAAY,CAAC,IAAI,CAAC;MAClBc,UAAU,CAAC,MAAMd,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MAC3C;IACF,CAAC,MAAM;MACL,MAAM2B,OAAO,GAAGrE,aAAa,CAACsE,IAAI,CAACC,KAAK,IAAI;QAC1C,MAAMC,aAAa,GAAGD,KAAK,CAACpE,KAAK,CAACgD,MAAM,CAACL,IAAI,IAAIgB,gBAAgB,CAACM,QAAQ,CAACtB,IAAI,CAAC,CAAC;QACjF,OAAO0B,aAAa,CAACpB,MAAM,KAAK,CAAC,IAAImB,KAAK,CAACpE,KAAK,CAACwD,IAAI,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,KAAKD,gBAAgB;MACxF,CAAC,CAAC;MAEF,MAAMU,WAAW,GAAGpE,aAAa,CAACqE,GAAG,CAAC5B,IAAI,IAAI;QAC5C,MAAMyB,KAAK,GAAGvE,aAAa,CAACgD,IAAI,CAACuB,KAAK,IAAIA,KAAK,CAACpE,KAAK,CAACiE,QAAQ,CAACtB,IAAI,CAAC,CAAC;QACrE,OAAOyB,KAAK,GAAGA,KAAK,CAACnE,KAAK,GAAG,SAAS;MACxC,CAAC,CAAC;MAEFuB,cAAc,CAACgD,WAAW,IAAI,CAC5B,GAAGA,WAAW,EACdF,WAAW,CACZ,CAAC;MAEF,IAAIJ,OAAO,EAAE;QACX,IAAIrC,QAAQ,GAAG,CAAC,EAAE;UAChBQ,eAAe,CAAC,WAAW,CAAC;UAC5BE,YAAY,CAAC,IAAI,CAAC;UAClBc,UAAU,CAAC,MAAMd,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;UAC3CP,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE6B,gBAAgB,CAAC,CAAC;UACtD9B,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;UACzB;QACF;MACF;MAEA,MAAM4C,UAAU,GAAG5E,aAAa,CAACgD,IAAI,CAACuB,KAAK,IACzCA,KAAK,CAACpE,KAAK,CAACwD,IAAI,CAAC,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC,KAAKD,gBACnC,CAAC;MAED,IAAI,CAACa,UAAU,EAAE;QACfzC,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE6B,gBAAgB,CAAC,CAAC;QACtD9B,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;QACzBtB,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;QACzB;MACF;;MAEA;MACA,IAAID,cAAc,EAAE;QAClB+C,UAAU,CAAC,MAAM;UACf/B,QAAQ,CAAC,KAAK,CAAC;UACff,iBAAiB,CAAC,KAAK,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ;;MAEA,IAAIkE,UAAU,EAAE;QACd,MAAMC,YAAY,GAAG;UAAE,GAAGD,UAAU;UAAEzE,KAAK,EAAEE;QAAc,CAAC;QAC5D,MAAMyE,oBAAoB,GAAG,CAAC,GAAG1C,aAAa,EAAEyC,YAAY,CAAC;QAC7DxC,gBAAgB,CAACyC,oBAAoB,CAAC;QACtCxC,QAAQ,CAACnC,KAAK,CAACgD,MAAM,CAACL,IAAI,IAAI,CAAC8B,UAAU,CAACzE,KAAK,CAACiE,QAAQ,CAACtB,IAAI,CAAC,CAAC,CAAC;QAChExC,gBAAgB,CAAC,EAAE,CAAC;QACpB,IAAIwE,oBAAoB,CAAC1B,MAAM,KAAKpD,aAAa,CAACoD,MAAM,EAAE;UACxDvB,WAAW,CAAC,IAAI,CAAC;UACjBR,UAAU,CAAC,IAAI,CAAC;UAChBmB,eAAe,CAACG,iBAAiB,CAACX,QAAQ,CAAC,CAAC;UAC5CU,YAAY,CAAC,IAAI,CAAC;UAClBc,UAAU,CAAC,MAAMd,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;UAC3Cc,UAAU,CAAC,MAAM;YACfhD,mBAAmB,CAAC,IAAI,CAAC;UAC7B,CAAC,EAAE,IAAI,CAAC;QACR;MACF,CAAC,MAAM;QACL2B,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAE6B,gBAAgB,CAAC,CAAC;QACtD9B,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;QACzBwB,UAAU,CAAC,MAAM;UACfjC,eAAe,CAAC,IAAI,CAAC;UACrB,IAAId,cAAc,EAAE;YAClBgB,QAAQ,CAAC,IAAI,CAAC;UAChB;QACF,CAAC,EAAEpB,aAAa,CAAC+C,MAAM,GAAG,GAAG,CAAC;QAE9B,IAAIpB,QAAQ,IAAI,CAAC,EAAE;UACjBH,WAAW,CAAC,IAAI,CAAC;UACjBW,eAAe,CAAC,WAAW,CAAC;UAC5BnB,UAAU,CAAC,KAAK,CAAC;UACjBqB,YAAY,CAAC,IAAI,CAAC;UAClBc,UAAU,CAAC,MAAM;YACfd,YAAY,CAAC,KAAK,CAAC;YAEnB,MAAMqC,eAAe,GAAG/E,aAAa,CAACmD,MAAM,CAACoB,KAAK,IAC9C,CAACnC,aAAa,CAACkC,IAAI,CAACU,YAAY,IAC5BA,YAAY,CAAC9E,WAAW,KAAKqE,KAAK,CAACrE,WACvC,CACJ,CAAC;YAED6B,0BAA0B,CAACgD,eAAe,CAAC;YAC3ChE,mBAAmB,CAAC,IAAI,CAAC;YACzBT,gBAAgB,CAAC,EAAE,CAAC;YACpB2B,WAAW,CAAC,CAAC,CAAC;UAClB,CAAC,EAAE,IAAI,CAAC;UACR;QACA;MACF;IACF;EACF,CAAC;EAGD,SAASpB,aAAaA,CAAA,EAAG;IAAAjB,EAAA;IACvB,MAAM,CAACqF,IAAI,EAAEC,OAAO,CAAC,GAAGnH,QAAQ,CAAC,CAACoH,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC,CAAC;IAEzErH,SAAS,CAAC,MAAM;MACd,MAAMsH,YAAY,GAAGA,CAAA,KAAM;QACzBJ,OAAO,CAAC,CAACC,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC,CAAC;MAClD,CAAC;MACDF,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;MAC/C,OAAO,MAAMH,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IACjE,CAAC,EAAE,EAAE,CAAC;IAEN,OAAOL,IAAI;EACb;EAACrF,EAAA,CAZQiB,aAAa;EActB7C,SAAS,CAAC,MAAM;IACd,IAAIqC,aAAa,CAAC+C,MAAM,GAAG,CAAC,EAAE;MAC5B;IACF;IAEA3B,QAAQ,CAAC,KAAK,CAAC;IACfpB,aAAa,CAAC4D,OAAO,CAAC,CAACnB,IAAI,EAAEoB,KAAK,KAAK;MACrCV,UAAU,CAAC,MAAM;QACfjC,eAAe,CAAC2C,KAAK,CAAC;MACxB,CAAC,EAAEA,KAAK,GAAG,GAAG,CAAC;IACjB,CAAC,CAAC;IAEF,MAAMuB,SAAS,GAAGjC,UAAU,CAAC,MAAM;MACjCjC,eAAe,CAAC,IAAI,CAAC;MACrB,IAAId,cAAc,EAAE;QAClBgB,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC,EAAEpB,aAAa,CAAC+C,MAAM,GAAG,GAAG,CAAC;IAE9B,OAAO,MAAMsC,YAAY,CAACD,SAAS,CAAC;EAEtC,CAAC,EAAE,CAACpF,aAAa,EAAEI,cAAc,CAAC,CAAC;EAEnCzC,SAAS,CAAC,MAAM;IACd,IAAIsD,YAAY,KAAK,IAAI,EAAE;MACzB,MAAMmE,SAAS,GAAGjC,UAAU,CAAC,MAAM;QACjCjC,eAAe,CAAC,IAAI,CAAC;MACvB,CAAC,EAAE,GAAG,CAAC;MAEP,OAAO,MAAMmE,YAAY,CAACD,SAAS,CAAC;IACtC;EACF,CAAC,EAAE,CAACnE,YAAY,CAAC,CAAC;EAGlBtD,SAAS,CAAC,MAAM;IACd,IAAIyC,cAAc,EAAE;MAClB,MAAMgF,SAAS,GAAGjC,UAAU,CAAC,MAAM;QACjC/B,QAAQ,CAAC,KAAK,CAAC;MACjB,CAAC,EAAE,GAAG,CAAC;MAEP,OAAO,MAAMiE,YAAY,CAACD,SAAS,CAAC;IACtC;EACF,CAAC,EAAE,CAAChF,cAAc,CAAC,CAAC;EAEpBzC,SAAS,CAAC,MAAM;IACd,IAAIwD,KAAK,EAAE;MACT,MAAMmE,KAAK,GAAGnC,UAAU,CAAC,MAAM;QAC7B/B,QAAQ,CAAC,KAAK,CAAC;QACff,iBAAiB,CAAC,KAAK,CAAC;MAC1B,CAAC,EAAE,GAAG,CAAC;MACP,OAAO,MAAMgF,YAAY,CAACC,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACnE,KAAK,CAAC,CAAC;EAIXxD,SAAS,CAAC,MAAM;IACd,IAAI4D,QAAQ,IAAIE,uBAAuB,CAACsB,MAAM,GAAG,CAAC,EAAE;MAClD,MAAMuC,KAAK,GAAGnC,UAAU,CAAC,MAAM;QAC7B,MAAM,CAACoC,aAAa,EAAE,GAAGC,UAAU,CAAC,GAAG/D,uBAAuB;QAChEO,gBAAgB,CAACyD,iBAAiB,IAAI,CAAC,GAAGA,iBAAiB,EAAEF,aAAa,CAAC,CAAC;QAC5EtD,QAAQ,CAACnC,KAAK,IAAIA,KAAK,CAACgD,MAAM,CAACL,IAAI,IAAI,CAAC8C,aAAa,CAACzF,KAAK,CAACiE,QAAQ,CAACtB,IAAI,CAAC,CAAC,CAAC;QAC5Ef,0BAA0B,CAAC8D,UAAU,CAAC;MACxC,CAAC,EAAE,IAAI,CAAC;MAEN,OAAO,MAAMH,YAAY,CAACC,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAAC7D,uBAAuB,EAAEF,QAAQ,EAAEzB,KAAK,CAAC,CAAC;EAE9CnC,SAAS,CAAC,MAAM;IACd,IAAI4D,QAAQ,IAAId,gBAAgB,IAAIgB,uBAAuB,CAACsB,MAAM,KAAK,CAAC,EAAE;MACxE,MAAMuC,KAAK,GAAGnC,UAAU,CAAC,MAAM;QAC7BhD,mBAAmB,CAAC,IAAI,CAAC;MAC3B,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMkF,YAAY,CAACC,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAAC7D,uBAAuB,EAAEF,QAAQ,EAAEd,gBAAgB,CAAC,CAAC;EAGzD,MAAMiF,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,kBAAkB,GAAGC,YAAY,CAAC,CAAC,GAAG9F,KAAK,CAAC,CAAC;IACnDmC,QAAQ,CAAC0D,kBAAkB,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAIC,YAAY,GAAGD,KAAK,CAAC9C,MAAM;MAAGgD,WAAW;IAC7C,OAAOD,YAAY,KAAK,CAAC,EAAE;MACzBC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,YAAY,CAAC;MACtDA,YAAY,EAAE;MACd,CAACD,KAAK,CAACC,YAAY,CAAC,EAAED,KAAK,CAACE,WAAW,CAAC,CAAC,GAAG,CAC1CF,KAAK,CAACE,WAAW,CAAC,EAAEF,KAAK,CAACC,YAAY,CAAC,CAAC;IAC5C;IACA,OAAOD,KAAK;EACd,CAAC;EACD,MAAMF,kBAAkB,GAAGC,YAAY,CAAC,CAAC,GAAG9F,KAAK,CAAC,CAAC;EAEnDnC,SAAS,CAAC,MAAM;IACdsE,QAAQ,CAAC2D,YAAY,CAAC,CAAC,GAAGlG,YAAY,CAAC,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMyG,gBAAgB,GAAG,CACvB;IAAEtD,IAAI,EAAE,MAAM;IAAE9C,KAAK,EAAE;EAAU,CAAC,EAClC;IAAE8C,IAAI,EAAE,QAAQ;IAAE9C,KAAK,EAAE;EAAU,CAAC,EACpC;IAAE8C,IAAI,EAAE,MAAM;IAAE9C,KAAK,EAAE;EAAU,CAAC,EAClC;IAAE8C,IAAI,EAAE,YAAY;IAAE9C,KAAK,EAAE;EAAU,CAAC,CACzC;EAGDpC,SAAS,CAAC,MAAM;IACd,MAAMyI,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMnD,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;MACtB,MAAMqD,gBAAgB,GAAG,IAAIrD,IAAI,CAAC,CAAC;MACnCqD,gBAAgB,CAACC,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MACxC,IAAID,gBAAgB,GAAGpD,GAAG,EAAE;QAC1BoD,gBAAgB,CAACE,OAAO,CAACF,gBAAgB,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1D;MAEA,MAAMC,mBAAmB,GAAGJ,gBAAgB,GAAGpD,GAAG;MAClD,MAAMyD,SAAS,GAAG,IAAI1D,IAAI,CAACyD,mBAAmB,CAAC,CAACE,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;MAC3EjG,sBAAsB,CAAC+F,SAAS,CAAC;IACnC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMG,aAAa,CAACV,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,OAAO,GAAGjG,OAAO,GAAGuB,iBAAiB,CAACX,QAAQ,CAAC,GAAG,YAAY;IAEpE,oBACEvC,OAAA;MAAK6H,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEA,CAAA,KAAM/G,mBAAmB,CAAC,KAAK,CAAE;MAAAgH,QAAA,eACvE/H,OAAA;QAAK6H,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAGE,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;QAAAF,QAAA,gBACnE/H,OAAA;UAAQ6H,SAAS,EAAC,cAAc;UAACC,OAAO,EAAEA,CAAA,KAAM/G,mBAAmB,CAAC,KAAK,CAAE;UAAAgH,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtFrI,OAAA;UAAI6H,SAAS,EAAC,gBAAgB;UAAAE,QAAA,EAAEH;QAAO;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC7CrI,OAAA;UAAG6H,SAAS,EAAC,aAAa;UAAAE,QAAA,GAAC,iBAAe,EAACxH,aAAa,CAAC,CAAC,CAAC,CAACC,MAAM;QAAA;UAAA0H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvErI,OAAA;UAAK6H,SAAS,EAAC,sBAAsB;UAAAE,QAAA,EAClChB,gBAAgB,CAAC9B,GAAG,CAACqD,KAAK,iBACzBtI,OAAA;YAAsB6H,SAAS,EAAC,kBAAkB;YAAAE,QAAA,gBAChD/H,OAAA;cAAM6H,SAAS,EAAC,kBAAkB;cAACU,KAAK,EAAE;gBAAEC,eAAe,EAAEF,KAAK,CAAC3H;cAAM;YAAE;cAAAuH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACnFrI,OAAA;cAAM6H,SAAS,EAAC,iBAAiB;cAAAE,QAAA,EAAEO,KAAK,CAAC7E;YAAI;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAF7CC,KAAK,CAAC7E,IAAI;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGf,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNrI,OAAA;UAAK6H,SAAS,EAAC,mBAAmB;UAAAE,QAAA,EACjC9F,WAAW,CAACgD,GAAG,CAAC,CAACwD,QAAQ,EAAEhE,KAAK,kBACzCzE,OAAA;YAAiB6H,SAAS,EAAC,aAAa;YAAAE,QAAA,EACrCU,QAAQ,CAACxD,GAAG,CAAC,CAACtE,KAAK,EAAE+H,UAAU,kBAC9B1I,OAAA;cAAsB6H,SAAS,EAAC,eAAe;cAACU,KAAK,EAAE;gBAAEC,eAAe,EAAE7H;cAAM;YAAE,GAAxE+H,UAAU;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAoE,CACzF;UAAC,GAHM5D,KAAK;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEa,CAAC,eACNrI,OAAA;UAAG6H,SAAS,EAAC,uBAAuB;UAAAE,QAAA,GAAC,iBAAe,EAACxG,mBAAmB;QAAA;UAAA2G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7ErI,OAAA;UAAQ6H,SAAS,EAAC,qBAAqB;UAACC,OAAO,EAAEa,iBAAkB;UAAAZ,QAAA,EAAC;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,aAAa,GAAG3G,WAAW,CAACgD,GAAG,CAAC4D,OAAO,IAC3CA,OAAO,CAAC5D,GAAG,CAACtE,KAAK,IAAI;MACnB,QAAQA,KAAK;QACX,KAAKJ,aAAa,CAAC,CAAC,CAAC,CAACI,KAAK;UAAE,OAAO,IAAI;QACxC,KAAKJ,aAAa,CAAC,CAAC,CAAC,CAACI,KAAK;UAAE,OAAO,IAAI;QACxC,KAAKJ,aAAa,CAAC,CAAC,CAAC,CAACI,KAAK;UAAE,OAAO,IAAI;QACxC,KAAKJ,aAAa,CAAC,CAAC,CAAC,CAACI,KAAK;UAAE,OAAO,IAAI;QACxC;UAAS,OAAO,IAAI;MACtB;IACF,CAAC,CAAC,CAAC4D,IAAI,CAAC,EAAE,CACZ,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC;IAEZ,MAAMuE,MAAM,GAAI,wDAAuD;IAEvE,MAAMC,eAAe,GAAI,yBAAwBxI,aAAa,CAAC,CAAC,CAAC,CAACC,MAAO,OAAMoI,aAAc,GAAEE,MAAO,uBAAsBvH,mBAAoB,2BAA0B;IAE1KyH,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,eAAe,CAAC,CAACI,IAAI,CAAC,MAAM;MACxDpG,eAAe,CAAC,mCAAmC,CAAC;MACpDE,YAAY,CAAC,IAAI,CAAC;MAClBc,UAAU,CAAC,MAAMd,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IAC7C,CAAC,EAAGmG,GAAG,IAAK;MACVC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC;EAGD,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAAC9H,aAAa,EAAE,OAAO,IAAI;IAE/B,oBACEzB,OAAA;MAAK6H,SAAS,EAAC,mBAAmB;MAACC,OAAO,EAAEA,CAAA,KAAMpG,gBAAgB,CAAC,KAAK,CAAE;MAAAqG,QAAA,eACxE/H,OAAA;QAAK6H,SAAS,EAAC,qBAAqB;QAACC,OAAO,EAAEE,CAAC,IAAIA,CAAC,CAACC,eAAe,CAAC,CAAE;QAAAF,QAAA,gBACrE/H,OAAA;UAAQ6H,SAAS,EAAC,cAAc;UAACC,OAAO,EAAEA,CAAA,KAAMpG,gBAAgB,CAAC,KAAK,CAAE;UAAAqG,QAAA,EAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnFrI,OAAA;UAAA+H,QAAA,EAAI;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBrI,OAAA;UAAA+H,QAAA,EAAG;QAAmE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC1ErI,OAAA;UAAK6H,SAAS,EAAC,iBAAiB;UAAAE,QAAA,gBAC9B/H,OAAA;YAAA+H,QAAA,EAAG;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACfrI,OAAA;YAAK6H,SAAS,EAAC,eAAe;YAAAE,QAAA,gBAC5B/H,OAAA;cAAA+H,QAAA,EAAG;YAAuB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC9BrI,OAAA;cAAK6H,SAAS,EAAC,eAAe;cAAAE,QAAA,gBAC5B/H,OAAA;gBAAKwJ,GAAG,EAAE9K,cAAe;gBAAC+K,GAAG,EAAC;cAAiB;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAClDrI,OAAA;gBAAKwJ,GAAG,EAAE7K,WAAY;gBAAC8K,GAAG,EAAC;cAAc;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5CrI,OAAA;gBAAKwJ,GAAG,EAAE5K,YAAa;gBAAC6K,GAAG,EAAC;cAAe;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC9CrI,OAAA;gBAAKwJ,GAAG,EAAE3K,QAAS;gBAAC4K,GAAG,EAAC;cAAW;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNrI,OAAA;YAAK6H,SAAS,EAAC,eAAe;YAAAE,QAAA,gBAC5B/H,OAAA;cAAA+H,QAAA,EAAG;YAAyB;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAChCrI,OAAA;cAAK6H,SAAS,EAAC,eAAe;cAAAE,QAAA,gBAC5B/H,OAAA;gBAAKwJ,GAAG,EAAE1K,UAAW;gBAAC2K,GAAG,EAAC;cAAa;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC1CrI,OAAA;gBAAKwJ,GAAG,EAAExK,aAAc;gBAACyK,GAAG,EAAC;cAAiB;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACjDrI,OAAA;gBAAKwJ,GAAG,EAAEzK,aAAc;gBAAC0K,GAAG,EAAC;cAAgB;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAChDrI,OAAA;gBAAKwJ,GAAG,EAAEvK,aAAc;gBAACwK,GAAG,EAAC;cAAgB;gBAAAvB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNrI,OAAA;UAAA+H,QAAA,EAAG;QAAwE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/ErI,OAAA;UAAA+H,QAAA,EAAG;QAAoD;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC3DrI,OAAA;UAAA+H,QAAA,EAAG;QAAsC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7CrI,OAAA;UAAK6H,SAAS,EAAC,sBAAsB;UAAAE,QAAA,EACpChB,gBAAgB,CAAC9B,GAAG,CAACqD,KAAK,iBACzBtI,OAAA;YAAsB6H,SAAS,EAAC,kBAAkB;YAAAE,QAAA,gBAChD/H,OAAA;cAAM6H,SAAS,EAAC,kBAAkB;cAACU,KAAK,EAAE;gBAAEC,eAAe,EAAEF,KAAK,CAAC3H;cAAM;YAAE;cAAAuH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACnFrI,OAAA;cAAM6H,SAAS,EAAC,iBAAiB;cAAAE,QAAA,EAAEO,KAAK,CAAC7E;YAAI;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAF7CC,KAAK,CAAC7E,IAAI;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGf,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAKD,oBACErI,OAAA;IAAK6H,SAAS,EAAC,kBAAkB;IAAAE,QAAA,gBACjC/H,OAAA;MAAK6H,SAAS,EAAC,kBAAkB;MAAAE,QAAA,gBAC/B/H,OAAA;QAAK6H,SAAS,EAAC;MAAoB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1CrI,OAAA;QAAA+H,QAAA,EAAI;MAA2B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpCrI,OAAA;QAAQ6H,SAAS,EAAC,yCAAyC;QAACC,OAAO,EAAEA,CAAA,KAAMpG,gBAAgB,CAAC,IAAI,CAAE;QAAAqG,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpH,CAAC,EACLrF,SAAS,iBAAIhD,OAAA;MAAK6H,SAAS,EAAC,eAAe;MAAAE,QAAA,EAAEjF;IAAY;MAAAoF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjErI,OAAA;MAAK6H,SAAS,EAAC,gBAAgB;MAAAE,QAAA,EAC5BpF,aAAa,CAACsC,GAAG,CAAC,CAACH,KAAK,EAAEL,KAAK,kBAC9BzE,OAAA;QAEE6H,SAAS,EAAC,wBAAwB;QAClCU,KAAK,EAAE;UAAEC,eAAe,EAAE1D,KAAK,CAACnE;QAAM,CAAE;QAAAoH,QAAA,gBAExC/H,OAAA;UAAK6H,SAAS,EAAC,cAAc;UAAAE,QAAA,EAC1BjD,KAAK,CAACpE,KAAK,CAACuE,GAAG,CAAC,CAAC5B,IAAI,EAAEqG,SAAS,kBAC/B1J,OAAA;YAAqB6H,SAAS,EAAC,wBAAwB;YAAAE,QAAA,gBACrD/H,OAAA;cAAKwJ,GAAG,EAAEnJ,YAAY,CAACgD,IAAI,CAAE;cAACoG,GAAG,EAAEpG,IAAK;cAACwE,SAAS,EAAC;YAAsB;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC5ErI,OAAA;cAAK6H,SAAS,EAAC,qBAAqB;cAAAE,QAAA,EAAE1E,IAAI,CAACsG,WAAW,CAAC;YAAC;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAFvDqB,SAAS;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGd,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNrI,OAAA;UAAK6H,SAAS,EAAC,mBAAmB;UAAAE,QAAA,EAAEjD,KAAK,CAACrE;QAAW;UAAAyH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAZvD5D,KAAK;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrI,OAAA;MAAK6H,SAAS,EAAC,YAAY;MAACU,KAAK,EAAE;QAAEqB,mBAAmB,EAAE1I,KAAK,GAAG,CAAC,GAAG,gBAAgB,GAAG;MAAiB,CAAE;MAAA6G,QAAA,EAC7GrH,KAAK,CAACuE,GAAG,CAAC,CAAC5B,IAAI,EAAEoB,KAAK,KAAK;QAC1B,IAAIoF,MAAM,GAAG,EAAE;QACf,QAAQxG,IAAI;UACV,KAAK,eAAe;YAAEwG,MAAM,GAAG3K,YAAY;YAAE;UAC7C,KAAK,aAAa;YAAE2K,MAAM,GAAGxK,UAAU;YAAE;UACzC,KAAK,WAAW;YAAEwK,MAAM,GAAG1K,QAAQ;YAAE;UACrC,KAAK,YAAY;YAAE0K,MAAM,GAAGzK,SAAS;YAAE;UACvC,KAAK,iBAAiB;YAAEyK,MAAM,GAAGpK,YAAY;YAAE;UAC/C,KAAK,aAAa;YAAEoK,MAAM,GAAGrK,UAAU;YAAE;UACzC,KAAK,cAAc;YAAEqK,MAAM,GAAGtK,WAAW;YAAE;UAC3C,KAAK,oBAAoB;YAAEsK,MAAM,GAAGvK,eAAe;YAAE;UACrD,KAAK,kBAAkB;YAAEuK,MAAM,GAAG7K,aAAa;YAAE;UACjD,KAAK,eAAe;YAAE6K,MAAM,GAAGjL,YAAY;YAAE;UAC7C,KAAK,iBAAiB;YAAEiL,MAAM,GAAGnL,cAAc;YAAE;UACjD,KAAK,aAAa;YAAEmL,MAAM,GAAGnK,UAAU;YAAE;UACzC,KAAK,aAAa;YAAEmK,MAAM,GAAG/J,UAAU;YAAE;UACzC,KAAK,YAAY;YAAE+J,MAAM,GAAGjK,SAAS;YAAE;UACvC,KAAK,kBAAkB;YAAEiK,MAAM,GAAGhK,eAAe;YAAE;UACnD,KAAK,eAAe;YAAEgK,MAAM,GAAGlK,YAAY;YAAE;UAC7C;YAASkK,MAAM,GAAG9K,aAAa;QACjC;QAEA,oBACEiB,OAAA;UACE6H,SAAS,EAAG;AACpB,sBAAsBjH,aAAa,CAAC+D,QAAQ,CAACtB,IAAI,CAAC,GAAG,UAAU,GAAG,EAAG;AACrE,sBAAsBxB,YAAY,KAAK4C,KAAK,GAAG,gBAAgB,GAAG,EAAG;AACrE,sBAAsB1C,KAAK,IAAIf,cAAc,GAAG,iBAAiB,GAAG,EAAG,EAAE;UACjE8G,OAAO,EAAEA,CAAA,KAAM1E,eAAe,CAACC,IAAI,CAAE;UAAA0E,QAAA,gBACvC/H,OAAA;YAAKwJ,GAAG,EAAEK,MAAO;YAAChC,SAAS,EAAC,YAAY;YAAC4B,GAAG,EAAEpG;UAAK;YAAA6E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtDrI,OAAA;YAAK6H,SAAS,EAAC,cAAc;YAAAE,QAAA,EAAE1E;UAAI;YAAA6E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAPhC5D,KAAK;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQZ,CAAC;MAER,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAED,CAAClG,QAAQ,iBACRnC,OAAA;MAAK6H,SAAS,EAAC,kBAAkB;MAAAE,QAAA,eAC/B/H,OAAA;QAAK6H,SAAS,EAAC,oBAAoB;QAAAE,QAAA,gBACjC/H,OAAA;UAAM6H,SAAS,EAAC,eAAe;UAAAE,QAAA,EAAC;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAC1DyB,KAAK,CAACC,IAAI,CAAC;UAAEpG,MAAM,EAAEpB;QAAS,CAAC,EAAE,CAACyH,CAAC,EAAEC,CAAC,kBACrCjK,OAAA;UAAawJ,GAAG,EAAE/K,WAAY;UAACgL,GAAG,EAAC,UAAU;UAAC5B,SAAS,EAAC;QAAe,GAA7DoC,CAAC;UAAA/B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA8D,CAC1E,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EACA,CAAClG,QAAQ,gBACRnC,OAAA;MAAK6H,SAAS,EAAC,eAAe;MAAAE,QAAA,gBAC5B/H,OAAA;QAAQ8H,OAAO,EAAExB,aAAc;QAAAyB,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDrI,OAAA;QAAQ8H,OAAO,EAAEA,CAAA,KAAMjH,gBAAgB,CAAC,EAAE,CAAE;QAACqJ,QAAQ,EAAEtJ,aAAa,CAAC+C,MAAM,KAAK,CAAE;QAAAoE,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxGrI,OAAA;QAAQ8H,OAAO,EAAE9D,YAAa;QAACkG,QAAQ,EAAEtJ,aAAa,CAAC+C,MAAM,KAAK,CAAE;QAAAoE,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,gBAENrI,OAAA;MAAK6H,SAAS,EAAC,oBAAoB;MAAAE,QAAA,eACjC/H,OAAA;QAAQ6H,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEA,CAAA,KAAM/G,mBAAmB,CAAC,IAAI,CAAE;QAAAgH,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5F,CACN,EACAvH,gBAAgB,IAAI6G,kBAAkB,CAAC,CAAC,EACxC4B,oBAAoB,CAAC,CAAC;EAAA;IAAArB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAIR,CAAC;AAACnI,GAAA,CAxjBID,eAAe;AAAAkK,EAAA,GAAflK,eAAe;AA0jBrB,eAAeA,eAAe;AAAC,IAAAkK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}