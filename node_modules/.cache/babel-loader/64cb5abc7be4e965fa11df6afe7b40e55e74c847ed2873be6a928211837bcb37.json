{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgoldfarb/Documents/OhConnections/web/web/src/pages/ConnectionsPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, Component } from 'react';\nimport './ConnectionsPage.css';\nimport baseballImg from '../images/baseball.png';\nimport freddieFreeman from '../images/examples/freddiefreeman.png';\nimport mookieBetts from '../images/examples/mookiebetts.png';\nimport shoheiOhtani from '../images/examples/shoheiohtani.png';\nimport maxMuncy from '../images/examples/maxmuncy.png';\nimport joseAltuve from '../images/examples/josealtuve.png';\nimport miguelCabrera from '../images/examples/miguelcabrera.png';\nimport ronaldAcunaJr from '../images/examples/ronaldacunajr.png';\nimport salvadorPerez from '../images/examples/salvadorperez.png';\nimport albertPujols from './inputs/03-15-2024/albertPujols.png';\nimport babeRuth from './inputs/03-15-2024/babeRuth.jpg';\nimport hankAaron from './inputs/03-15-2024/hankAaron.jpg';\nimport barryBonds from './inputs/03-15-2024/barryBonds.jpg';\nimport fernandoTatisJr from './inputs/03-15-2024/fernandoTatisJr.png';\nimport cavanBiggio from './inputs/03-15-2024/cavanBiggio.png';\nimport boBichette from './inputs/03-15-2024/boBichette.png';\nimport kebryanHayes from './inputs/03-15-2024/kebryanHayes.png';\nimport aaronJudge from './inputs/03-15-2024/aaronJudge.png';\nimport nolanArenado from './inputs/03-15-2024/nolanArenado.png';\nimport adamJones from './inputs/03-15-2024/adamJones.png';\nimport christianYelich from './inputs/03-15-2024/christianYelich.png';\nimport ericHosmer from './inputs/03-15-2024/ericHosmer.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionsPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const playerImages = {\n    'Albert Pujols': albertPujols,\n    'Babe Ruth': babeRuth,\n    'Hank Aaron': hankAaron,\n    'Barry Bonds': barryBonds,\n    'Ronald Acuña Jr.': ronaldAcunaJr,\n    'Shohei Ohtani': shoheiOhtani,\n    'Aaron Judge': aaronJudge,\n    'Freddie Freeman': freddieFreeman,\n    'Fernando Tatis Jr.': fernandoTatisJr,\n    'Ke\\'Bryan Hayes': kebryanHayes,\n    'Cavan Biggio': cavanBiggio,\n    'Bo Bichette': boBichette,\n    'Adam Jones': adamJones,\n    'Christian Yelich': christianYelich,\n    'Nolan Arenado': nolanArenado,\n    'Eric Hosmer': ericHosmer\n  };\n  const initialTerms = ['Albert Pujols', 'Babe Ruth', 'Hank Aaron', 'Barry Bonds', 'Ronald Acuña Jr.', 'Shohei Ohtani', 'Aaron Judge', 'Freddie Freeman', 'Fernando Tatis Jr.', 'Ke\\'Bryan Hayes', 'Cavan Biggio', 'Bo Bichette', 'Adam Jones', 'Christian Yelich', 'Nolan Arenado', 'Eric Hosmer'];\n  const correctGroups = [{\n    number: 1,\n    description: '700+ HOME RUNS',\n    terms: ['Babe Ruth', 'Albert Pujols', 'Hank Aaron', 'Barry Bonds'],\n    color: '#4CAF50'\n  }, {\n    number: 1,\n    description: '2023 ALL STAR GAME STARTERS',\n    terms: ['Ronald Acuña Jr.', 'Shohei Ohtani', 'Aaron Judge', 'Freddie Freeman'],\n    color: '#e5de00'\n  }, {\n    number: 1,\n    description: 'SONS OF FORMER MLB PLAYERS',\n    terms: ['Fernando Tatis Jr.', 'Ke\\'Bryan Hayes', 'Cavan Biggio', 'Bo Bichette'],\n    color: '#e27602'\n  }, {\n    number: 1,\n    description: '2017 TEAM USA WBC PLAYERS',\n    terms: ['Adam Jones', 'Christian Yelich', 'Nolan Arenado', 'Eric Hosmer'],\n    color: '#de0a26'\n  }];\n  const [selectedTerms, setSelectedTerms] = useState([]);\n  const [showResultsPopup, setShowResultsPopup] = useState(false);\n  const [guessIncorrect, setGuessIncorrect] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [width, height] = useWindowSize();\n  // console.log(width, height);\n  const [readyToShowPopUp, setReadyToShowPopUp] = useState(false);\n  const [nextPuzzleCountdown, setNextPuzzleCountdown] = useState('');\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [userWon, setUserWon] = useState(false);\n  const [animateIndex, setAnimateIndex] = useState(null);\n  const [shake, setShake] = useState(false);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState([]);\n  const [mistakes, setMistakes] = useState(4);\n  const [submittedSets, setSubmittedSets] = useState([]);\n  const [guessedGroups, setGuessedGroups] = useState([]);\n  const [terms, setTerms] = useState(initialTerms);\n  // const [terms, setTerms] = useState(() => {\n  //   const savedTerms = localStorage.getItem('terms');\n  //   return savedTerms ? JSON.parse(savedTerms) : initialTerms;\n  // });\n  // const [guessedGroups, setGuessedGroups] = useState(() => {\n  //   const savedGroups = localStorage.getItem('guessedGroups');\n  //   return savedGroups ? JSON.parse(savedGroups) : [];\n  // });\n  // const [mistakes, setMistakes] = useState(() => {\n  //   const savedMistakes = localStorage.getItem('mistakes');\n  //   return savedMistakes !== null ? parseInt(savedMistakes, 10) : 4;\n  // });\n  // const [submittedSets, setSubmittedSets] = useState(() => {\n  //   const savedSets = localStorage.getItem('submittedSets');\n  //   return savedSets ? JSON.parse(savedSets) : [];\n  // });\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n\n  // useEffect(() => {\n  //   localStorage.setItem('terms', JSON.stringify(terms));\n  // }, [terms]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('mistakes', mistakes.toString());\n  // }, [mistakes]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('submittedSets', JSON.stringify(submittedSets));\n  // }, [submittedSets]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('guessedGroups', JSON.stringify(guessedGroups));\n  // }, [guessedGroups]);\n\n  const getVictoryMessage = mistakesLeft => {\n    switch (mistakesLeft) {\n      case 4:\n        return \"Perfect!\";\n      case 3:\n        return \"Great Job!\";\n      case 2:\n        return \"Solid!\";\n      case 1:\n        return \"Phew!\";\n      default:\n        return \"Good Job!\";\n    }\n  };\n  const handleTermClick = term => {\n    if (gameOver) return;\n    if (selectedTerms.includes(term)) {\n      setSelectedTerms(selectedTerms.filter(t => t !== term));\n      setShowPopup(false);\n    } else {\n      if (selectedTerms.length < 4) {\n        setSelectedTerms([...selectedTerms, term]);\n        setShowPopup(false);\n      } else {\n        setPopupMessage(\"You cannot select more than 4 players.\");\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 2000);\n      }\n    }\n  };\n  const handleSubmit = () => {\n    if (gameOver || mistakes <= 0 || selectedTerms.length !== 4) {\n      return;\n    }\n    setIsSubmitting(true);\n    const currentSetSorted = [...selectedTerms].sort();\n    const currentSetString = currentSetSorted.join(',');\n    if (submittedSets.includes(currentSetString)) {\n      setPopupMessage(\"You cannot guess the same 4 players twice.\");\n      setShowPopup(true);\n      setTimeout(() => {\n        setShowPopup(false);\n        setIsSubmitting(false);\n      }, 2000);\n      return;\n    }\n    const oneAway = correctGroups.some(group => {\n      const matchingTerms = group.terms.filter(term => currentSetSorted.includes(term));\n      return matchingTerms.length === 3 && group.terms.sort().join(',') !== currentSetString;\n    });\n\n    // Map the selected terms to their corresponding colors\n    const guessColors = selectedTerms.map(term => {\n      const group = correctGroups.find(group => group.terms.includes(term));\n      return group ? group.color : '#FFFFFF';\n    });\n\n    // Update the move history with the guess colors\n    setMoveHistory(prevHistory => [...prevHistory, guessColors]);\n\n    // Set timeout to allow for jump animation to complete before checking the guess\n    setTimeout(() => {\n      if (oneAway) {\n        // Perform shake animation for 'One Away'\n        setGuessIncorrect(true);\n\n        // Delay the 'One Away' popup to display after the shake animation\n        setTimeout(() => {\n          setGuessIncorrect(false);\n          setPopupMessage(\"One Away!\");\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 2000);\n        }, 500); // Assuming the shake animation lasts 500ms\n\n        setSubmittedSets([...submittedSets, currentSetString]);\n        setMistakes(mistakes - 1);\n        setIsSubmitting(false);\n        return;\n      }\n\n      // Check if the guess matches any correct group\n      const foundGroup = correctGroups.find(group => group.terms.sort().join(',') === currentSetString);\n      if (foundGroup) {\n        // Handle correct guess\n        const updatedGroup = {\n          ...foundGroup,\n          terms: selectedTerms\n        };\n        setGuessedGroups([...guessedGroups, updatedGroup]);\n        setTerms(terms.filter(term => !foundGroup.terms.includes(term)));\n        setSelectedTerms([]);\n        if (guessedGroups.length + 1 === correctGroups.length) {\n          // Check if game is won\n          setGameOver(true);\n          setUserWon(true);\n          setPopupMessage(getVictoryMessage(mistakes));\n          setShowPopup(true);\n          setTimeout(() => {\n            setShowPopup(false);\n            setShowResultsPopup(true);\n          }, 1000);\n        }\n      } else {\n        handleIncorrectGuess(currentSetString, currentSetSorted);\n      }\n    }, 2000); // Adjust as needed based on the duration of the jump animation\n  };\n\n  const handleIncorrectGuess = (currentSetString, currentSetSorted) => {\n    setShake(true); // Initiate the shake animation to indicate an incorrect guess.\n\n    setTimeout(() => {\n      setShake(false); // Ensure shake animation ends.\n\n      const oneAway = correctGroups.some(group => {\n        return group.terms.filter(term => currentSetSorted.includes(term)).length === 3;\n      });\n      if (oneAway) {\n        setTimeout(() => {\n          setPopupMessage(\"One Away!\");\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 2000);\n        }, 500); // Wait for the shake animation to end before showing the popup.\n      }\n\n      setSubmittedSets([...submittedSets, currentSetString]);\n      setMistakes(mistakes - 1);\n      if (mistakes - 1 <= 0) {\n        // Game over logic if mistakes run out.\n        concludeGameOnMistake();\n      }\n    }, 500); // This should match the duration of your shake CSS animation.\n  };\n\n  const concludeGameOnMistake = () => {\n    setGameOver(true);\n    setUserWon(false);\n    setPopupMessage(\"Nice try!\");\n    setShowPopup(true);\n    setTimeout(() => {\n      setShowPopup(false);\n      setReadyToShowPopUp(true);\n    }, 2000);\n  };\n  function useWindowSize() {\n    _s();\n    const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\n    useEffect(() => {\n      const handleResize = () => {\n        setSize([window.innerWidth, window.innerHeight]);\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n    return size;\n  }\n  _s(useWindowSize, \"KD928l6WwZVqhph5sEOKFH76SRY=\");\n  useEffect(() => {\n    if (selectedTerms.length < 4) {\n      return;\n    }\n    setShake(false);\n    selectedTerms.forEach((term, index) => {\n      setTimeout(() => {\n        setAnimateIndex(index);\n      }, index * 500);\n    });\n    const timeoutId = setTimeout(() => {\n      setAnimateIndex(null);\n      if (guessIncorrect) {\n        setShake(true);\n      }\n    }, selectedTerms.length * 500);\n    return () => clearTimeout(timeoutId);\n  }, [selectedTerms, guessIncorrect]);\n  useEffect(() => {\n    if (animateIndex !== null) {\n      const timeoutId = setTimeout(() => {\n        setAnimateIndex(null);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [animateIndex]);\n  useEffect(() => {\n    if (guessIncorrect) {\n      const timeoutId = setTimeout(() => {\n        setShake(false);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [guessIncorrect]);\n  useEffect(() => {\n    if (shake) {\n      const timer = setTimeout(() => {\n        setShake(false);\n        setGuessIncorrect(false);\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shake]);\n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length > 0) {\n      const timer = setTimeout(() => {\n        const [groupToReveal, ...restGroups] = remainingGroupsToReveal;\n        setGuessedGroups(prevGuessedGroups => [...prevGuessedGroups, groupToReveal]);\n        setTerms(terms => terms.filter(term => !groupToReveal.terms.includes(term)));\n        setRemainingGroupsToReveal(restGroups);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, terms]);\n  useEffect(() => {\n    if (gameOver && readyToShowPopUp && remainingGroupsToReveal.length === 0) {\n      const timer = setTimeout(() => {\n        setShowResultsPopup(true);\n      }, 1700);\n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, readyToShowPopUp]);\n  const handleShuffle = () => {\n    const shuffledTermsArray = shuffleArray([...terms]);\n    setTerms(shuffledTermsArray);\n  };\n  const shuffleArray = array => {\n    let currentIndex = array.length,\n      randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  const shuffledTermsArray = shuffleArray([...terms]);\n  useEffect(() => {\n    setTerms(shuffleArray([...initialTerms]));\n  }, []);\n  const difficultyLevels = [{\n    name: 'Easy',\n    color: '#4CAF50'\n  }, {\n    name: 'Medium',\n    color: '#e5de00'\n  }, {\n    name: 'Hard',\n    color: '#e27602'\n  }, {\n    name: 'Impossible',\n    color: '#de0a26'\n  }];\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const nextPuzzleTimeET = new Date();\n      nextPuzzleTimeET.setHours(19, 0, 0, 0); // 7:00 PM ET\n      if (nextPuzzleTimeET < now) {\n        nextPuzzleTimeET.setDate(nextPuzzleTimeET.getDate() + 1);\n      }\n      const timeUntilNextPuzzle = nextPuzzleTimeET - now;\n      const countdown = new Date(timeUntilNextPuzzle).toISOString().substr(11, 8);\n      setNextPuzzleCountdown(countdown);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const renderResultsPopup = () => {\n    const message = userWon ? getVictoryMessage(mistakes) : \"Next Time!\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-popup\",\n      onClick: () => setShowResultsPopup(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowResultsPopup(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"message-header\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"game-number\",\n          children: [\"OhConnections #\", correctGroups[0].number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-container\",\n          children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-level\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-color\",\n              style: {\n                backgroundColor: level.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-name\",\n              children: level.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)]\n          }, level.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-summary-grid\",\n          children: moveHistory.map((colorSet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-row\",\n            children: colorSet.map((color, colorIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-block\",\n              style: {\n                backgroundColor: color\n              }\n            }, colorIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 7\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 3\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"next-puzzle-countdown\",\n          children: [\"NEXT BOARD IN: \", nextPuzzleCountdown]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-summary-button\",\n          onClick: handleCopySummary,\n          children: \"Share Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this);\n  };\n  const handleCopySummary = () => {\n    const summaryString = moveHistory.map(moveRow => moveRow.map(color => {\n      switch (color) {\n        case correctGroups[0].color:\n          return '🟩';\n        case correctGroups[1].color:\n          return '🟨';\n        case correctGroups[2].color:\n          return '🟧';\n        case correctGroups[3].color:\n          return '🟥';\n        default:\n          return '⬜️';\n      }\n    }).join('')).join('\\n');\n    const legend = `\\n\\n🟩 = Easy\\n🟨 = Medium\\n🟧 = Hard\\n🟥 = Impossible`;\n    const completeSummary = `OhConnections\\nBoard #${correctGroups[0].number}\\n\\n${summaryString}${legend}\\n\\nNEXT PUZZLE IN: ${nextPuzzleCountdown}\\n\\nwww.ohconnections.com`;\n    navigator.clipboard.writeText(completeSummary).then(() => {\n      setPopupMessage('Game summary copied to clipboard!');\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n    }, err => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  const renderHowToPlayPopup = () => {\n    if (!showHowToPlay) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"how-to-play-popup\",\n      onClick: () => setShowHowToPlay(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"how-to-play-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowHowToPlay(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"How to Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Goal: Find groups of four MLB players that have something in common\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"CURRENT DODGERS PLAYERS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-images\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: freddieFreeman,\n                alt: \"Freddie Freeman\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: mookieBetts,\n                alt: \"Mookie Betts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: shoheiOhtani,\n                alt: \"Shohei Ohtani\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: maxMuncy,\n                alt: \"Max Muncy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"PLAYERS BORN IN VENEZUELA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-images\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: joseAltuve,\n                alt: \"Jose Altuve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ronaldAcunaJr,\n                alt: \"Ronald Acu\\xF1a Jr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: miguelCabrera,\n                alt: \"Miguel Cabrera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: salvadorPerez,\n                alt: \"Salvador Perez\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select four similar players and tap 'Submit' to check if you are correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have four incorrect guesses before the game ends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Each group is represented by a color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-container\",\n          children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-level\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-color\",\n              style: {\n                backgroundColor: level.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-name\",\n              children: level.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 15\n            }, this)]\n          }, level.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connections-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create four groups of four!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-controls button how-to-play-button\",\n        onClick: () => setShowHowToPlay(true),\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 5\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-message\",\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guessed-groups\",\n      children: guessedGroups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guessed-group-combined\",\n        style: {\n          backgroundColor: group.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-images\",\n          children: group.terms.map((term, termIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: playerImages[term],\n              alt: term,\n              className: \"guessed-player-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-name-overlay\",\n              children: term.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this)]\n          }, termIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-description\",\n          children: group.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terms-grid\",\n      style: {\n        gridTemplateColumns: width > 0 ? 'repeat(4, 1fr)' : 'repeat(2, 1fr)'\n      },\n      children: terms.map((term, index) => {\n        let imgSrc = '';\n        switch (term) {\n          case 'Albert Pujols':\n            imgSrc = albertPujols;\n            break;\n          case 'Barry Bonds':\n            imgSrc = barryBonds;\n            break;\n          case 'Babe Ruth':\n            imgSrc = babeRuth;\n            break;\n          case 'Hank Aaron':\n            imgSrc = hankAaron;\n            break;\n          case 'Ke\\'Bryan Hayes':\n            imgSrc = kebryanHayes;\n            break;\n          case 'Bo Bichette':\n            imgSrc = boBichette;\n            break;\n          case 'Cavan Biggio':\n            imgSrc = cavanBiggio;\n            break;\n          case 'Fernando Tatis Jr.':\n            imgSrc = fernandoTatisJr;\n            break;\n          case 'Ronald Acuña Jr.':\n            imgSrc = ronaldAcunaJr;\n            break;\n          case 'Shohei Ohtani':\n            imgSrc = shoheiOhtani;\n            break;\n          case 'Freddie Freeman':\n            imgSrc = freddieFreeman;\n            break;\n          case 'Aaron Judge':\n            imgSrc = aaronJudge;\n            break;\n          case 'Eric Hosmer':\n            imgSrc = ericHosmer;\n            break;\n          case 'Adam Jones':\n            imgSrc = adamJones;\n            break;\n          case 'Christian Yelich':\n            imgSrc = christianYelich;\n            break;\n          case 'Nolan Arenado':\n            imgSrc = nolanArenado;\n            break;\n          default:\n            imgSrc = miguelCabrera;\n        }\n        let isSelected = selectedTerms.includes(term);\n        let shouldAnimate = isSubmitting && isSelected;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `term-block \n                              ${isSelected ? 'selected' : ''} \n                              ${shouldAnimate ? 'jump-animation' : ''} \n                              ${shake && guessIncorrect ? 'shake-animation' : ''}`,\n          onClick: () => handleTermClick(term),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgSrc,\n            className: \"term-image\",\n            alt: term\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-overlay\",\n            children: term\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 5\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistakes-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistakes-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mistakes-text\",\n          children: \"Mistakes remaining: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), Array.from({\n          length: mistakes\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: baseballImg,\n          alt: \"Baseball\",\n          className: \"baseball-icon\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this), !gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShuffle,\n        children: \"Shuffle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTerms([]),\n        disabled: selectedTerms.length === 0,\n        children: \"Deselect All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: selectedTerms.length !== 4,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-button\",\n        onClick: () => setShowResultsPopup(true),\n        children: \"View Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this), showResultsPopup && renderResultsPopup(), renderHowToPlayPopup()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 509,\n    columnNumber: 5\n  }, this);\n};\n_s2(ConnectionsPage, \"78E72bS0e3TAsyloN4VEtz0D8TI=\", true);\n_c = ConnectionsPage;\nexport default ConnectionsPage;\nvar _c;\n$RefreshReg$(_c, \"ConnectionsPage\");","map":{"version":3,"names":["React","useState","useEffect","Component","baseballImg","freddieFreeman","mookieBetts","shoheiOhtani","maxMuncy","joseAltuve","miguelCabrera","ronaldAcunaJr","salvadorPerez","albertPujols","babeRuth","hankAaron","barryBonds","fernandoTatisJr","cavanBiggio","boBichette","kebryanHayes","aaronJudge","nolanArenado","adamJones","christianYelich","ericHosmer","jsxDEV","_jsxDEV","ConnectionsPage","_s2","_s","$RefreshSig$","playerImages","initialTerms","correctGroups","number","description","terms","color","selectedTerms","setSelectedTerms","showResultsPopup","setShowResultsPopup","guessIncorrect","setGuessIncorrect","isSubmitting","setIsSubmitting","width","height","useWindowSize","readyToShowPopUp","setReadyToShowPopUp","nextPuzzleCountdown","setNextPuzzleCountdown","showHowToPlay","setShowHowToPlay","userWon","setUserWon","animateIndex","setAnimateIndex","shake","setShake","moveHistory","setMoveHistory","gameOver","setGameOver","remainingGroupsToReveal","setRemainingGroupsToReveal","mistakes","setMistakes","submittedSets","setSubmittedSets","guessedGroups","setGuessedGroups","setTerms","popupMessage","setPopupMessage","showPopup","setShowPopup","getVictoryMessage","mistakesLeft","handleTermClick","term","includes","filter","t","length","setTimeout","handleSubmit","currentSetSorted","sort","currentSetString","join","oneAway","some","group","matchingTerms","guessColors","map","find","prevHistory","foundGroup","updatedGroup","handleIncorrectGuess","concludeGameOnMistake","size","setSize","window","innerWidth","innerHeight","handleResize","addEventListener","removeEventListener","forEach","index","timeoutId","clearTimeout","timer","groupToReveal","restGroups","prevGuessedGroups","handleShuffle","shuffledTermsArray","shuffleArray","array","currentIndex","randomIndex","Math","floor","random","difficultyLevels","name","intervalId","setInterval","now","Date","nextPuzzleTimeET","setHours","setDate","getDate","timeUntilNextPuzzle","countdown","toISOString","substr","clearInterval","renderResultsPopup","message","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","level","style","backgroundColor","colorSet","colorIndex","handleCopySummary","summaryString","moveRow","legend","completeSummary","navigator","clipboard","writeText","then","err","console","error","renderHowToPlayPopup","src","alt","termIndex","toUpperCase","gridTemplateColumns","imgSrc","isSelected","shouldAnimate","Array","from","_","i","disabled","_c","$RefreshReg$"],"sources":["/Users/michaelgoldfarb/Documents/OhConnections/web/web/src/pages/ConnectionsPage.js"],"sourcesContent":["import React, { useState, useEffect, Component } from 'react';\nimport './ConnectionsPage.css';\nimport baseballImg from '../images/baseball.png';\nimport freddieFreeman from '../images/examples/freddiefreeman.png';\nimport mookieBetts from '../images/examples/mookiebetts.png';\nimport shoheiOhtani from '../images/examples/shoheiohtani.png';\nimport maxMuncy from '../images/examples/maxmuncy.png';\nimport joseAltuve from '../images/examples/josealtuve.png';\nimport miguelCabrera from '../images/examples/miguelcabrera.png';\nimport ronaldAcunaJr from '../images/examples/ronaldacunajr.png';\nimport salvadorPerez from '../images/examples/salvadorperez.png';\nimport albertPujols from './inputs/03-15-2024/albertPujols.png';\nimport babeRuth from './inputs/03-15-2024/babeRuth.jpg';\nimport hankAaron from './inputs/03-15-2024/hankAaron.jpg';\nimport barryBonds from './inputs/03-15-2024/barryBonds.jpg';\nimport fernandoTatisJr from './inputs/03-15-2024/fernandoTatisJr.png';\nimport cavanBiggio from './inputs/03-15-2024/cavanBiggio.png';\nimport boBichette from './inputs/03-15-2024/boBichette.png';\nimport kebryanHayes from './inputs/03-15-2024/kebryanHayes.png';\nimport aaronJudge from './inputs/03-15-2024/aaronJudge.png';\nimport nolanArenado from './inputs/03-15-2024/nolanArenado.png';\nimport adamJones from './inputs/03-15-2024/adamJones.png';\nimport christianYelich from './inputs/03-15-2024/christianYelich.png';\nimport ericHosmer from './inputs/03-15-2024/ericHosmer.png';\n\n\n\n\nconst ConnectionsPage = () => {\n  const playerImages = {\n    'Albert Pujols': albertPujols,\n    'Babe Ruth': babeRuth,\n    'Hank Aaron': hankAaron, \n    'Barry Bonds': barryBonds, \n    'Ronald Acuña Jr.': ronaldAcunaJr, \n    'Shohei Ohtani': shoheiOhtani, \n    'Aaron Judge': aaronJudge, \n    'Freddie Freeman': freddieFreeman, \n    'Fernando Tatis Jr.': fernandoTatisJr, \n    'Ke\\'Bryan Hayes': kebryanHayes, \n    'Cavan Biggio': cavanBiggio, \n    'Bo Bichette': boBichette, \n    'Adam Jones': adamJones, \n    'Christian Yelich': christianYelich, \n    'Nolan Arenado': nolanArenado, \n    'Eric Hosmer': ericHosmer\n  };\n  const initialTerms = ['Albert Pujols', 'Babe Ruth', 'Hank Aaron', 'Barry Bonds', 'Ronald Acuña Jr.', 'Shohei Ohtani', 'Aaron Judge', 'Freddie Freeman', 'Fernando Tatis Jr.', 'Ke\\'Bryan Hayes', 'Cavan Biggio', 'Bo Bichette', 'Adam Jones', 'Christian Yelich', 'Nolan Arenado', 'Eric Hosmer'];\n  const correctGroups = [\n    { number: 1, description: '700+ HOME RUNS', terms: ['Babe Ruth', 'Albert Pujols', 'Hank Aaron', 'Barry Bonds'],  color: '#4CAF50' },\n    { number: 1, description: '2023 ALL STAR GAME STARTERS', terms: ['Ronald Acuña Jr.', 'Shohei Ohtani', 'Aaron Judge', 'Freddie Freeman'],  color: '#e5de00' },\n    { number: 1, description: 'SONS OF FORMER MLB PLAYERS', terms: ['Fernando Tatis Jr.', 'Ke\\'Bryan Hayes', 'Cavan Biggio', 'Bo Bichette'], color: '#e27602' },\n    { number: 1, description: '2017 TEAM USA WBC PLAYERS', terms: ['Adam Jones', 'Christian Yelich', 'Nolan Arenado', 'Eric Hosmer'], color: '#de0a26' }]\n  \n  const [selectedTerms, setSelectedTerms] = useState([]);\n  const [showResultsPopup, setShowResultsPopup] = useState(false);\n  const [guessIncorrect, setGuessIncorrect] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [width, height] = useWindowSize();\n  // console.log(width, height);\n  const [readyToShowPopUp, setReadyToShowPopUp] = useState(false);\n  const [nextPuzzleCountdown, setNextPuzzleCountdown] = useState('');\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [userWon, setUserWon] = useState(false);\n  const [animateIndex, setAnimateIndex] = useState(null);\n  const [shake, setShake] = useState(false);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState([]);\n  const [mistakes, setMistakes] = useState(4);\n  const [submittedSets, setSubmittedSets] = useState([]);\n  const [guessedGroups, setGuessedGroups] = useState([]);\n  const [terms, setTerms] = useState(initialTerms);\n  // const [terms, setTerms] = useState(() => {\n  //   const savedTerms = localStorage.getItem('terms');\n  //   return savedTerms ? JSON.parse(savedTerms) : initialTerms;\n  // });\n  // const [guessedGroups, setGuessedGroups] = useState(() => {\n  //   const savedGroups = localStorage.getItem('guessedGroups');\n  //   return savedGroups ? JSON.parse(savedGroups) : [];\n  // });\n  // const [mistakes, setMistakes] = useState(() => {\n  //   const savedMistakes = localStorage.getItem('mistakes');\n  //   return savedMistakes !== null ? parseInt(savedMistakes, 10) : 4;\n  // });\n  // const [submittedSets, setSubmittedSets] = useState(() => {\n  //   const savedSets = localStorage.getItem('submittedSets');\n  //   return savedSets ? JSON.parse(savedSets) : [];\n  // });\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n\n  // useEffect(() => {\n  //   localStorage.setItem('terms', JSON.stringify(terms));\n  // }, [terms]);\n  \n  // useEffect(() => {\n  //   localStorage.setItem('mistakes', mistakes.toString());\n  // }, [mistakes]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('submittedSets', JSON.stringify(submittedSets));\n  // }, [submittedSets]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('guessedGroups', JSON.stringify(guessedGroups));\n  // }, [guessedGroups]);\n\n  const getVictoryMessage = (mistakesLeft) => {\n    switch(mistakesLeft) {\n      case 4: return \"Perfect!\";\n      case 3: return \"Great Job!\";\n      case 2: return \"Solid!\";\n      case 1: return \"Phew!\";\n      default: return \"Good Job!\";\n    }\n  };\n  \n  const handleTermClick = (term) => {\n    if (gameOver) return;\n    if (selectedTerms.includes(term)) {\n      setSelectedTerms(selectedTerms.filter(t => t !== term));\n      setShowPopup(false);\n    } else {\n      if (selectedTerms.length < 4) {\n        setSelectedTerms([...selectedTerms, term]);\n        setShowPopup(false);\n      } else {\n        setPopupMessage(\"You cannot select more than 4 players.\");\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 2000);\n      }\n    }\n  };\n\n  const handleSubmit = () => {\n    if (gameOver || mistakes <= 0 || selectedTerms.length !== 4) {\n      return;\n    }\n  \n    setIsSubmitting(true);\n  \n    const currentSetSorted = [...selectedTerms].sort();\n    const currentSetString = currentSetSorted.join(',');\n  \n    if (submittedSets.includes(currentSetString)) {\n      setPopupMessage(\"You cannot guess the same 4 players twice.\");\n      setShowPopup(true);\n      setTimeout(() => {\n        setShowPopup(false);\n        setIsSubmitting(false);\n      }, 2000);\n      return;\n    }\n  \n    const oneAway = correctGroups.some(group => {\n      const matchingTerms = group.terms.filter(term => currentSetSorted.includes(term));\n      return matchingTerms.length === 3 && group.terms.sort().join(',') !== currentSetString;\n    });\n  \n    // Map the selected terms to their corresponding colors\n    const guessColors = selectedTerms.map(term => {\n      const group = correctGroups.find(group => group.terms.includes(term));\n      return group ? group.color : '#FFFFFF';\n    });\n  \n    // Update the move history with the guess colors\n    setMoveHistory(prevHistory => [...prevHistory, guessColors]);\n  \n    // Set timeout to allow for jump animation to complete before checking the guess\n    setTimeout(() => {\n      if (oneAway) {\n        // Perform shake animation for 'One Away'\n        setGuessIncorrect(true);\n        \n        // Delay the 'One Away' popup to display after the shake animation\n        setTimeout(() => {\n          setGuessIncorrect(false);\n          setPopupMessage(\"One Away!\");\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 2000);\n        }, 500); // Assuming the shake animation lasts 500ms\n        \n        setSubmittedSets([...submittedSets, currentSetString]);\n        setMistakes(mistakes - 1);\n        setIsSubmitting(false);\n        return;\n      }\n  \n      // Check if the guess matches any correct group\n      const foundGroup = correctGroups.find(group => group.terms.sort().join(',') === currentSetString);\n  \n      if (foundGroup) {\n        // Handle correct guess\n        const updatedGroup = { ...foundGroup, terms: selectedTerms };\n        setGuessedGroups([...guessedGroups, updatedGroup]);\n        setTerms(terms.filter(term => !foundGroup.terms.includes(term)));\n        setSelectedTerms([]);\n  \n        if (guessedGroups.length + 1 === correctGroups.length) {\n          // Check if game is won\n          setGameOver(true);\n          setUserWon(true);\n          setPopupMessage(getVictoryMessage(mistakes));\n          setShowPopup(true);\n          setTimeout(() => {\n            setShowPopup(false);\n            setShowResultsPopup(true);\n          }, 1000);\n        }\n      } else {\n        handleIncorrectGuess(currentSetString, currentSetSorted);\n      }\n  \n    }, 2000); // Adjust as needed based on the duration of the jump animation\n  };\n  \n  \n  const handleIncorrectGuess = (currentSetString, currentSetSorted) => {\n    setShake(true); // Initiate the shake animation to indicate an incorrect guess.\n  \n    setTimeout(() => {\n      setShake(false); // Ensure shake animation ends.\n  \n      const oneAway = correctGroups.some(group => {\n        return group.terms.filter(term => currentSetSorted.includes(term)).length === 3;\n      });\n  \n      if (oneAway) {\n        setTimeout(() => {\n          setPopupMessage(\"One Away!\");\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 2000);\n        }, 500); // Wait for the shake animation to end before showing the popup.\n      }\n  \n      setSubmittedSets([...submittedSets, currentSetString]);\n      setMistakes(mistakes - 1);\n      if (mistakes - 1 <= 0) {\n        // Game over logic if mistakes run out.\n        concludeGameOnMistake();\n      }\n    }, 500); // This should match the duration of your shake CSS animation.\n  };\n  \n  const concludeGameOnMistake = () => {\n    setGameOver(true);\n    setUserWon(false);\n    setPopupMessage(\"Nice try!\");\n    setShowPopup(true);\n    setTimeout(() => {\n      setShowPopup(false);\n      setReadyToShowPopUp(true);\n    }, 2000);\n  };\n\n  \n  function useWindowSize() {\n    const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\n  \n    useEffect(() => {\n      const handleResize = () => {\n        setSize([window.innerWidth, window.innerHeight]);\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return size;\n  }\n\n  useEffect(() => {\n    if (selectedTerms.length < 4) {\n      return;\n    }\n    \n    setShake(false);\n    selectedTerms.forEach((term, index) => {\n      setTimeout(() => {\n        setAnimateIndex(index);\n      }, index * 500);\n    });\n  \n    const timeoutId = setTimeout(() => {\n      setAnimateIndex(null);\n      if (guessIncorrect) {\n        setShake(true);\n      }\n    }, selectedTerms.length * 500);\n  \n    return () => clearTimeout(timeoutId);\n  \n  }, [selectedTerms, guessIncorrect]);\n  \n  useEffect(() => {\n    if (animateIndex !== null) {\n      const timeoutId = setTimeout(() => {\n        setAnimateIndex(null);\n      }, 500);\n  \n      return () => clearTimeout(timeoutId);\n    }\n  }, [animateIndex]);\n\n\n  useEffect(() => {\n    if (guessIncorrect) {\n      const timeoutId = setTimeout(() => {\n        setShake(false);\n      }, 500);\n      \n      return () => clearTimeout(timeoutId);\n    }\n  }, [guessIncorrect]);\n\n  useEffect(() => {\n    if (shake) {\n      const timer = setTimeout(() => {\n        setShake(false);\n        setGuessIncorrect(false);\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shake]);\n\n\n  \n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length > 0) {\n      const timer = setTimeout(() => {\n        const [groupToReveal, ...restGroups] = remainingGroupsToReveal;\n      setGuessedGroups(prevGuessedGroups => [...prevGuessedGroups, groupToReveal]);\n      setTerms(terms => terms.filter(term => !groupToReveal.terms.includes(term)));\n      setRemainingGroupsToReveal(restGroups);\n    }, 1000);\n  \n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, terms]);\n\n  useEffect(() => {\n    if (gameOver && readyToShowPopUp && remainingGroupsToReveal.length === 0) {\n      const timer = setTimeout(() => {\n        setShowResultsPopup(true);\n      }, 1700);\n      return () => clearTimeout(timer);      \n    }\n  }, [remainingGroupsToReveal, gameOver, readyToShowPopUp]);\n  \n  \n  const handleShuffle = () => {\n    const shuffledTermsArray = shuffleArray([...terms]);\n    setTerms(shuffledTermsArray);\n  };\n\n  const shuffleArray = (array) => {\n    let currentIndex = array.length,  randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  const shuffledTermsArray = shuffleArray([...terms]);\n\n  useEffect(() => {\n    setTerms(shuffleArray([...initialTerms]));\n  }, []);\n  \n  const difficultyLevels = [\n    { name: 'Easy', color: '#4CAF50' },\n    { name: 'Medium', color: '#e5de00' },\n    { name: 'Hard', color: '#e27602' },\n    { name: 'Impossible', color: '#de0a26' },\n  ];\n  \n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const nextPuzzleTimeET = new Date();\n      nextPuzzleTimeET.setHours(19, 0, 0, 0); // 7:00 PM ET\n      if (nextPuzzleTimeET < now) {\n        nextPuzzleTimeET.setDate(nextPuzzleTimeET.getDate() + 1);\n      }\n  \n      const timeUntilNextPuzzle = nextPuzzleTimeET - now;\n      const countdown = new Date(timeUntilNextPuzzle).toISOString().substr(11, 8);\n      setNextPuzzleCountdown(countdown);\n    }, 1000);\n  \n    return () => clearInterval(intervalId);\n  }, []);\n\n  \n  const renderResultsPopup = () => {\n    const message = userWon ? getVictoryMessage(mistakes) : \"Next Time!\";\n    \n    return (\n      <div className=\"results-popup\" onClick={() => setShowResultsPopup(false)}>\n        <div className=\"results-content\" onClick={(e) => e.stopPropagation()}>\n          <button className=\"close-button\" onClick={() => setShowResultsPopup(false)}>X</button>\n          <h2 className=\"message-header\">{message}</h2>\n          <p className=\"game-number\">OhConnections #{correctGroups[0].number}</p>\n          <div className=\"difficulty-container\">\n            {difficultyLevels.map(level => (\n              <div key={level.name} className=\"difficulty-level\">\n                <span className=\"difficulty-color\" style={{ backgroundColor: level.color }}></span>\n                <span className=\"difficulty-name\">{level.name}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"game-summary-grid\">\n          {moveHistory.map((colorSet, index) => (\n  <div key={index} className=\"summary-row\">\n    {colorSet.map((color, colorIndex) => (\n      <div key={colorIndex} className=\"summary-block\" style={{ backgroundColor: color }}></div>\n    ))}\n  </div>\n))}\n\n          </div>\n          <p className=\"next-puzzle-countdown\">NEXT BOARD IN: {nextPuzzleCountdown}</p>\n          <button className=\"copy-summary-button\" onClick={handleCopySummary}>Share Results</button>\n        </div>\n      </div>\n    );\n  };\n\n  const handleCopySummary = () => {\n    const summaryString = moveHistory.map(moveRow => \n      moveRow.map(color => {\n        switch (color) {\n          case correctGroups[0].color: return '🟩';\n          case correctGroups[1].color: return '🟨';\n          case correctGroups[2].color: return '🟧';\n          case correctGroups[3].color: return '🟥';\n          default: return '⬜️';\n        }\n      }).join('')\n    ).join('\\n');\n  \n    const legend = `\\n\\n🟩 = Easy\\n🟨 = Medium\\n🟧 = Hard\\n🟥 = Impossible`;\n\n    const completeSummary = `OhConnections\\nBoard #${correctGroups[0].number}\\n\\n${summaryString}${legend}\\n\\nNEXT PUZZLE IN: ${nextPuzzleCountdown}\\n\\nwww.ohconnections.com`;\n    \n    navigator.clipboard.writeText(completeSummary).then(() => {\n      setPopupMessage('Game summary copied to clipboard!');\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n    }, (err) => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  \n  \n  const renderHowToPlayPopup = () => {\n    if (!showHowToPlay) return null;\n  \n    return (\n      <div className=\"how-to-play-popup\" onClick={() => setShowHowToPlay(false)}>\n        <div className=\"how-to-play-content\" onClick={e => e.stopPropagation()}>\n          <button className=\"close-button\" onClick={() => setShowHowToPlay(false)}>X</button>\n          <h1>How to Play</h1>\n          <p>Goal: Find groups of four MLB players that have something in common</p>\n          <div className=\"example-section\">\n            <p>Example:</p>\n            <div className=\"example-group\">\n              <p>CURRENT DODGERS PLAYERS</p>\n              <div className=\"player-images\">\n                <img src={freddieFreeman} alt=\"Freddie Freeman\" />\n                <img src={mookieBetts} alt=\"Mookie Betts\" />\n                <img src={shoheiOhtani} alt=\"Shohei Ohtani\" />\n                <img src={maxMuncy} alt=\"Max Muncy\" />\n            </div>\n            </div>\n            <div className=\"example-group\">\n              <p>PLAYERS BORN IN VENEZUELA</p>\n              <div className=\"player-images\">\n                <img src={joseAltuve} alt=\"Jose Altuve\" />\n                <img src={ronaldAcunaJr} alt=\"Ronald Acuña Jr\" />\n                <img src={miguelCabrera} alt=\"Miguel Cabrera\" />\n                <img src={salvadorPerez} alt=\"Salvador Perez\" />\n            </div>\n            </div>\n          </div>\n          <p>Select four similar players and tap 'Submit' to check if you are correct</p>\n          <p>You have four incorrect guesses before the game ends</p>\n          <p>Each group is represented by a color: </p>\n          <div className=\"difficulty-container\">\n          {difficultyLevels.map(level => (\n            <div key={level.name} className=\"difficulty-level\">\n              <span className=\"difficulty-color\" style={{ backgroundColor: level.color }}></span>\n              <span className=\"difficulty-name\">{level.name}</span>\n            </div>\n          ))}\n        </div>\n        </div>\n      </div>\n    );\n  };\n  \n  \n  \n\n  return (\n    <div className=\"connections-game\">\n    <div className=\"header-container\">\n      <div className=\"button-placeholder\"></div>\n      <h1>Create four groups of four!</h1>\n      <button className=\"game-controls button how-to-play-button\" onClick={() => setShowHowToPlay(true)}>How to Play</button>\n    </div>\n    {showPopup && <div className=\"popup-message\">{popupMessage}</div>}\n    <div className=\"guessed-groups\">\n      {guessedGroups.map((group, index) => (\n        <div \n          key={index} \n          className=\"guessed-group-combined\"\n          style={{ backgroundColor: group.color }}\n        >\n          <div className=\"group-images\">\n            {group.terms.map((term, termIndex) => (\n              <div key={termIndex} className=\"player-image-container\">\n                <img src={playerImages[term]} alt={term} className=\"guessed-player-image\" />\n                <div className=\"player-name-overlay\">{term.toUpperCase()}</div>\n              </div>\n            ))}\n          </div>\n          <div className=\"group-description\">{group.description}</div>\n        </div>\n      ))}\n    </div>\n\n\n\n\n    <div className=\"terms-grid\" style={{ gridTemplateColumns: width > 0 ? 'repeat(4, 1fr)' : 'repeat(2, 1fr)' }}>\n      {terms.map((term, index) => {\n        let imgSrc = '';\n        switch (term) {\n          case 'Albert Pujols': imgSrc = albertPujols; break;\n          case 'Barry Bonds': imgSrc = barryBonds; break;\n          case 'Babe Ruth': imgSrc = babeRuth; break;\n          case 'Hank Aaron': imgSrc = hankAaron; break;\n          case 'Ke\\'Bryan Hayes': imgSrc = kebryanHayes; break;\n          case 'Bo Bichette': imgSrc = boBichette; break;\n          case 'Cavan Biggio': imgSrc = cavanBiggio; break;\n          case 'Fernando Tatis Jr.': imgSrc = fernandoTatisJr; break;\n          case 'Ronald Acuña Jr.': imgSrc = ronaldAcunaJr; break;\n          case 'Shohei Ohtani': imgSrc = shoheiOhtani; break;\n          case 'Freddie Freeman': imgSrc = freddieFreeman; break;\n          case 'Aaron Judge': imgSrc = aaronJudge; break;\n          case 'Eric Hosmer': imgSrc = ericHosmer; break;\n          case 'Adam Jones': imgSrc = adamJones; break;\n          case 'Christian Yelich': imgSrc = christianYelich; break;\n          case 'Nolan Arenado': imgSrc = nolanArenado; break;\n          default: imgSrc = miguelCabrera;\n        }\n          let isSelected = selectedTerms.includes(term);\n          let shouldAnimate = isSubmitting && isSelected;\n\n          return (\n              <div key={index} \n                  className={`term-block \n                              ${isSelected ? 'selected' : ''} \n                              ${shouldAnimate ? 'jump-animation' : ''} \n                              ${shake && guessIncorrect ? 'shake-animation' : ''}`} \n                  onClick={() => handleTermClick(term)}>\n                  <img src={imgSrc} className=\"term-image\" alt={term} />\n                  <div className=\"text-overlay\">{term}</div>\n              </div>\n          );\n      })}\n  </div>\n    {!gameOver && (\n      <div className=\"mistakes-section\">\n        <div className=\"mistakes-indicator\">\n          <span className=\"mistakes-text\">Mistakes remaining: </span>\n          {Array.from({ length: mistakes }, (_, i) => (\n            <img key={i} src={baseballImg} alt=\"Baseball\" className=\"baseball-icon\" />\n          ))}\n        </div>\n      </div>\n    )}\n    {!gameOver ? (\n      <div className=\"game-controls\">\n        <button onClick={handleShuffle}>Shuffle</button>\n        <button onClick={() => setSelectedTerms([])} disabled={selectedTerms.length === 0}>Deselect All</button>\n        <button onClick={handleSubmit} disabled={selectedTerms.length !== 4}>Submit</button>\n      </div>\n    ) : (\n      <div className=\"game-over-controls\">\n        <button className=\"game-button\" onClick={() => setShowResultsPopup(true)}>View Results</button>\n      </div>\n    )}\n    {showResultsPopup && renderResultsPopup()}\n    {renderHowToPlayPopup()}\n  </div>\n);\n\n  \n};\n\nexport default ConnectionsPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}