{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgoldfarb/Documents/OhConnections/web/web/src/pages/ConnectionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ConnectionsPage.css';\nimport baseballImg from '../images/baseball.png';\nimport freddieFreeman from '../images/examples/freddiefreeman.png';\nimport mookieBetts from '../images/examples/mookiebetts.png';\nimport shoheiOhtani from '../images/examples/shoheiohtani.png';\nimport maxMuncy from '../images/examples/maxmuncy.png';\nimport joseAltuve from '../images/examples/josealtuve.png';\nimport miguelCabrera from '../images/examples/miguelcabrera.png';\nimport ronaldAcunaJr from '../images/examples/ronaldacunajr.png';\nimport salvadorPerez from '../images/examples/salvadorperez.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionsPage = () => {\n  _s();\n  const initialTerms = ['Brook Lopez', 'Seth Curry', 'Jrue Holiday', 'Franz Wagner', 'Nikola Jokic', 'Shai Gilgeous-Alexander', 'Kevin Durant', 'Luka Doncic', 'Steve Kerr', 'Jason Kidd', 'Tyronn Lue', 'Steve Nash', 'Rasheed Wallace', 'Gary Payton', 'Charles Barkley', 'Karl Malone'];\n  const correctGroups = [{\n    number: 1,\n    description: 'Most Technical Fouls',\n    terms: ['Rasheed Wallace', 'Gary Payton', 'Charles Barkley', 'Karl Malone'],\n    color: '#4CAF50'\n  }, {\n    number: 1,\n    description: 'NBA Players Turned Coaches',\n    terms: ['Steve Kerr', 'Jason Kidd', 'Tyronn Lue', 'Steve Nash'],\n    color: '#e5de00'\n  }, {\n    number: 1,\n    description: 'All Star Starters',\n    terms: ['Nikola Jokic', 'Shai Gilgeous-Alexander', 'Kevin Durant', 'Luka Doncic'],\n    color: '#e27602'\n  }, {\n    number: 1,\n    description: 'Brothers in the NBA',\n    terms: ['Brook Lopez', 'Seth Curry', 'Jrue Holiday', 'Franz Wagner'],\n    color: '#de0a26'\n  }];\n  const [selectedTerms, setSelectedTerms] = useState([]);\n  const [showResultsPopup, setShowResultsPopup] = useState(false);\n  const [nextPuzzleCountdown, setNextPuzzleCountdown] = useState('');\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [userWon, setUserWon] = useState(false);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState([]);\n  const [mistakes, setMistakes] = useState(4);\n  const [submittedSets, setSubmittedSets] = useState([]);\n  const [guessedGroups, setGuessedGroups] = useState([]);\n  const [terms, setTerms] = useState(initialTerms);\n  // const [terms, setTerms] = useState(() => {\n  //   const savedTerms = localStorage.getItem('terms');\n  //   return savedTerms ? JSON.parse(savedTerms) : initialTerms;\n  // });\n  // const [guessedGroups, setGuessedGroups] = useState(() => {\n  //   const savedGroups = localStorage.getItem('guessedGroups');\n  //   return savedGroups ? JSON.parse(savedGroups) : [];\n  // });\n  // const [mistakes, setMistakes] = useState(() => {\n  //   const savedMistakes = localStorage.getItem('mistakes');\n  //   return savedMistakes !== null ? parseInt(savedMistakes, 10) : 4;\n  // });\n  // const [submittedSets, setSubmittedSets] = useState(() => {\n  //   const savedSets = localStorage.getItem('submittedSets');\n  //   return savedSets ? JSON.parse(savedSets) : [];\n  // });\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n\n  // useEffect(() => {\n  //   localStorage.setItem('terms', JSON.stringify(terms));\n  // }, [terms]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('mistakes', mistakes.toString());\n  // }, [mistakes]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('submittedSets', JSON.stringify(submittedSets));\n  // }, [submittedSets]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('guessedGroups', JSON.stringify(guessedGroups));\n  // }, [guessedGroups]);\n\n  const handleTermClick = term => {\n    if (gameOver) return;\n    if (selectedTerms.includes(term)) {\n      setSelectedTerms(selectedTerms.filter(t => t !== term));\n      setShowPopup(false);\n    } else {\n      if (selectedTerms.length < 4) {\n        setSelectedTerms([...selectedTerms, term]);\n        setShowPopup(false);\n      } else {\n        setPopupMessage(\"You cannot select more than 4 players.\");\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 2000);\n      }\n    }\n  };\n  const handleSubmit = () => {\n    if (gameOver || mistakes <= 0) {\n      return;\n    }\n    const currentSetSorted = [...selectedTerms].sort();\n    const currentSetString = currentSetSorted.join(',');\n    if (submittedSets.includes(currentSetString)) {\n      setPopupMessage(\"You cannot guess the same 4 players twice.\");\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n      return;\n    } else {\n      const oneAway = correctGroups.some(group => {\n        const matchingTerms = group.terms.filter(term => currentSetSorted.includes(term));\n        return matchingTerms.length === 3 && group.terms.sort().join(',') !== currentSetString;\n      });\n      const guessColors = selectedTerms.map(term => {\n        const group = correctGroups.find(group => group.terms.includes(term));\n        return group ? group.color : '#FFFFFF';\n      });\n      setMoveHistory(prevHistory => [...prevHistory, guessColors]);\n      if (oneAway) {\n        if (mistakes > 1) {\n          setPopupMessage(\"One Away!\");\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 2000);\n          setSubmittedSets([...submittedSets, currentSetString]);\n          setMistakes(mistakes - 1);\n          return;\n        }\n      }\n      const foundGroup = correctGroups.find(group => group.terms.sort().join(',') === currentSetString);\n      if (foundGroup) {\n        const updatedGuessedGroups = [...guessedGroups, foundGroup];\n        setGuessedGroups(updatedGuessedGroups);\n        setTerms(terms.filter(term => !foundGroup.terms.includes(term)));\n        setSelectedTerms([]);\n        if (updatedGuessedGroups.length === correctGroups.length) {\n          setGameOver(true);\n          setUserWon(true);\n          setShowResultsPopup(true);\n        }\n      } else {\n        setSubmittedSets([...submittedSets, currentSetString]);\n        setMistakes(mistakes - 1);\n        if (mistakes <= 1) {\n          setGameOver(true);\n          setPopupMessage(\"Nice try!\");\n          setUserWon(false);\n          setShowPopup(true);\n          setTimeout(() => {\n            setShowPopup(false);\n            const remainingGroups = correctGroups.filter(group => !guessedGroups.some(guessedGroup => guessedGroup.description === group.description));\n            setRemainingGroupsToReveal(remainingGroups);\n            setSelectedTerms([]);\n            setMistakes(0);\n          }, 2000);\n          return;\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length > 0) {\n      const timer = setTimeout(() => {\n        const [groupToReveal, ...restGroups] = remainingGroupsToReveal;\n        setGuessedGroups(prevGuessedGroups => [...prevGuessedGroups, groupToReveal]);\n        setTerms(terms => terms.filter(term => !groupToReveal.terms.includes(term)));\n        setRemainingGroupsToReveal(restGroups);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, terms]);\n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length === 0) {\n      const timer = setTimeout(() => {\n        setShowResultsPopup(true);\n      }, 1700);\n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver]);\n  const handleShuffle = () => {\n    const shuffledTermsArray = shuffleArray([...terms]);\n    setTerms(shuffledTermsArray);\n  };\n  const shuffleArray = array => {\n    let currentIndex = array.length,\n      randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  const shuffledTermsArray = shuffleArray([...terms]);\n  const difficultyLevels = [{\n    name: 'Easy',\n    color: '#4CAF50'\n  }, {\n    name: 'Medium',\n    color: '#e5de00'\n  }, {\n    name: 'Hard',\n    color: '#e27602'\n  }, {\n    name: 'Impossible',\n    color: '#de0a26'\n  }];\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const nextPuzzleTimeET = new Date();\n      nextPuzzleTimeET.setHours(19, 0, 0, 0); // 7:00 PM ET\n      if (nextPuzzleTimeET < now) {\n        nextPuzzleTimeET.setDate(nextPuzzleTimeET.getDate() + 1);\n      }\n      const timeUntilNextPuzzle = nextPuzzleTimeET - now;\n      const countdown = new Date(timeUntilNextPuzzle).toISOString().substr(11, 8);\n      setNextPuzzleCountdown(countdown);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const renderResultsPopup = () => {\n    const message = userWon ? \"Good Job!\" : \"Next Time!\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-popup\",\n      onClick: () => setShowResultsPopup(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowResultsPopup(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"message-header\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"game-number\",\n          children: [\"OhConnections #\", correctGroups[0].number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-container\",\n          children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-level\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-color\",\n              style: {\n                backgroundColor: level.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-name\",\n              children: level.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)]\n          }, level.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-summary-grid\",\n          children: moveHistory.map((colorSet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-row\",\n            children: colorSet.map((color, colorIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-block\",\n              style: {\n                backgroundColor: color\n              }\n            }, colorIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 7\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 3\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"next-puzzle-countdown\",\n          children: [\"NEXT BOARD IN: \", nextPuzzleCountdown]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-summary-button\",\n          onClick: handleCopySummary,\n          children: \"Share Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  };\n  const handleCopySummary = () => {\n    const summaryString = moveHistory.map(moveRow => moveRow.map(color => {\n      switch (color) {\n        case correctGroups[0].color:\n          return '🟩';\n        case correctGroups[1].color:\n          return '🟨';\n        case correctGroups[2].color:\n          return '🟧';\n        case correctGroups[3].color:\n          return '🟥';\n        default:\n          return '⬜️';\n      }\n    }).join('')).join('\\n');\n    const legend = `\\n\\n🟩 = Easy\\n🟨 = Medium\\n🟧 = Hard\\n🟥 = Impossible`;\n    const completeSummary = `OhConnections\\nBoard #${correctGroups[0].number}\\n\\n${summaryString}${legend}\\n\\nNEXT PUZZLE IN: ${nextPuzzleCountdown}\\n\\nwww.ohconnections.com`;\n    navigator.clipboard.writeText(completeSummary).then(() => {\n      setPopupMessage('Game summary copied to clipboard!');\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n    }, err => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  const renderHowToPlayPopup = () => {\n    if (!showHowToPlay) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"how-to-play-popup\",\n      onClick: () => setShowHowToPlay(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"how-to-play-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowHowToPlay(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"How to Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Goal: Find groups of four MLB players that have something in common\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"CURRENT DODGERS PLAYERS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-images\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: freddieFreeman,\n                alt: \"Freddie Freeman\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: mookieBetts,\n                alt: \"Mookie Betts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: shoheiOhtani,\n                alt: \"Shohei Ohtani\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: maxMuncy,\n                alt: \"Max Muncy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"PLAYERS BORN IN VENEZUELA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-images\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: joseAltuve,\n                alt: \"Jose Altuve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ronaldAcunaJr,\n                alt: \"Ronald Acu\\xF1a Jr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: miguelCabrera,\n                alt: \"Miguel Cabrera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: salvadorPerez,\n                alt: \"Salvador Perez\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select four similar players and tap 'Submit' to check if you are correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have four incorrect guesses before the game ends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Each group is represented by a color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-container\",\n          children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-level\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-color\",\n              style: {\n                backgroundColor: level.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-name\",\n              children: level.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this)]\n          }, level.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connections-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create four groups of four!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-controls button how-to-play-button\",\n        onClick: () => setShowHowToPlay(true),\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 5\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-message\",\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guessed-groups\",\n      children: guessedGroups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guessed-group-combined\",\n        style: {\n          backgroundColor: group.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-description\",\n          children: group.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-terms\",\n          children: group.terms.join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terms-grid\",\n      children: terms.map((term, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `term-block ${selectedTerms.includes(term) ? 'selected' : ''}`,\n        onClick: () => handleTermClick(term),\n        children: term\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 5\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistakes-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistakes-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mistakes-text\",\n          children: \"Mistakes remaining: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), Array.from({\n          length: mistakes\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: baseballImg,\n          alt: \"Baseball\",\n          className: \"baseball-icon\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), !gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShuffle,\n        disabled: gameOver,\n        children: \"Shuffle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTerms([]),\n        disabled: selectedTerms.length === 0 || gameOver,\n        children: \"Deselect All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: selectedTerms.length !== 4,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-button\",\n        onClick: () => setShowResultsPopup(true),\n        children: \"View Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), showResultsPopup && renderResultsPopup(), renderHowToPlayPopup()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionsPage, \"ACfBBVKFN/rjZoSl3k3CgsMlU0k=\");\n_c = ConnectionsPage;\nexport default ConnectionsPage;\nvar _c;\n$RefreshReg$(_c, \"ConnectionsPage\");","map":{"version":3,"names":["React","useState","useEffect","baseballImg","freddieFreeman","mookieBetts","shoheiOhtani","maxMuncy","joseAltuve","miguelCabrera","ronaldAcunaJr","salvadorPerez","jsxDEV","_jsxDEV","ConnectionsPage","_s","initialTerms","correctGroups","number","description","terms","color","selectedTerms","setSelectedTerms","showResultsPopup","setShowResultsPopup","nextPuzzleCountdown","setNextPuzzleCountdown","showHowToPlay","setShowHowToPlay","userWon","setUserWon","moveHistory","setMoveHistory","gameOver","setGameOver","remainingGroupsToReveal","setRemainingGroupsToReveal","mistakes","setMistakes","submittedSets","setSubmittedSets","guessedGroups","setGuessedGroups","setTerms","popupMessage","setPopupMessage","showPopup","setShowPopup","handleTermClick","term","includes","filter","t","length","setTimeout","handleSubmit","currentSetSorted","sort","currentSetString","join","oneAway","some","group","matchingTerms","guessColors","map","find","prevHistory","foundGroup","updatedGuessedGroups","remainingGroups","guessedGroup","timer","groupToReveal","restGroups","prevGuessedGroups","clearTimeout","handleShuffle","shuffledTermsArray","shuffleArray","array","currentIndex","randomIndex","Math","floor","random","difficultyLevels","name","intervalId","setInterval","now","Date","nextPuzzleTimeET","setHours","setDate","getDate","timeUntilNextPuzzle","countdown","toISOString","substr","clearInterval","renderResultsPopup","message","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","level","style","backgroundColor","colorSet","index","colorIndex","handleCopySummary","summaryString","moveRow","legend","completeSummary","navigator","clipboard","writeText","then","err","console","error","renderHowToPlayPopup","src","alt","Array","from","_","i","disabled","_c","$RefreshReg$"],"sources":["/Users/michaelgoldfarb/Documents/OhConnections/web/web/src/pages/ConnectionsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ConnectionsPage.css';\nimport baseballImg from '../images/baseball.png';\nimport freddieFreeman from '../images/examples/freddiefreeman.png';\nimport mookieBetts from '../images/examples/mookiebetts.png';\nimport shoheiOhtani from '../images/examples/shoheiohtani.png';\nimport maxMuncy from '../images/examples/maxmuncy.png';\nimport joseAltuve from '../images/examples/josealtuve.png';\nimport miguelCabrera from '../images/examples/miguelcabrera.png';\nimport ronaldAcunaJr from '../images/examples/ronaldacunajr.png';\nimport salvadorPerez from '../images/examples/salvadorperez.png';\n\nconst ConnectionsPage = () => {\n  const initialTerms = ['Brook Lopez', 'Seth Curry', 'Jrue Holiday', 'Franz Wagner', 'Nikola Jokic', 'Shai Gilgeous-Alexander', 'Kevin Durant', 'Luka Doncic', 'Steve Kerr', 'Jason Kidd', 'Tyronn Lue', 'Steve Nash', 'Rasheed Wallace', 'Gary Payton', 'Charles Barkley', 'Karl Malone'];\n  const correctGroups = [\n    { number: 1, description: 'Most Technical Fouls', terms: ['Rasheed Wallace', 'Gary Payton', 'Charles Barkley', 'Karl Malone'],  color: '#4CAF50' },\n    { number: 1, description: 'NBA Players Turned Coaches', terms: ['Steve Kerr', 'Jason Kidd', 'Tyronn Lue', 'Steve Nash'],  color: '#e5de00' },\n    { number: 1, description: 'All Star Starters', terms: ['Nikola Jokic', 'Shai Gilgeous-Alexander', 'Kevin Durant', 'Luka Doncic'], color: '#e27602' },\n    { number: 1, description: 'Brothers in the NBA', terms: ['Brook Lopez', 'Seth Curry', 'Jrue Holiday', 'Franz Wagner'], color: '#de0a26' }]\n  \n  const [selectedTerms, setSelectedTerms] = useState([]);\n  const [showResultsPopup, setShowResultsPopup] = useState(false);\n  const [nextPuzzleCountdown, setNextPuzzleCountdown] = useState('');\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [userWon, setUserWon] = useState(false);\n  const [moveHistory, setMoveHistory] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState([]);\n  const [mistakes, setMistakes] = useState(4);\n  const [submittedSets, setSubmittedSets] = useState([]);\n  const [guessedGroups, setGuessedGroups] = useState([]);\n  const [terms, setTerms] = useState(initialTerms);\n  // const [terms, setTerms] = useState(() => {\n  //   const savedTerms = localStorage.getItem('terms');\n  //   return savedTerms ? JSON.parse(savedTerms) : initialTerms;\n  // });\n  // const [guessedGroups, setGuessedGroups] = useState(() => {\n  //   const savedGroups = localStorage.getItem('guessedGroups');\n  //   return savedGroups ? JSON.parse(savedGroups) : [];\n  // });\n  // const [mistakes, setMistakes] = useState(() => {\n  //   const savedMistakes = localStorage.getItem('mistakes');\n  //   return savedMistakes !== null ? parseInt(savedMistakes, 10) : 4;\n  // });\n  // const [submittedSets, setSubmittedSets] = useState(() => {\n  //   const savedSets = localStorage.getItem('submittedSets');\n  //   return savedSets ? JSON.parse(savedSets) : [];\n  // });\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n\n  // useEffect(() => {\n  //   localStorage.setItem('terms', JSON.stringify(terms));\n  // }, [terms]);\n  \n  // useEffect(() => {\n  //   localStorage.setItem('mistakes', mistakes.toString());\n  // }, [mistakes]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('submittedSets', JSON.stringify(submittedSets));\n  // }, [submittedSets]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('guessedGroups', JSON.stringify(guessedGroups));\n  // }, [guessedGroups]);\n\n  const handleTermClick = (term) => {\n    if (gameOver) return;\n    if (selectedTerms.includes(term)) {\n      setSelectedTerms(selectedTerms.filter(t => t !== term));\n      setShowPopup(false);\n    } else {\n      if (selectedTerms.length < 4) {\n        setSelectedTerms([...selectedTerms, term]);\n        setShowPopup(false);\n      } else {\n        setPopupMessage(\"You cannot select more than 4 players.\");\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 2000);\n      }\n    }\n  };\n\n  const handleSubmit = () => {\n    if (gameOver || mistakes <= 0) {\n      return;\n    }\n    const currentSetSorted = [...selectedTerms].sort();\n    const currentSetString = currentSetSorted.join(',');\n  \n    if (submittedSets.includes(currentSetString)) {\n      setPopupMessage(\"You cannot guess the same 4 players twice.\");\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n      return;\n    } else {\n      const oneAway = correctGroups.some(group => {\n        const matchingTerms = group.terms.filter(term => currentSetSorted.includes(term));\n        return matchingTerms.length === 3 && group.terms.sort().join(',') !== currentSetString;\n      });\n\n      const guessColors = selectedTerms.map(term => {\n        const group = correctGroups.find(group => group.terms.includes(term));\n        return group ? group.color : '#FFFFFF';\n      });\n    \n      setMoveHistory(prevHistory => [\n        ...prevHistory,\n        guessColors\n      ]);\n  \n      if (oneAway) {\n        if (mistakes > 1) {\n          setPopupMessage(\"One Away!\");\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 2000);\n          setSubmittedSets([...submittedSets, currentSetString]);\n          setMistakes(mistakes - 1);\n          return; \n        }\n      }\n\n      const foundGroup = correctGroups.find(group =>\n        group.terms.sort().join(',') === currentSetString\n      );\n      \n      if (foundGroup) {\n        const updatedGuessedGroups = [...guessedGroups, foundGroup];\n        setGuessedGroups(updatedGuessedGroups);\n        setTerms(terms.filter(term => !foundGroup.terms.includes(term)));\n        setSelectedTerms([]);\n        if (updatedGuessedGroups.length === correctGroups.length) {\n          setGameOver(true);\n          setUserWon(true);\n          setShowResultsPopup(true);\n        }\n      } else {\n        setSubmittedSets([...submittedSets, currentSetString]);\n        setMistakes(mistakes - 1);\n        if (mistakes <= 1) {\n          setGameOver(true);\n          setPopupMessage(\"Nice try!\");\n          setUserWon(false);\n          setShowPopup(true);\n          setTimeout(() => {\n            setShowPopup(false);\n    \n            const remainingGroups = correctGroups.filter(group => \n                !guessedGroups.some(guessedGroup => \n                    guessedGroup.description === group.description\n                )\n            );\n    \n            setRemainingGroupsToReveal(remainingGroups);\n            setSelectedTerms([]);\n            setMistakes(0);\n        }, 2000);\n        return;\n        }\n      }\n    }\n  };\n  \n\n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length > 0) {\n      const timer = setTimeout(() => {\n        const [groupToReveal, ...restGroups] = remainingGroupsToReveal;\n      setGuessedGroups(prevGuessedGroups => [...prevGuessedGroups, groupToReveal]);\n      setTerms(terms => terms.filter(term => !groupToReveal.terms.includes(term)));\n      setRemainingGroupsToReveal(restGroups);\n    }, 1000);\n  \n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, terms]);\n\n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length === 0) {\n      const timer = setTimeout(() => {\n        setShowResultsPopup(true);\n      }, 1700);\n      return () => clearTimeout(timer);      \n    }\n  }, [remainingGroupsToReveal, gameOver]);\n  \n  \n  const handleShuffle = () => {\n    const shuffledTermsArray = shuffleArray([...terms]);\n    setTerms(shuffledTermsArray);\n  };\n\n  const shuffleArray = (array) => {\n    let currentIndex = array.length,  randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  const shuffledTermsArray = shuffleArray([...terms]);\n\n  const difficultyLevels = [\n    { name: 'Easy', color: '#4CAF50' },\n    { name: 'Medium', color: '#e5de00' },\n    { name: 'Hard', color: '#e27602' },\n    { name: 'Impossible', color: '#de0a26' },\n  ];\n  \n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const nextPuzzleTimeET = new Date();\n      nextPuzzleTimeET.setHours(19, 0, 0, 0); // 7:00 PM ET\n      if (nextPuzzleTimeET < now) {\n        nextPuzzleTimeET.setDate(nextPuzzleTimeET.getDate() + 1);\n      }\n  \n      const timeUntilNextPuzzle = nextPuzzleTimeET - now;\n      const countdown = new Date(timeUntilNextPuzzle).toISOString().substr(11, 8);\n      setNextPuzzleCountdown(countdown);\n    }, 1000);\n  \n    return () => clearInterval(intervalId);\n  }, []);\n\n  \n  const renderResultsPopup = () => {\n    const message = userWon ? \"Good Job!\" : \"Next Time!\";\n    \n    return (\n      <div className=\"results-popup\" onClick={() => setShowResultsPopup(false)}>\n        <div className=\"results-content\" onClick={(e) => e.stopPropagation()}>\n          <button className=\"close-button\" onClick={() => setShowResultsPopup(false)}>X</button>\n          <h2 className=\"message-header\">{message}</h2>\n          <p className=\"game-number\">OhConnections #{correctGroups[0].number}</p>\n          <div className=\"difficulty-container\">\n            {difficultyLevels.map(level => (\n              <div key={level.name} className=\"difficulty-level\">\n                <span className=\"difficulty-color\" style={{ backgroundColor: level.color }}></span>\n                <span className=\"difficulty-name\">{level.name}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"game-summary-grid\">\n          {moveHistory.map((colorSet, index) => (\n  <div key={index} className=\"summary-row\">\n    {colorSet.map((color, colorIndex) => (\n      <div key={colorIndex} className=\"summary-block\" style={{ backgroundColor: color }}></div>\n    ))}\n  </div>\n))}\n\n          </div>\n          <p className=\"next-puzzle-countdown\">NEXT BOARD IN: {nextPuzzleCountdown}</p>\n          <button className=\"copy-summary-button\" onClick={handleCopySummary}>Share Results</button>\n        </div>\n      </div>\n    );\n  };\n\n  const handleCopySummary = () => {\n    const summaryString = moveHistory.map(moveRow => \n      moveRow.map(color => {\n        switch (color) {\n          case correctGroups[0].color: return '🟩';\n          case correctGroups[1].color: return '🟨';\n          case correctGroups[2].color: return '🟧';\n          case correctGroups[3].color: return '🟥';\n          default: return '⬜️';\n        }\n      }).join('')\n    ).join('\\n');\n  \n    const legend = `\\n\\n🟩 = Easy\\n🟨 = Medium\\n🟧 = Hard\\n🟥 = Impossible`;\n\n    const completeSummary = `OhConnections\\nBoard #${correctGroups[0].number}\\n\\n${summaryString}${legend}\\n\\nNEXT PUZZLE IN: ${nextPuzzleCountdown}\\n\\nwww.ohconnections.com`;\n    \n    navigator.clipboard.writeText(completeSummary).then(() => {\n      setPopupMessage('Game summary copied to clipboard!');\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n    }, (err) => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  \n  \n  const renderHowToPlayPopup = () => {\n    if (!showHowToPlay) return null;\n  \n    return (\n      <div className=\"how-to-play-popup\" onClick={() => setShowHowToPlay(false)}>\n        <div className=\"how-to-play-content\" onClick={e => e.stopPropagation()}>\n          <button className=\"close-button\" onClick={() => setShowHowToPlay(false)}>X</button>\n          <h1>How to Play</h1>\n          <p>Goal: Find groups of four MLB players that have something in common</p>\n          <div className=\"example-section\">\n            <p>Example:</p>\n            <div className=\"example-group\">\n              <p>CURRENT DODGERS PLAYERS</p>\n              <div className=\"player-images\">\n                <img src={freddieFreeman} alt=\"Freddie Freeman\" />\n                <img src={mookieBetts} alt=\"Mookie Betts\" />\n                <img src={shoheiOhtani} alt=\"Shohei Ohtani\" />\n                <img src={maxMuncy} alt=\"Max Muncy\" />\n            </div>\n            </div>\n            <div className=\"example-group\">\n              <p>PLAYERS BORN IN VENEZUELA</p>\n              <div className=\"player-images\">\n                <img src={joseAltuve} alt=\"Jose Altuve\" />\n                <img src={ronaldAcunaJr} alt=\"Ronald Acuña Jr\" />\n                <img src={miguelCabrera} alt=\"Miguel Cabrera\" />\n                <img src={salvadorPerez} alt=\"Salvador Perez\" />\n            </div>\n            </div>\n          </div>\n          <p>Select four similar players and tap 'Submit' to check if you are correct</p>\n          <p>You have four incorrect guesses before the game ends</p>\n          <p>Each group is represented by a color: </p>\n          <div className=\"difficulty-container\">\n          {difficultyLevels.map(level => (\n            <div key={level.name} className=\"difficulty-level\">\n              <span className=\"difficulty-color\" style={{ backgroundColor: level.color }}></span>\n              <span className=\"difficulty-name\">{level.name}</span>\n            </div>\n          ))}\n        </div>\n        </div>\n      </div>\n    );\n  };\n  \n  \n  \n\n  return (\n    <div className=\"connections-game\">\n    <div className=\"header-container\">\n      <div className=\"button-placeholder\"></div>\n      <h1>Create four groups of four!</h1>\n      <button className=\"game-controls button how-to-play-button\" onClick={() => setShowHowToPlay(true)}>How to Play</button>\n    </div>\n    {showPopup && <div className=\"popup-message\">{popupMessage}</div>}\n    <div className=\"guessed-groups\">\n      {guessedGroups.map((group, index) => (\n        <div \n          key={index} \n          className=\"guessed-group-combined\"\n          style={{ backgroundColor: group.color }}\n        >\n          <div className=\"group-description\">{group.description}</div>\n          <div className=\"group-terms\">{group.terms.join(', ')}</div>\n        </div>\n      ))}\n    </div>\n    <div className=\"terms-grid\">\n      {terms.map((term, index) => (\n        <div key={index} className={`term-block ${selectedTerms.includes(term) ? 'selected' : ''}`} onClick={() => handleTermClick(term)}>\n          {term}\n        </div>\n      ))}\n    </div>\n    {!gameOver && (\n      <div className=\"mistakes-section\">\n        <div className=\"mistakes-indicator\">\n          <span className=\"mistakes-text\">Mistakes remaining: </span>\n          {Array.from({ length: mistakes }, (_, i) => (\n            <img key={i} src={baseballImg} alt=\"Baseball\" className=\"baseball-icon\" />\n          ))}\n        </div>\n      </div>\n    )}\n    {!gameOver ? (\n      <div className=\"game-controls\">\n        <button onClick={handleShuffle} disabled={gameOver}>Shuffle</button>\n        <button onClick={() => setSelectedTerms([])} disabled={selectedTerms.length === 0 || gameOver}>Deselect All</button>\n        <button onClick={handleSubmit} disabled={selectedTerms.length !== 4}>Submit</button>\n      </div>\n    ) : (\n      <div className=\"game-over-controls\">\n        <button className=\"game-button\" onClick={() => setShowResultsPopup(true)}>View Results</button>\n      </div>\n    )}\n    {showResultsPopup && renderResultsPopup()}\n    {renderHowToPlayPopup()}\n  </div>\n);\n\n  \n};\n\nexport default ConnectionsPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}