{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgoldfarb/Documents/OhConnections/web/web/src/pages/ConnectionsPage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ConnectionsPage.css';\nimport { playerImages, initialTerms, correctGroups } from './inputs/03-17-2024/gameData.js';\nimport baseballImg from '../images/baseball.png';\nimport mookieBetts from '../images/examples/mookiebetts.png';\nimport maxMuncy from '../images/examples/maxmuncy.png';\nimport joseAltuve from '../images/examples/josealtuve.png';\nimport freddieFreeman from '../images/examples/freddiefreeman.png';\nimport shoheiOhtani from '../images/examples/shoheiohtani.png';\nimport ronaldAcunaJr from '../images/examples/ronaldacunajr.png';\nimport miguelCabrera from '../images/examples/miguelcabrera.png';\nimport salvadorPerez from '../images/examples/salvadorperez.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionsPage = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const gameSessionId = 'defaultPage';\n  const [cooldown, setCooldown] = useState(false);\n  const [guessIncorrect, setGuessIncorrect] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [width, height] = useWindowSize();\n  const [readyToShowPopUp, setReadyToShowPopUp] = useState(false);\n  const [nextPuzzleCountdown, setNextPuzzleCountdown] = useState('');\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [userWon, setUserWon] = useState(false);\n  const [animateIndex, setAnimateIndex] = useState(null);\n  const [shake, setShake] = useState(false);\n  // const [selectedTerms, setSelectedTerms] = useState([]);    \n  // const [moveHistory, setMoveHistory] = useState([]);\n  // const [gameOver, setGameOver] = useState(false);\n  // const [showResultsPopup, setShowResultsPopup] = useState(false);\n  // const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState([]);\n  // const [mistakes, setMistakes] = useState(4);\n  // const [submittedSets, setSubmittedSets] = useState([]);\n  // const [guessedGroups, setGuessedGroups] = useState([]);\n  // const [terms, setTerms] = useState(initialTerms);\n  const [gameOver, setGameOver] = useState(() => {\n    const saved = localStorage.getItem(`gameOver-${gameSessionId}`);\n    return saved ? JSON.parse(saved) : false;\n  });\n  const [showResultsPopup, setShowResultsPopup] = useState(() => {\n    const saved = localStorage.getItem(`showResultsPopup-${gameSessionId}`);\n    return saved ? JSON.parse(saved) : false;\n  });\n  const [moveHistory, setMoveHistory] = useState(() => {\n    const saved = localStorage.getItem(`moveHistory-${gameSessionId}`);\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState(() => {\n    const savedData = localStorage.getItem(`remainingGroupsToReveal-${gameSessionId}`);\n    return savedData ? JSON.parse(savedData) : [];\n  });\n  const [selectedTerms, setSelectedTerms] = useState(() => {\n    const savedData = localStorage.getItem(`selectedTerms-${gameSessionId}`);\n    return savedData ? JSON.parse(savedData) : [];\n  });\n  const [terms, setTerms] = useState(() => {\n    const savedTerms = localStorage.getItem(`terms-${gameSessionId}`);\n    return savedTerms ? JSON.parse(savedTerms) : initialTerms;\n  });\n  const [guessedGroups, setGuessedGroups] = useState(() => {\n    const savedGroups = localStorage.getItem(`guessedGroups-${gameSessionId}`);\n    return savedGroups ? JSON.parse(savedGroups) : [];\n  });\n  const [mistakes, setMistakes] = useState(() => {\n    const savedMistakes = localStorage.getItem(`mistakes-${gameSessionId}`);\n    return savedMistakes !== null ? parseInt(savedMistakes, 10) : 4;\n  });\n  const [submittedSets, setSubmittedSets] = useState(() => {\n    const savedSets = localStorage.getItem(`submittedSets-${gameSessionId}`);\n    return savedSets ? JSON.parse(savedSets) : [];\n  });\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n  useEffect(() => {\n    localStorage.setItem(`terms-${gameSessionId}`, JSON.stringify(terms));\n  }, [terms, gameSessionId]);\n  useEffect(() => {\n    localStorage.setItem(`mistakes-${gameSessionId}`, mistakes.toString());\n  }, [mistakes, gameSessionId]);\n  useEffect(() => {\n    localStorage.setItem(`submittedSets-${gameSessionId}`, JSON.stringify(submittedSets));\n  }, [submittedSets, gameSessionId]);\n  useEffect(() => {\n    localStorage.setItem(`guessedGroups-${gameSessionId}`, JSON.stringify(guessedGroups));\n  }, [guessedGroups, gameSessionId]);\n  useEffect(() => {\n    localStorage.setItem(`remainingGroupsToReveal-${gameSessionId}`, JSON.stringify(remainingGroupsToReveal));\n  }, [remainingGroupsToReveal, gameSessionId]);\n  useEffect(() => {\n    localStorage.setItem(`selectedTerms-${gameSessionId}`, JSON.stringify(selectedTerms));\n  }, [selectedTerms, gameSessionId]);\n  useEffect(() => {\n    localStorage.setItem(`gameOver-${gameSessionId}`, JSON.stringify(gameOver));\n  }, [gameOver, gameSessionId]);\n  useEffect(() => {\n    localStorage.setItem(`showResultsPopup-${gameSessionId}`, JSON.stringify(showResultsPopup));\n  }, [showResultsPopup, gameSessionId]);\n  useEffect(() => {\n    localStorage.setItem(`moveHistory-${gameSessionId}`, JSON.stringify(moveHistory));\n  }, [moveHistory, gameSessionId]);\n  useEffect(() => {\n    const updatedTerms = initialTerms.filter(term => !guessedGroups.some(group => group.terms.includes(term)));\n    setTerms(updatedTerms);\n    localStorage.setItem(`terms-${gameSessionId}`, JSON.stringify(updatedTerms));\n  }, [guessedGroups, gameSessionId]);\n  useEffect(() => {\n    // Load guessed groups from localStorage or use initial value\n    const initGuessedGroups = JSON.parse(localStorage.getItem(`guessedGroups-${gameSessionId}`)) || [];\n\n    // If there are guessed groups, use the terms from localStorage without shuffling\n    if (initGuessedGroups.length > 0) {\n      const initTerms = JSON.parse(localStorage.getItem(`terms-${gameSessionId}`)) || initialTerms;\n      setTerms(initTerms);\n    } else {\n      // If there are no guessed groups, shuffle the initial terms and use them\n      const shuffledTerms = shuffleArray([...initialTerms]); // Ensure to spread into a new array to avoid mutating the original\n      setTerms(shuffledTerms);\n      localStorage.setItem(`terms-${gameSessionId}`, JSON.stringify(shuffledTerms)); // Update localStorage with shuffled terms\n    }\n\n    setGuessedGroups(initGuessedGroups);\n  }, []); // This effect runs only once when the component mounts\n\n  const getVictoryMessage = mistakesLeft => {\n    switch (mistakesLeft) {\n      case 4:\n        return \"Perfect!\";\n      case 3:\n        return \"Great Job!\";\n      case 2:\n        return \"Solid!\";\n      case 1:\n        return \"Phew!\";\n      default:\n        return \"Good Job!\";\n    }\n  };\n  const handleTermClick = term => {\n    if (gameOver) return;\n    if (isSubmitting || gameOver || cooldown) return;\n    if (selectedTerms.includes(term)) {\n      setSelectedTerms(selectedTerms.filter(t => t !== term));\n      setShowPopup(false);\n    } else {\n      if (selectedTerms.length < 4) {\n        setSelectedTerms([...selectedTerms, term]);\n        setShowPopup(false);\n      } else {\n        setPopupMessage(\"You cannot select more than 4 players.\");\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 2000);\n      }\n    }\n  };\n  const handleSubmit = () => {\n    if (gameOver || mistakes <= 0 || selectedTerms.length !== 4 || cooldown) {\n      return;\n    }\n    const currentSetSorted = [...selectedTerms].sort();\n    const currentSetString = currentSetSorted.join(',');\n    if (submittedSets.includes(currentSetString)) {\n      setPopupMessage(\"You cannot guess the same 4 players twice.\");\n      setShowPopup(true);\n      setTimeout(() => {\n        setShowPopup(false);\n        setIsSubmitting(false);\n      }, 2000);\n      return;\n    }\n    setIsSubmitting(true);\n    setTimeout(() => {\n      const oneAway = correctGroups.some(group => {\n        const matchingTerms = group.terms.filter(term => currentSetSorted.includes(term));\n        return matchingTerms.length === 3 && group.terms.sort().join(',') !== currentSetString;\n      });\n      const guessColors = selectedTerms.map(term => {\n        const group = correctGroups.find(group => group.terms.includes(term));\n        return group ? group.color : '#FFFFFF';\n      });\n      setMoveHistory(prevHistory => [...prevHistory, guessColors]);\n      const foundGroup = correctGroups.find(group => group.terms.sort().join(',') === currentSetString);\n      if (!foundGroup) {\n        setGuessIncorrect(true);\n        setShake(true);\n        setCooldown(true);\n        setTimeout(() => {\n          setCooldown(false);\n        }, 1200);\n        setTimeout(() => {\n          setShake(false);\n          if (oneAway && mistakes > 1) {\n            setPopupMessage(\"One Away!\");\n            setShowPopup(true);\n            setTimeout(() => setShowPopup(false), 2000);\n          }\n          setSubmittedSets([...submittedSets, currentSetString]);\n          setMistakes(mistakes - 1);\n          if (mistakes <= 1) {\n            setGameOver(true);\n            setUserWon(false);\n            setPopupMessage(\"Nice try!\");\n            setShowPopup(true);\n            setTimeout(() => {\n              setShowPopup(false);\n              setRemainingGroupsToReveal(correctGroups.filter(group => !guessedGroups.some(guessedGroup => guessedGroup.description === group.description)));\n              setReadyToShowPopUp(true);\n              setSelectedTerms([]);\n              setMistakes(0);\n            }, 2000);\n          }\n          setGuessIncorrect(false);\n        }, 850);\n      } else {\n        const updatedTerms = terms.filter(term => !foundGroup.terms.includes(term));\n        const updatedGuessedGroups = [...guessedGroups, {\n          ...foundGroup,\n          terms: selectedTerms\n        }];\n        setTerms(updatedTerms);\n        setGuessedGroups(updatedGuessedGroups);\n        localStorage.setItem(`terms-${gameSessionId}`, JSON.stringify(updatedTerms));\n        localStorage.setItem(`guessedGroups-${gameSessionId}`, JSON.stringify(updatedGuessedGroups));\n        setSelectedTerms([]);\n        if (guessedGroups.length + 1 === correctGroups.length) {\n          setGameOver(true);\n          setUserWon(true);\n          setPopupMessage(getVictoryMessage(mistakes));\n          setShowPopup(true);\n          setTimeout(() => {\n            setShowPopup(false);\n            setShowResultsPopup(true);\n          }, 1000);\n        }\n      }\n      setIsSubmitting(false);\n    }, 1700);\n  };\n  function useWindowSize() {\n    _s();\n    const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\n    useEffect(() => {\n      const handleResize = () => {\n        setSize([window.innerWidth, window.innerHeight]);\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n    return size;\n  }\n  _s(useWindowSize, \"KD928l6WwZVqhph5sEOKFH76SRY=\");\n  useEffect(() => {\n    if (selectedTerms.length > 0 && isSubmitting) {\n      selectedTerms.forEach((term, index) => {\n        setTimeout(() => {\n          setAnimateIndex(index);\n        }, index * 300);\n      });\n      const lastAnimationDelay = selectedTerms.length * 500;\n      const timeoutId = setTimeout(() => {\n        setAnimateIndex(null);\n        setIsSubmitting(false);\n      }, lastAnimationDelay);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isSubmitting, selectedTerms]);\n  useEffect(() => {\n    if (animateIndex !== null) {\n      const timeoutId = setTimeout(() => {\n        setAnimateIndex(null);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [animateIndex]);\n  useEffect(() => {\n    if (guessIncorrect) {\n      const timeoutId = setTimeout(() => {\n        setShake(false);\n      }, 500);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [guessIncorrect]);\n  useEffect(() => {\n    if (shake) {\n      const timer = setTimeout(() => {\n        setShake(false);\n        setGuessIncorrect(false);\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shake]);\n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length > 0) {\n      const timer = setTimeout(() => {\n        const [groupToReveal, ...restGroups] = remainingGroupsToReveal;\n        setGuessedGroups(prevGuessedGroups => [...prevGuessedGroups, groupToReveal]);\n        setTerms(terms => terms.filter(term => !groupToReveal.terms.includes(term)));\n        setRemainingGroupsToReveal(restGroups);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, terms]);\n  useEffect(() => {\n    if (gameOver && readyToShowPopUp && remainingGroupsToReveal.length === 0) {\n      const timer = setTimeout(() => {\n        setShowResultsPopup(true);\n      }, 1700);\n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, readyToShowPopUp]);\n  const handleShuffle = () => {\n    const shuffledTermsArray = shuffleArray([...terms]);\n    setTerms(shuffledTermsArray);\n  };\n  const shuffleArray = array => {\n    let currentIndex = array.length,\n      randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  const shuffledTermsArray = shuffleArray([...terms]);\n  useEffect(() => {\n    setTerms(shuffleArray([...initialTerms]));\n  }, []);\n  const difficultyLevels = [{\n    name: 'Easy',\n    color: '#4CAF50'\n  }, {\n    name: 'Medium',\n    color: '#e5de00'\n  }, {\n    name: 'Hard',\n    color: '#e27602'\n  }, {\n    name: 'Impossible',\n    color: '#de0a26'\n  }];\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const nextPuzzleTimeET = new Date();\n      nextPuzzleTimeET.setHours(19, 0, 0, 0); // 7:00 PM ET\n      if (nextPuzzleTimeET < now) {\n        nextPuzzleTimeET.setDate(nextPuzzleTimeET.getDate() + 1);\n      }\n      const timeUntilNextPuzzle = nextPuzzleTimeET - now;\n      const countdown = new Date(timeUntilNextPuzzle).toISOString().substr(11, 8);\n      setNextPuzzleCountdown(countdown);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, []);\n  const renderResultsPopup = () => {\n    const message = userWon ? getVictoryMessage(mistakes) : \"Next Time!\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-popup\",\n      onClick: () => setShowResultsPopup(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowResultsPopup(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"message-header\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"game-number\",\n          children: [\"OhConnections #\", correctGroups[0].number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-container\",\n          children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-level\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-color\",\n              style: {\n                backgroundColor: level.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-name\",\n              children: level.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)]\n          }, level.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-summary-grid\",\n          children: moveHistory.map((colorSet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-row\",\n            children: colorSet.map((color, colorIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-block\",\n              style: {\n                backgroundColor: color\n              }\n            }, colorIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"next-puzzle-countdown\",\n          children: [\"NEXT BOARD IN: \", nextPuzzleCountdown]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"copy-summary-button\",\n          onClick: handleCopySummary,\n          children: \"Share Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this);\n  };\n  const handleCopySummary = () => {\n    const summaryString = moveHistory.map(moveRow => moveRow.map(color => {\n      switch (color) {\n        case correctGroups[0].color:\n          return '🟩';\n        case correctGroups[1].color:\n          return '🟨';\n        case correctGroups[2].color:\n          return '🟧';\n        case correctGroups[3].color:\n          return '🟥';\n        default:\n          return '⬜️';\n      }\n    }).join('')).join('\\n');\n    const legend = `\\n\\n🟩 = Easy\\n🟨 = Medium\\n🟧 = Hard\\n🟥 = Impossible`;\n    const completeSummary = `OhConnections\\nBoard #${correctGroups[0].number}\\n\\n${summaryString}${legend}\\n\\nNEXT PUZZLE IN: ${nextPuzzleCountdown}\\n\\nwww.ohconnections.com`;\n    navigator.clipboard.writeText(completeSummary).then(() => {\n      setPopupMessage('Game summary copied to clipboard!');\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n    }, err => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  const renderHowToPlayPopup = () => {\n    if (!showHowToPlay) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"how-to-play-popup\",\n      onClick: () => setShowHowToPlay(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"how-to-play-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowHowToPlay(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"How to Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Goal: Find groups of four MLB players that have something in common\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"example-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"CURRENT DODGERS PLAYERS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-images\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: freddieFreeman,\n                alt: \"Freddie Freeman\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: mookieBetts,\n                alt: \"Mookie Betts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: shoheiOhtani,\n                alt: \"Shohei Ohtani\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: maxMuncy,\n                alt: \"Max Muncy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"PLAYERS BORN IN VENEZUELA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-images\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: joseAltuve,\n                alt: \"Jose Altuve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ronaldAcunaJr,\n                alt: \"Ronald Acu\\xF1a Jr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: miguelCabrera,\n                alt: \"Miguel Cabrera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: salvadorPerez,\n                alt: \"Salvador Perez\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select four similar players and tap 'Submit' to check if you are correct\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You have four incorrect guesses before the game ends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Each group is represented by a color: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-container\",\n          children: difficultyLevels.map(level => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"difficulty-level\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-color\",\n              style: {\n                backgroundColor: level.color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"difficulty-name\",\n              children: level.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this)]\n          }, level.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connections-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create four groups of four!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-controls button how-to-play-button\",\n        onClick: () => setShowHowToPlay(true),\n        children: \"How to Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 5\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-message\",\n      children: popupMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guessed-groups\",\n      children: guessedGroups.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guessed-group-combined\",\n        style: {\n          backgroundColor: group.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-images\",\n          children: group.terms.map((term, termIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-image-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: playerImages[term],\n              alt: term,\n              className: \"guessed-player-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-name-overlay\",\n              children: term.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this)]\n          }, termIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group-description\",\n          children: group.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terms-grid\",\n      style: {\n        gridTemplateColumns: width > 0 ? 'repeat(4, 1fr)' : 'repeat(2, 1fr)'\n      },\n      children: terms.map((term, index) => {\n        let imgSrc = playerImages[term];\n        let isSelected = selectedTerms.includes(term);\n        let isAnimating = selectedTerms.indexOf(term) === animateIndex;\n        let shouldShake = isSelected && guessIncorrect;\n        let isCooldown = cooldown;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `term-block ${isSelected ? 'selected' : ''} ${isAnimating ? 'jump-animation' : ''} ${shouldShake ? 'shake-animation' : ''} ${isSubmitting ? 'no-hover' : ''} ${isCooldown ? 'no-hover' : ''}`,\n          onClick: () => handleTermClick(term),\n          style: {\n            cursor: isSubmitting ? 'default' : 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imgSrc,\n            className: \"term-image\",\n            alt: term\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-overlay\",\n            children: term\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 9\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 5\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistakes-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistakes-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mistakes-text\",\n          children: \"Mistakes remaining: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), Array.from({\n          length: mistakes\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: baseballImg,\n          alt: \"Baseball\",\n          className: \"baseball-icon\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), !gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShuffle,\n        disabled: isSubmitting || shake || cooldown,\n        style: {\n          opacity: isSubmitting || shake || cooldown ? 0.5 : 1\n        },\n        children: \"Shuffle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTerms([]),\n        disabled: isSubmitting || shake || cooldown || selectedTerms.length === 0,\n        style: {\n          opacity: isSubmitting || shake || cooldown ? 0.5 : 1\n        },\n        children: \"Deselect All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        disabled: isSubmitting || shake || cooldown || selectedTerms.length !== 4,\n        style: {\n          opacity: isSubmitting || shake || cooldown ? 0.5 : 1\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"game-button\",\n        onClick: () => setShowResultsPopup(true),\n        children: \"View Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }, this), showResultsPopup && renderResultsPopup(), renderHowToPlayPopup(), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://docs.google.com/forms/d/e/1FAIpQLScf3nrR79wVz0ZjBy6LaH18Xi9gH6RfwU8GMd3-O-luSJjB-Q/viewform?usp=sf_link\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"suggestions-link\",\n      children: \"Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 520,\n    columnNumber: 5\n  }, this);\n};\n_s2(ConnectionsPage, \"jZFaBjE1AEz1Tmn50gmsgbCim68=\", true);\n_c = ConnectionsPage;\nexport default ConnectionsPage;\nvar _c;\n$RefreshReg$(_c, \"ConnectionsPage\");","map":{"version":3,"names":["React","useState","useEffect","playerImages","initialTerms","correctGroups","baseballImg","mookieBetts","maxMuncy","joseAltuve","freddieFreeman","shoheiOhtani","ronaldAcunaJr","miguelCabrera","salvadorPerez","jsxDEV","_jsxDEV","ConnectionsPage","_s2","_s","$RefreshSig$","gameSessionId","cooldown","setCooldown","guessIncorrect","setGuessIncorrect","isSubmitting","setIsSubmitting","width","height","useWindowSize","readyToShowPopUp","setReadyToShowPopUp","nextPuzzleCountdown","setNextPuzzleCountdown","showHowToPlay","setShowHowToPlay","userWon","setUserWon","animateIndex","setAnimateIndex","shake","setShake","gameOver","setGameOver","saved","localStorage","getItem","JSON","parse","showResultsPopup","setShowResultsPopup","moveHistory","setMoveHistory","remainingGroupsToReveal","setRemainingGroupsToReveal","savedData","selectedTerms","setSelectedTerms","terms","setTerms","savedTerms","guessedGroups","setGuessedGroups","savedGroups","mistakes","setMistakes","savedMistakes","parseInt","submittedSets","setSubmittedSets","savedSets","popupMessage","setPopupMessage","showPopup","setShowPopup","setItem","stringify","toString","updatedTerms","filter","term","some","group","includes","initGuessedGroups","length","initTerms","shuffledTerms","shuffleArray","getVictoryMessage","mistakesLeft","handleTermClick","t","setTimeout","handleSubmit","currentSetSorted","sort","currentSetString","join","oneAway","matchingTerms","guessColors","map","find","color","prevHistory","foundGroup","guessedGroup","description","updatedGuessedGroups","size","setSize","window","innerWidth","innerHeight","handleResize","addEventListener","removeEventListener","forEach","index","lastAnimationDelay","timeoutId","clearTimeout","timer","groupToReveal","restGroups","prevGuessedGroups","handleShuffle","shuffledTermsArray","array","currentIndex","randomIndex","Math","floor","random","difficultyLevels","name","intervalId","setInterval","now","Date","nextPuzzleTimeET","setHours","setDate","getDate","timeUntilNextPuzzle","countdown","toISOString","substr","clearInterval","renderResultsPopup","message","className","onClick","children","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","number","level","style","backgroundColor","colorSet","colorIndex","handleCopySummary","summaryString","moveRow","legend","completeSummary","navigator","clipboard","writeText","then","err","console","error","renderHowToPlayPopup","src","alt","termIndex","toUpperCase","gridTemplateColumns","imgSrc","isSelected","isAnimating","indexOf","shouldShake","isCooldown","cursor","Array","from","_","i","disabled","opacity","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/michaelgoldfarb/Documents/OhConnections/web/web/src/pages/ConnectionsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ConnectionsPage.css';\nimport { playerImages, initialTerms, correctGroups } from './inputs/03-17-2024/gameData.js';\nimport baseballImg from '../images/baseball.png';\nimport mookieBetts from '../images/examples/mookiebetts.png';\nimport maxMuncy from '../images/examples/maxmuncy.png';\nimport joseAltuve from '../images/examples/josealtuve.png';\nimport freddieFreeman from '../images/examples/freddiefreeman.png';\nimport shoheiOhtani from '../images/examples/shoheiohtani.png';\nimport ronaldAcunaJr from '../images/examples/ronaldacunajr.png';\nimport miguelCabrera from '../images/examples/miguelcabrera.png';\nimport salvadorPerez from '../images/examples/salvadorperez.png';\n\nconst ConnectionsPage = () => {\n  const gameSessionId = 'defaultPage';\n\n  const [cooldown, setCooldown] = useState(false);\n  const [guessIncorrect, setGuessIncorrect] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [width, height] = useWindowSize();\n  const [readyToShowPopUp, setReadyToShowPopUp] = useState(false);\n  const [nextPuzzleCountdown, setNextPuzzleCountdown] = useState('');\n  const [showHowToPlay, setShowHowToPlay] = useState(false);\n  const [userWon, setUserWon] = useState(false);\n  const [animateIndex, setAnimateIndex] = useState(null);\n  const [shake, setShake] = useState(false);\n  // const [selectedTerms, setSelectedTerms] = useState([]);    \n  // const [moveHistory, setMoveHistory] = useState([]);\n  // const [gameOver, setGameOver] = useState(false);\n  // const [showResultsPopup, setShowResultsPopup] = useState(false);\n  // const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState([]);\n  // const [mistakes, setMistakes] = useState(4);\n  // const [submittedSets, setSubmittedSets] = useState([]);\n  // const [guessedGroups, setGuessedGroups] = useState([]);\n  // const [terms, setTerms] = useState(initialTerms);\n  const [gameOver, setGameOver] = useState(() => {\n    const saved = localStorage.getItem(`gameOver-${gameSessionId}`);\n    return saved ? JSON.parse(saved) : false;\n  });\n  \n  const [showResultsPopup, setShowResultsPopup] = useState(() => {\n    const saved = localStorage.getItem(`showResultsPopup-${gameSessionId}`);\n    return saved ? JSON.parse(saved) : false;\n  });\n  \n  const [moveHistory, setMoveHistory] = useState(() => {\n    const saved = localStorage.getItem(`moveHistory-${gameSessionId}`);\n    return saved ? JSON.parse(saved) : [];\n  });\n  \n  const [remainingGroupsToReveal, setRemainingGroupsToReveal] = useState(() => {\n    const savedData = localStorage.getItem(`remainingGroupsToReveal-${gameSessionId}`);\n    return savedData ? JSON.parse(savedData) : [];\n  });\n  \n  const [selectedTerms, setSelectedTerms] = useState(() => {\n    const savedData = localStorage.getItem(`selectedTerms-${gameSessionId}`);\n    return savedData ? JSON.parse(savedData) : [];\n  });\n  \n  const [terms, setTerms] = useState(() => {\n    const savedTerms = localStorage.getItem(`terms-${gameSessionId}`);\n    return savedTerms ? JSON.parse(savedTerms) : initialTerms;\n  });\n  \n  const [guessedGroups, setGuessedGroups] = useState(() => {\n    const savedGroups = localStorage.getItem(`guessedGroups-${gameSessionId}`);\n    return savedGroups ? JSON.parse(savedGroups) : [];\n  });\n  \n  const [mistakes, setMistakes] = useState(() => {\n    const savedMistakes = localStorage.getItem(`mistakes-${gameSessionId}`);\n    return savedMistakes !== null ? parseInt(savedMistakes, 10) : 4;\n  });\n  \n  const [submittedSets, setSubmittedSets] = useState(() => {\n    const savedSets = localStorage.getItem(`submittedSets-${gameSessionId}`);\n    return savedSets ? JSON.parse(savedSets) : [];\n  });\n  \n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(`terms-${gameSessionId}`, JSON.stringify(terms));\n  }, [terms, gameSessionId]);\n  \n  useEffect(() => {\n    localStorage.setItem(`mistakes-${gameSessionId}`, mistakes.toString());\n  }, [mistakes, gameSessionId]);\n  \n  useEffect(() => {\n    localStorage.setItem(`submittedSets-${gameSessionId}`, JSON.stringify(submittedSets));\n  }, [submittedSets, gameSessionId]);\n  \n  useEffect(() => {\n    localStorage.setItem(`guessedGroups-${gameSessionId}`, JSON.stringify(guessedGroups));\n  }, [guessedGroups, gameSessionId]);\n\n  useEffect(() => {\n    localStorage.setItem(`remainingGroupsToReveal-${gameSessionId}`, JSON.stringify(remainingGroupsToReveal));\n  }, [remainingGroupsToReveal, gameSessionId]);\n  \n  useEffect(() => {\n    localStorage.setItem(`selectedTerms-${gameSessionId}`, JSON.stringify(selectedTerms));\n  }, [selectedTerms, gameSessionId]);  \n\n  useEffect(() => {\n    localStorage.setItem(`gameOver-${gameSessionId}`, JSON.stringify(gameOver));\n  }, [gameOver, gameSessionId]);\n  \n  useEffect(() => {\n    localStorage.setItem(`showResultsPopup-${gameSessionId}`, JSON.stringify(showResultsPopup));\n  }, [showResultsPopup, gameSessionId]);\n  \n  useEffect(() => {\n    localStorage.setItem(`moveHistory-${gameSessionId}`, JSON.stringify(moveHistory));\n  }, [moveHistory, gameSessionId]);\n\n  useEffect(() => {\n    const updatedTerms = initialTerms.filter(term => \n      !guessedGroups.some(group => group.terms.includes(term))\n    );\n    \n    setTerms(updatedTerms);\n    localStorage.setItem(`terms-${gameSessionId}`, JSON.stringify(updatedTerms));\n  }, [guessedGroups, gameSessionId]);\n  \n\n  useEffect(() => {\n    // Load guessed groups from localStorage or use initial value\n    const initGuessedGroups = JSON.parse(localStorage.getItem(`guessedGroups-${gameSessionId}`)) || [];\n    \n    // If there are guessed groups, use the terms from localStorage without shuffling\n    if (initGuessedGroups.length > 0) {\n        const initTerms = JSON.parse(localStorage.getItem(`terms-${gameSessionId}`)) || initialTerms;\n        setTerms(initTerms);\n    } else {\n        // If there are no guessed groups, shuffle the initial terms and use them\n        const shuffledTerms = shuffleArray([...initialTerms]); // Ensure to spread into a new array to avoid mutating the original\n        setTerms(shuffledTerms);\n        localStorage.setItem(`terms-${gameSessionId}`, JSON.stringify(shuffledTerms)); // Update localStorage with shuffled terms\n    }\n\n    setGuessedGroups(initGuessedGroups);\n}, []); // This effect runs only once when the component mounts\n\n  \n  \n\n  const getVictoryMessage = (mistakesLeft) => {\n    switch(mistakesLeft) {\n      case 4: return \"Perfect!\";\n      case 3: return \"Great Job!\";\n      case 2: return \"Solid!\";\n      case 1: return \"Phew!\";\n      default: return \"Good Job!\";\n    }\n  };\n  \n  const handleTermClick = (term) => {\n    if (gameOver) return;\n    if (isSubmitting || gameOver || cooldown) return;\n    if (selectedTerms.includes(term)) {\n      setSelectedTerms(selectedTerms.filter(t => t !== term));\n      setShowPopup(false);\n    } else {\n      if (selectedTerms.length < 4) {\n        setSelectedTerms([...selectedTerms, term]);\n        setShowPopup(false);\n      } else {\n        setPopupMessage(\"You cannot select more than 4 players.\");\n        setShowPopup(true);\n        setTimeout(() => setShowPopup(false), 2000);\n      }\n    }\n  };\n\n  const handleSubmit = () => {\n    if (gameOver || mistakes <= 0 || selectedTerms.length !== 4 || cooldown) {\n        return;\n    }\n\n    const currentSetSorted = [...selectedTerms].sort();\n    const currentSetString = currentSetSorted.join(',');\n    \n    if (submittedSets.includes(currentSetString)) {\n      setPopupMessage(\"You cannot guess the same 4 players twice.\");\n      setShowPopup(true);\n      setTimeout(() => {\n          setShowPopup(false);\n          setIsSubmitting(false);\n      }, 2000);\n      return;\n    }\n  \n    setIsSubmitting(true);\n\n  setTimeout(() => {\n    const oneAway = correctGroups.some(group => {\n        const matchingTerms = group.terms.filter(term => currentSetSorted.includes(term));\n        return matchingTerms.length === 3 && group.terms.sort().join(',') !== currentSetString;\n    });\n\n    const guessColors = selectedTerms.map(term => {\n        const group = correctGroups.find(group => group.terms.includes(term));\n        return group ? group.color : '#FFFFFF';\n    });\n\n    setMoveHistory(prevHistory => [...prevHistory, guessColors]);\n        \n    const foundGroup = correctGroups.find(group => group.terms.sort().join(',') === currentSetString);\n\n    if (!foundGroup) {\n      setGuessIncorrect(true);\n      setShake(true);\n\n      setCooldown(true);\n        setTimeout(() => {\n          setCooldown(false);\n        }, 1200);\n\n      setTimeout(() => {\n        setShake(false);\n\n        if (oneAway && mistakes > 1) {\n          setPopupMessage(\"One Away!\");\n          setShowPopup(true);\n          setTimeout(() => setShowPopup(false), 2000);\n        }\n            \n        setSubmittedSets([...submittedSets, currentSetString]);\n        setMistakes(mistakes - 1);\n\n        if (mistakes <= 1) {\n            setGameOver(true);\n            setUserWon(false);\n            setPopupMessage(\"Nice try!\");\n            setShowPopup(true);\n            setTimeout(() => {\n                setShowPopup(false);\n                setRemainingGroupsToReveal(correctGroups.filter(group => !guessedGroups.some(guessedGroup => guessedGroup.description === group.description)));\n                setReadyToShowPopUp(true);\n                setSelectedTerms([]);\n                setMistakes(0);\n            }, 2000);\n        }\n        setGuessIncorrect(false);\n      }, 850);\n        } else {\n            const updatedTerms = terms.filter(term => !foundGroup.terms.includes(term));\n            const updatedGuessedGroups = [...guessedGroups, { ...foundGroup, terms: selectedTerms }];            \n            setTerms(updatedTerms);\n            setGuessedGroups(updatedGuessedGroups);\n            localStorage.setItem(`terms-${gameSessionId}`, JSON.stringify(updatedTerms));\n            localStorage.setItem(`guessedGroups-${gameSessionId}`, JSON.stringify(updatedGuessedGroups));\n            setSelectedTerms([]);\n\n          if (guessedGroups.length + 1 === correctGroups.length) {\n            setGameOver(true);\n            setUserWon(true);\n            setPopupMessage(getVictoryMessage(mistakes));\n            setShowPopup(true);\n            setTimeout(() => {\n                setShowPopup(false);\n                setShowResultsPopup(true);\n            }, 1000);\n          }\n        }\n      setIsSubmitting(false);\n    }, 1700);\n  };\n\n  \n  \n\n  function useWindowSize() {\n    const [size, setSize] = useState([window.innerWidth, window.innerHeight]);\n  \n    useEffect(() => {\n      const handleResize = () => {\n        setSize([window.innerWidth, window.innerHeight]);\n      };\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }, []);\n  \n    return size;\n  }\n\n  useEffect(() => {\n    if (selectedTerms.length > 0 && isSubmitting) {\n      selectedTerms.forEach((term, index) => {\n        setTimeout(() => {\n          setAnimateIndex(index);\n        }, index * 300);\n      });\n  \n      const lastAnimationDelay = selectedTerms.length * 500;\n      const timeoutId = setTimeout(() => {\n        setAnimateIndex(null);\n        setIsSubmitting(false);\n      }, lastAnimationDelay);\n  \n      return () => clearTimeout(timeoutId);\n    }\n  }, [isSubmitting, selectedTerms]);\n  \n  \n  useEffect(() => {\n    if (animateIndex !== null) {\n      const timeoutId = setTimeout(() => {\n        setAnimateIndex(null);\n      }, 500);\n  \n      return () => clearTimeout(timeoutId);\n    }\n  }, [animateIndex]);\n\n  useEffect(() => {\n    if (guessIncorrect) {\n      const timeoutId = setTimeout(() => {\n        setShake(false);\n      }, 500);\n      \n      return () => clearTimeout(timeoutId);\n    }\n  }, [guessIncorrect]);\n\n  useEffect(() => {\n    if (shake) {\n      const timer = setTimeout(() => {\n        setShake(false);\n        setGuessIncorrect(false);\n      }, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [shake]);\n\n\n  \n  useEffect(() => {\n    if (gameOver && remainingGroupsToReveal.length > 0) {\n      const timer = setTimeout(() => {\n        const [groupToReveal, ...restGroups] = remainingGroupsToReveal;\n      setGuessedGroups(prevGuessedGroups => [...prevGuessedGroups, groupToReveal]);\n      setTerms(terms => terms.filter(term => !groupToReveal.terms.includes(term)));\n      setRemainingGroupsToReveal(restGroups);\n    }, 1000);\n  \n      return () => clearTimeout(timer);\n    }\n  }, [remainingGroupsToReveal, gameOver, terms]);\n\n  useEffect(() => {\n    if (gameOver && readyToShowPopUp && remainingGroupsToReveal.length === 0) {\n      const timer = setTimeout(() => {\n        setShowResultsPopup(true);\n      }, 1700);\n      return () => clearTimeout(timer);      \n    }\n  }, [remainingGroupsToReveal, gameOver, readyToShowPopUp]);\n  \n  \n  const handleShuffle = () => {\n    const shuffledTermsArray = shuffleArray([...terms]);\n    setTerms(shuffledTermsArray);\n  };\n\n  const shuffleArray = (array) => {\n    let currentIndex = array.length,  randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  const shuffledTermsArray = shuffleArray([...terms]);\n\n  useEffect(() => {\n    setTerms(shuffleArray([...initialTerms]));\n  }, []);\n  \n  const difficultyLevels = [\n    { name: 'Easy', color: '#4CAF50' },\n    { name: 'Medium', color: '#e5de00' },\n    { name: 'Hard', color: '#e27602' },\n    { name: 'Impossible', color: '#de0a26' },\n  ];\n  \n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const now = new Date();\n      const nextPuzzleTimeET = new Date();\n      nextPuzzleTimeET.setHours(19, 0, 0, 0); // 7:00 PM ET\n      if (nextPuzzleTimeET < now) {\n        nextPuzzleTimeET.setDate(nextPuzzleTimeET.getDate() + 1);\n      }\n  \n      const timeUntilNextPuzzle = nextPuzzleTimeET - now;\n      const countdown = new Date(timeUntilNextPuzzle).toISOString().substr(11, 8);\n      setNextPuzzleCountdown(countdown);\n    }, 1000);\n  \n    return () => clearInterval(intervalId);\n  }, []);\n\n  \n  const renderResultsPopup = () => {\n  const message = userWon ? getVictoryMessage(mistakes) : \"Next Time!\";\n    \n    return (\n      <div className=\"results-popup\" onClick={() => setShowResultsPopup(false)}>\n        <div className=\"results-content\" onClick={(e) => e.stopPropagation()}>\n          <button className=\"close-button\" onClick={() => setShowResultsPopup(false)}>X</button>\n          <h2 className=\"message-header\">{message}</h2>\n          <p className=\"game-number\">OhConnections #{correctGroups[0].number}</p>\n          <div className=\"difficulty-container\">\n            {difficultyLevels.map(level => (\n              <div key={level.name} className=\"difficulty-level\">\n                <span className=\"difficulty-color\" style={{ backgroundColor: level.color }}></span>\n                <span className=\"difficulty-name\">{level.name}</span>\n              </div>\n            ))}\n          </div>\n          <div className=\"game-summary-grid\">\n          {moveHistory.map((colorSet, index) => (\n            <div key={index} className=\"summary-row\">\n              {colorSet.map((color, colorIndex) => (\n                <div key={colorIndex} className=\"summary-block\" style={{ backgroundColor: color }}></div>\n              ))}\n            </div>\n          ))}\n\n          </div>\n          <p className=\"next-puzzle-countdown\">NEXT BOARD IN: {nextPuzzleCountdown}</p>\n          <button className=\"copy-summary-button\" onClick={handleCopySummary}>Share Results</button>\n        </div>\n      </div>\n    );\n  };\n\n  const handleCopySummary = () => {\n    const summaryString = moveHistory.map(moveRow => \n      moveRow.map(color => {\n        switch (color) {\n          case correctGroups[0].color: return '🟩';\n          case correctGroups[1].color: return '🟨';\n          case correctGroups[2].color: return '🟧';\n          case correctGroups[3].color: return '🟥';\n          default: return '⬜️';\n        }\n      }).join('')\n    ).join('\\n');\n  \n    const legend = `\\n\\n🟩 = Easy\\n🟨 = Medium\\n🟧 = Hard\\n🟥 = Impossible`;\n\n    const completeSummary = `OhConnections\\nBoard #${correctGroups[0].number}\\n\\n${summaryString}${legend}\\n\\nNEXT PUZZLE IN: ${nextPuzzleCountdown}\\n\\nwww.ohconnections.com`;\n    \n    navigator.clipboard.writeText(completeSummary).then(() => {\n      setPopupMessage('Game summary copied to clipboard!');\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 2000);\n    }, (err) => {\n      console.error('Could not copy text: ', err);\n    });\n  };\n  \n  \n  const renderHowToPlayPopup = () => {\n    if (!showHowToPlay) return null;\n  \n    return (\n      <div className=\"how-to-play-popup\" onClick={() => setShowHowToPlay(false)}>\n        <div className=\"how-to-play-content\" onClick={e => e.stopPropagation()}>\n          <button className=\"close-button\" onClick={() => setShowHowToPlay(false)}>X</button>\n          <h1>How to Play</h1>\n          <p>Goal: Find groups of four MLB players that have something in common</p>\n          <div className=\"example-section\">\n            <p>Example:</p>\n            <div className=\"example-group\">\n              <p>CURRENT DODGERS PLAYERS</p>\n              <div className=\"player-images\">\n                <img src={freddieFreeman} alt=\"Freddie Freeman\" />\n                <img src={mookieBetts} alt=\"Mookie Betts\" />\n                <img src={shoheiOhtani} alt=\"Shohei Ohtani\" />\n                <img src={maxMuncy} alt=\"Max Muncy\" />\n            </div>\n            </div>\n            <div className=\"example-group\">\n              <p>PLAYERS BORN IN VENEZUELA</p>\n              <div className=\"player-images\">\n                <img src={joseAltuve} alt=\"Jose Altuve\" />\n                <img src={ronaldAcunaJr} alt=\"Ronald Acuña Jr\" />\n                <img src={miguelCabrera} alt=\"Miguel Cabrera\" />\n                <img src={salvadorPerez} alt=\"Salvador Perez\" />\n            </div>\n            </div>\n          </div>\n          <p>Select four similar players and tap 'Submit' to check if you are correct</p>\n          <p>You have four incorrect guesses before the game ends</p>\n          <p>Each group is represented by a color: </p>\n          <div className=\"difficulty-container\">\n          {difficultyLevels.map(level => (\n            <div key={level.name} className=\"difficulty-level\">\n              <span className=\"difficulty-color\" style={{ backgroundColor: level.color }}></span>\n              <span className=\"difficulty-name\">{level.name}</span>\n            </div>\n          ))}\n        </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"connections-game\">\n    <div className=\"header-container\">\n      <div className=\"button-placeholder\"></div>\n      <h1>Create four groups of four!</h1>\n      <button className=\"game-controls button how-to-play-button\" onClick={() => setShowHowToPlay(true)}>How to Play</button>\n    </div>\n    {showPopup && <div className=\"popup-message\">{popupMessage}</div>}\n    <div className=\"guessed-groups\">\n      {guessedGroups.map((group, index) => (\n        <div \n          key={index} \n          className=\"guessed-group-combined\"\n          style={{ backgroundColor: group.color }}\n        >\n          <div className=\"group-images\">\n            {group.terms.map((term, termIndex) => (\n              <div key={termIndex} className=\"player-image-container\">\n                <img src={playerImages[term]} alt={term} className=\"guessed-player-image\" />\n                <div className=\"player-name-overlay\">{term.toUpperCase()}</div>\n              </div>\n            ))}\n          </div>\n          <div className=\"group-description\">{group.description}</div>\n        </div>\n      ))}\n    </div>\n\n    <div className=\"terms-grid\" style={{ gridTemplateColumns: width > 0 ? 'repeat(4, 1fr)' : 'repeat(2, 1fr)' }}>\n      {terms.map((term, index) => {\n        let imgSrc = playerImages[term];\n          let isSelected = selectedTerms.includes(term);\n          let isAnimating = selectedTerms.indexOf(term) === animateIndex;\n          let shouldShake = isSelected && guessIncorrect;\n          let isCooldown = cooldown;\n\n    return (\n      <div key={index} \n           className={`term-block ${isSelected ? 'selected' : ''} ${isAnimating ? 'jump-animation' : ''} ${shouldShake ? 'shake-animation' : ''} ${isSubmitting ? 'no-hover' : ''} ${isCooldown ? 'no-hover' : ''}`} \n           onClick={() => handleTermClick(term)}\n           style={{ cursor: isSubmitting ? 'default' : 'pointer' }}>\n        <img src={imgSrc} className=\"term-image\" alt={term} />\n        <div className=\"text-overlay\">{term}</div>\n      </div>\n\n          );\n      })}\n    </div>\n    {!gameOver && (\n      <div className=\"mistakes-section\">\n        <div className=\"mistakes-indicator\">\n          <span className=\"mistakes-text\">Mistakes remaining: </span>\n          {Array.from({ length: mistakes }, (_, i) => (\n            <img key={i} src={baseballImg} alt=\"Baseball\" className=\"baseball-icon\" />\n          ))}\n        </div>\n      </div>\n    )}\n    {!gameOver ? (\n      <div className=\"game-controls\">\n        <button \n          onClick={handleShuffle}\n          disabled={isSubmitting || shake || cooldown}\n          style={{ opacity: (isSubmitting || shake || cooldown) ? 0.5 : 1 }}>\n          Shuffle\n        </button>\n\n        <button \n          onClick={() => setSelectedTerms([])}\n          disabled={isSubmitting || shake || cooldown || selectedTerms.length === 0}\n          style={{ opacity: (isSubmitting || shake || cooldown) ? 0.5 : 1 }}>\n          Deselect All\n        </button>\n\n        <button \n          onClick={handleSubmit}\n          disabled={isSubmitting || shake || cooldown || selectedTerms.length !== 4}\n          style={{ opacity: (isSubmitting || shake || cooldown) ? 0.5 : 1 }}>\n          Submit\n        </button>\n      </div>\n    ) : (\n      <div className=\"game-over-controls\">\n        <button className=\"game-button\" onClick={() => setShowResultsPopup(true)}>View Results</button>\n      </div>\n    )}\n    {showResultsPopup && renderResultsPopup()}\n    {renderHowToPlayPopup()}\n    <a href=\"https://docs.google.com/forms/d/e/1FAIpQLScf3nrR79wVz0ZjBy6LaH18Xi9gH6RfwU8GMd3-O-luSJjB-Q/viewform?usp=sf_link\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"suggestions-link\">Suggestions</a>\n  </div>\n);\n\n  \n};\n\nexport default ConnectionsPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}