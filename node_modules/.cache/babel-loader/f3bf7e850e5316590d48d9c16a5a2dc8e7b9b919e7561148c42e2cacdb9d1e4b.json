{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgoldfarb/Desktop/OhConnections/web/web/src/pages/ConnectionsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ConnectionsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionsPage = () => {\n  _s();\n  const initialTerms = ['SWIFT', 'VEHICLE', 'LARGE', 'LEGEND', 'SMALL', 'MEANS', 'MEDIUM', 'MARS', 'OUTSIDE', 'ROOM', 'GRANDE', 'SLIM', 'PROOF', 'STYLES', 'REMOTE', 'CHANNEL'];\n  const [terms, setTerms] = useState(initialTerms);\n  const [selectedTerms, setSelectedTerms] = useState([]);\n  const [mistakes, setMistakes] = useState(4);\n  const handleTermClick = term => {\n    if (selectedTerms.includes(term)) {\n      setSelectedTerms(selectedTerms.filter(t => t !== term));\n    } else {\n      setSelectedTerms([...selectedTerms, term]);\n    }\n  };\n  const handleSubmit = () => {\n    // Here you would check if the groups of four are correct.\n    // For now, let's just reset the selected terms.\n    setSelectedTerms([]);\n\n    // And we decrement the mistake count for the example.\n    // In a real game, you'd only decrement this if the submission was incorrect.\n    setMistakes(mistakes - 1);\n  };\n  const handleShuffle = () => {\n    setTerms(shuffledTermsArray);\n    setSelectedTerms([]);\n  };\n\n  // A simple shuffle function for the terms\n  const shuffleArray = array => {\n    let currentIndex = array.length,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n  };\n  const shuffledTermsArray = shuffleArray([...terms]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connections-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create four groups of four!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"terms-grid\",\n      children: terms.map((term, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `term-block ${selectedTerms.includes(term) ? 'selected' : ''}`,\n        onClick: () => handleTermClick(term),\n        children: term\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mistakes-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mistakes-indicator\",\n        children: Array.from({\n          length: mistakes\n        }, (_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/path/to/baseball.png\",\n          alt: \"Baseball\",\n          className: \"baseball-icon\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShuffle,\n        children: \"Shuffle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedTerms([]),\n        children: \"Deselect All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionsPage, \"6cawWIh1TTKaRWcRu56vWJGMCe4=\");\n_c = ConnectionsPage;\nexport default ConnectionsPage;\nvar _c;\n$RefreshReg$(_c, \"ConnectionsPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConnectionsPage","_s","initialTerms","terms","setTerms","selectedTerms","setSelectedTerms","mistakes","setMistakes","handleTermClick","term","includes","filter","t","handleSubmit","handleShuffle","shuffledTermsArray","shuffleArray","array","currentIndex","length","randomIndex","Math","floor","random","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","Array","from","_","i","src","alt","_c","$RefreshReg$"],"sources":["/Users/michaelgoldfarb/Desktop/OhConnections/web/web/src/pages/ConnectionsPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ConnectionsPage.css';\n\nconst ConnectionsPage = () => {\n  const initialTerms = ['SWIFT', 'VEHICLE', 'LARGE', 'LEGEND', 'SMALL', 'MEANS', 'MEDIUM', 'MARS', 'OUTSIDE', 'ROOM', 'GRANDE', 'SLIM', 'PROOF', 'STYLES', 'REMOTE', 'CHANNEL'];\n  \n  const [terms, setTerms] = useState(initialTerms);\n  const [selectedTerms, setSelectedTerms] = useState([]);\n  const [mistakes, setMistakes] = useState(4);\n\n  const handleTermClick = (term) => {\n    if (selectedTerms.includes(term)) {\n      setSelectedTerms(selectedTerms.filter(t => t !== term));\n    } else {\n      setSelectedTerms([...selectedTerms, term]);\n    }\n  };\n\n  const handleSubmit = () => {\n    // Here you would check if the groups of four are correct.\n    // For now, let's just reset the selected terms.\n    setSelectedTerms([]);\n\n    // And we decrement the mistake count for the example.\n    // In a real game, you'd only decrement this if the submission was incorrect.\n    setMistakes(mistakes - 1);\n  };\n\n  const handleShuffle = () => {\n    setTerms(shuffledTermsArray);\n    setSelectedTerms([]);\n  };\n\n  // A simple shuffle function for the terms\n  const shuffleArray = (array) => {\n    let currentIndex = array.length,  randomIndex;\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  };\n\n  const shuffledTermsArray = shuffleArray([...terms]);\n\n  return (\n    <div className=\"connections-game\">\n      <h1>Create four groups of four!</h1>\n      <div className=\"terms-grid\">\n        {terms.map((term, index) => (\n          <div key={index} className={`term-block ${selectedTerms.includes(term) ? 'selected' : ''}`} onClick={() => handleTermClick(term)}>\n            {term}\n          </div>\n        ))}\n      </div>\n      <div className=\"mistakes-section\">\n        <div className=\"mistakes-indicator\">\n          {/* Mistakes remaining: {'●'.repeat(mistakes)} */}\n          {Array.from({ length: mistakes }, (_, i) => (\n            <img key={i} src=\"/path/to/baseball.png\" alt=\"Baseball\" className=\"baseball-icon\" />\n          ))}\n        </div>\n      </div>\n      <div className=\"game-controls\">\n        <button onClick={handleShuffle}>Shuffle</button>\n        <button onClick={() => setSelectedTerms([])}>Deselect All</button>\n        <button onClick={handleSubmit}>Submit</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectionsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}