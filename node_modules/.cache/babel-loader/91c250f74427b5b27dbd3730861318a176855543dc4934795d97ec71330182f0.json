{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgoldfarb/Desktop/MLBGamePredictor/web/web/src/pages/PredictionHistoryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './PredictionHistoryPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictionHistoryPage = () => {\n  _s();\n  const [predictionHistory, setPredictionHistory] = useState([]);\n  const [teamRecords, setTeamRecords] = useState([]);\n  const [sortType, setSortType] = useState(''); // Track the current sort type\n\n  useEffect(() => {\n    const fetchPredictionHistory = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/prediction-history');\n        setPredictionHistory(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    const fetchTeamRecords = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/team-records');\n        console.log(response.data); // Check the response data\n        setTeamRecords(response.data);\n        console.log(teamRecords); // Log the value of teamRecords after setting it in the state\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPredictionHistory();\n    fetchTeamRecords();\n  }, []);\n  const formatPredictionHistory = predictionHistory => {\n    if (!predictionHistory || predictionHistory.length === 0) {\n      return null;\n    }\n    return predictionHistory.map(prediction => {\n      const {\n        predictionDate,\n        numerator,\n        denominator\n      } = prediction;\n      const formattedDate = predictionDate.substring(5).replace('-', '/');\n      return `${formattedDate}: ${numerator}/${denominator}`;\n    });\n  };\n  const formatTeamRecords = teamRecords => {\n    if (!teamRecords || teamRecords.length === 0) {\n      return null;\n    }\n    let sortedTeamRecords = [...teamRecords]; // Create a copy of the teamRecords array\n\n    // Sort the teamRecords based on the current sort type\n    if (sortType === 'highest') {\n      sortedTeamRecords.sort((a, b) => b.percentage - a.percentage);\n    } else if (sortType === 'lowest') {\n      sortedTeamRecords.sort((a, b) => a.percentage - b.percentage);\n    }\n    return sortedTeamRecords.map(teamRecord => {\n      const {\n        teamName,\n        numerator,\n        denominator,\n        percentage\n      } = teamRecord;\n      const formattedPercentage = (percentage * 100).toFixed(2);\n      return `${teamName}: ${numerator}/${denominator} (${formattedPercentage}%)`;\n    });\n  };\n  const handleSortByHighest = () => {\n    setSortType('highest');\n  };\n  const handleSortByLowest = () => {\n    setSortType('lowest');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction-history-page bg-gray-800 min-h-screen flex flex-col items-center justify-start py-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container flex mr-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-section w-3/4 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold mb-4\",\n          children: \"Prediction History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), predictionHistory && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"prediction-list\",\n          children: formatPredictionHistory(predictionHistory).map((prediction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-3\",\n            children: prediction\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-section w-1/2 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold mb-4\",\n          children: \"Prediction Rate By Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sort-button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: handleSortByHighest,\n            children: \"Sort by Highest Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            onClick: handleSortByLowest,\n            children: \"Sort by Lowest Percentage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), teamRecords && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"prediction-list\",\n          children: formatTeamRecords(teamRecords).map((teamRecord, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-3\",\n            children: teamRecord\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(PredictionHistoryPage, \"F31RmRAlNwoMT9OaDC2anF+Wu04=\");\n_c = PredictionHistoryPage;\nexport default PredictionHistoryPage;\nvar _c;\n$RefreshReg$(_c, \"PredictionHistoryPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PredictionHistoryPage","_s","predictionHistory","setPredictionHistory","teamRecords","setTeamRecords","sortType","setSortType","fetchPredictionHistory","response","get","data","error","console","fetchTeamRecords","log","formatPredictionHistory","length","map","prediction","predictionDate","numerator","denominator","formattedDate","substring","replace","formatTeamRecords","sortedTeamRecords","sort","a","b","percentage","teamRecord","teamName","formattedPercentage","toFixed","handleSortByHighest","handleSortByLowest","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","_c","$RefreshReg$"],"sources":["/Users/michaelgoldfarb/Desktop/MLBGamePredictor/web/web/src/pages/PredictionHistoryPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './PredictionHistoryPage.css';\n\nconst PredictionHistoryPage = () => {\n  const [predictionHistory, setPredictionHistory] = useState([]);\n  const [teamRecords, setTeamRecords] = useState([]);\n  const [sortType, setSortType] = useState(''); // Track the current sort type\n\n  useEffect(() => {\n    const fetchPredictionHistory = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/prediction-history');\n        setPredictionHistory(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const fetchTeamRecords = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/team-records');\n        console.log(response.data); // Check the response data\n        setTeamRecords(response.data);\n        console.log(teamRecords); // Log the value of teamRecords after setting it in the state\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    \n\n    fetchPredictionHistory();\n    fetchTeamRecords();\n  }, []);\n\n  const formatPredictionHistory = (predictionHistory) => {\n    if (!predictionHistory || predictionHistory.length === 0) {\n      return null;\n    }\n\n    return predictionHistory.map((prediction) => {\n      const { predictionDate, numerator, denominator } = prediction;\n      const formattedDate = predictionDate.substring(5).replace('-', '/');\n      return `${formattedDate}: ${numerator}/${denominator}`;\n    });\n  };\n\n  const formatTeamRecords = (teamRecords) => {\n    if (!teamRecords || teamRecords.length === 0) {\n      return null;\n    }\n\n    let sortedTeamRecords = [...teamRecords]; // Create a copy of the teamRecords array\n\n    // Sort the teamRecords based on the current sort type\n    if (sortType === 'highest') {\n      sortedTeamRecords.sort((a, b) => b.percentage - a.percentage);\n    } else if (sortType === 'lowest') {\n      sortedTeamRecords.sort((a, b) => a.percentage - b.percentage);\n    }\n\n    return sortedTeamRecords.map((teamRecord) => {\n      const { teamName, numerator, denominator, percentage } = teamRecord;\n      const formattedPercentage = (percentage * 100).toFixed(2);\n      return `${teamName}: ${numerator}/${denominator} (${formattedPercentage}%)`;\n    });\n  };\n\n  const handleSortByHighest = () => {\n    setSortType('highest');\n  };\n\n  const handleSortByLowest = () => {\n    setSortType('lowest');\n  };\n\n  return (\n    <div className=\"prediction-history-page bg-gray-800 min-h-screen flex flex-col items-center justify-start py-10\">\n      <div className=\"container flex mr-12\">\n        <div className=\"left-section w-3/4 text-center\">\n          <h1 className=\"text-4xl font-bold mb-4\">Prediction History</h1>\n          {predictionHistory && (\n            <ul className=\"prediction-list\">\n              {formatPredictionHistory(predictionHistory).map((prediction, index) => (\n                <li key={index} className=\"mb-3\">\n                  {prediction}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className=\"right-section w-1/2 text-center\">\n          <h1 className=\"text-4xl font-bold mb-4\">Prediction Rate By Team</h1>\n          <div className=\"sort-button-container\">\n            <button className=\"sort-button\" onClick={handleSortByHighest}>\n              Sort by Highest Percentage\n            </button>\n            <button className=\"sort-button\" onClick={handleSortByLowest}>\n              Sort by Lowest Percentage\n            </button>\n          </div>\n          {teamRecords && (\n            <ul className=\"prediction-list\">\n              {formatTeamRecords(teamRecords).map((teamRecord, index) => (\n                <li key={index} className=\"mb-3\">\n                  {teamRecord}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PredictionHistoryPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}